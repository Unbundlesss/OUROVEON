//   _______ _______ ______ _______ ___ ___ _______ _______ _______
//  |       |   |   |   __ \       |   |   |    ___|       |    |  |
//  |   -   |   |   |      <   -   |   |   |    ___|   -   |       |
//  |_______|_______|___|__|_______|\_____/|_______|_______|__|____|
//  ishani.org 2022              e.t.c.                  MIT License
//
//
//

#include "pch.h"

#include "gfx/gl/enumstring.h"

namespace gl {

const char* enumToString( const uint32_t value )
{
    switch ( value )
    {
        default:
        return "UNKNOWN";
        break;

        case 0x0001: return "GL_LINES";
        case 0x0002: return "GL_LINE_LOOP";
        case 0x0003: return "GL_LINE_STRIP";
        case 0x0004: return "GL_TRIANGLES";
        case 0x0005: return "GL_TRIANGLE_STRIP";
        case 0x0006: return "GL_TRIANGLE_FAN";
        case 0x0104: return "GL_ADD";
        case 0x0200: return "GL_NEVER";
        case 0x0201: return "GL_LESS";
        case 0x0202: return "GL_EQUAL";
        case 0x0203: return "GL_LEQUAL";
        case 0x0204: return "GL_GREATER";
        case 0x0205: return "GL_NOTEQUAL";
        case 0x0206: return "GL_GEQUAL";
        case 0x0207: return "GL_ALWAYS";
        case 0x0300: return "GL_SRC_COLOR";
        case 0x0301: return "GL_ONE_MINUS_SRC_COLOR";
        case 0x0302: return "GL_SRC_ALPHA";
        case 0x0303: return "GL_ONE_MINUS_SRC_ALPHA";
        case 0x0304: return "GL_DST_ALPHA";
        case 0x0305: return "GL_ONE_MINUS_DST_ALPHA";
        case 0x0306: return "GL_DST_COLOR";
        case 0x0307: return "GL_ONE_MINUS_DST_COLOR";
        case 0x0308: return "GL_SRC_ALPHA_SATURATE";
        case 0x0404: return "GL_FRONT";
        case 0x0405: return "GL_BACK";
        case 0x0408: return "GL_FRONT_AND_BACK";
        case 0x0500: return "GL_INVALID_ENUM";
        case 0x0501: return "GL_INVALID_VALUE";
        case 0x0502: return "GL_INVALID_OPERATION";
        case 0x0503: return "GL_STACK_OVERFLOW";
        case 0x0504: return "GL_STACK_UNDERFLOW";
        case 0x0505: return "GL_OUT_OF_MEMORY";
        case 0x0800: return "GL_EXP";
        case 0x0801: return "GL_EXP2";
        case 0x0900: return "GL_CW";
        case 0x0901: return "GL_CCW";
        case 0x0B10: return "GL_POINT_SMOOTH";
        case 0x0B12: return "GL_SMOOTH_POINT_SIZE_RANGE";
        case 0x0B20: return "GL_LINE_SMOOTH";
        case 0x0B22: return "GL_SMOOTH_LINE_WIDTH_RANGE";
        case 0x0B44: return "GL_CULL_FACE";
        case 0x0B50: return "GL_LIGHTING";
        case 0x0B52: return "GL_LIGHT_MODEL_TWO_SIDE";
        case 0x0B53: return "GL_LIGHT_MODEL_AMBIENT";
        case 0x0B57: return "GL_COLOR_MATERIAL";
        case 0x0B60: return "GL_FOG";
        case 0x0B62: return "GL_FOG_DENSITY";
        case 0x0B63: return "GL_FOG_START";
        case 0x0B64: return "GL_FOG_END";
        case 0x0B65: return "GL_FOG_MODE";
        case 0x0B66: return "GL_FOG_COLOR";
        case 0x0B71: return "GL_DEPTH_TEST";
        case 0x0B90: return "GL_STENCIL_TEST";
        case 0x0BA1: return "GL_NORMALIZE";
        case 0x0BC0: return "GL_ALPHA_TEST";
        case 0x0BD0: return "GL_DITHER";
        case 0x0BE2: return "GL_BLEND";
        case 0x0BF2: return "GL_COLOR_LOGIC_OP";
        case 0x0C11: return "GL_SCISSOR_TEST";
        case 0x0C50: return "GL_PERSPECTIVE_CORRECTION_HINT";
        case 0x0C51: return "GL_POINT_SMOOTH_HINT";
        case 0x0C52: return "GL_LINE_SMOOTH_HINT";
        case 0x0C53: return "GL_POLYGON_SMOOTH_HINT";
        case 0x0C54: return "GL_FOG_HINT";
        case 0x0CF5: return "GL_UNPACK_ALIGNMENT";
        case 0x0D05: return "GL_PACK_ALIGNMENT";
        case 0x0D31: return "GL_MAX_LIGHTS";
        case 0x0D33: return "GL_MAX_TEXTURE_SIZE";
        case 0x0D36: return "GL_MAX_MODELVIEW_STACK_DEPTH";
        case 0x0D38: return "GL_MAX_PROJECTION_STACK_DEPTH";
        case 0x0D39: return "GL_MAX_TEXTURE_STACK_DEPTH";
        case 0x0D3A: return "GL_MAX_VIEWPORT_DIMS";
        case 0x0D50: return "GL_SUBPIXEL_BITS";
        case 0x0D52: return "GL_RED_BITS";
        case 0x0D53: return "GL_GREEN_BITS";
        case 0x0D54: return "GL_BLUE_BITS";
        case 0x0D55: return "GL_ALPHA_BITS";
        case 0x0D56: return "GL_DEPTH_BITS";
        case 0x0D57: return "GL_STENCIL_BITS";
        case 0x0DE1: return "GL_TEXTURE_2D";
        case 0x1100: return "GL_DONT_CARE";
        case 0x1101: return "GL_FASTEST";
        case 0x1102: return "GL_NICEST";
        case 0x1200: return "GL_AMBIENT";
        case 0x1201: return "GL_DIFFUSE";
        case 0x1202: return "GL_SPECULAR";
        case 0x1203: return "GL_POSITION";
        case 0x1204: return "GL_SPOT_DIRECTION";
        case 0x1205: return "GL_SPOT_EXPONENT";
        case 0x1206: return "GL_SPOT_CUTOFF";
        case 0x1207: return "GL_CONSTANT_ATTENUATION";
        case 0x1208: return "GL_LINEAR_ATTENUATION";
        case 0x1209: return "GL_QUADRATIC_ATTENUATION";
        case 0x1400: return "GL_BYTE";
        case 0x1401: return "GL_UNSIGNED_BYTE";
        case 0x1402: return "GL_SHORT";
        case 0x1403: return "GL_UNSIGNED_SHORT";
        case 0x1406: return "GL_FLOAT";
        case 0x140C: return "GL_FIXED";
        case 0x1500: return "GL_CLEAR";
        case 0x1501: return "GL_AND";
        case 0x1502: return "GL_AND_REVERSE";
        case 0x1503: return "GL_COPY";
        case 0x1504: return "GL_AND_INVERTED";
        case 0x1505: return "GL_NOOP";
        case 0x1506: return "GL_XOR";
        case 0x1507: return "GL_OR";
        case 0x1508: return "GL_NOR";
        case 0x1509: return "GL_EQUIV";
        case 0x150A: return "GL_INVERT";
        case 0x150B: return "GL_OR_REVERSE";
        case 0x150C: return "GL_COPY_INVERTED";
        case 0x150D: return "GL_OR_INVERTED";
        case 0x150E: return "GL_NAND";
        case 0x150F: return "GL_SET";
        case 0x1600: return "GL_EMISSION";
        case 0x1601: return "GL_SHININESS";
        case 0x1602: return "GL_AMBIENT_AND_DIFFUSE";
        case 0x1700: return "GL_MODELVIEW";
        case 0x1701: return "GL_PROJECTION";
        case 0x1702: return "GL_TEXTURE";
        case 0x1906: return "GL_ALPHA";
        case 0x1907: return "GL_RGB";
        case 0x1908: return "GL_RGBA";
        case 0x1909: return "GL_LUMINANCE";
        case 0x190A: return "GL_LUMINANCE_ALPHA";
        case 0x1D00: return "GL_FLAT";
        case 0x1D01: return "GL_SMOOTH";
        case 0x1E00: return "GL_KEEP";
        case 0x1E01: return "GL_REPLACE";
        case 0x1E02: return "GL_INCR";
        case 0x1E03: return "GL_DECR";
        case 0x1F00: return "GL_VENDOR";
        case 0x1F01: return "GL_RENDERER";
        case 0x1F02: return "GL_VERSION";
        case 0x1F03: return "GL_EXTENSIONS";
        case 0x2100: return "GL_MODULATE";
        case 0x2101: return "GL_DECAL";
        case 0x2200: return "GL_TEXTURE_ENV_MODE";
        case 0x2201: return "GL_TEXTURE_ENV_COLOR";
        case 0x2300: return "GL_TEXTURE_ENV";
        case 0x2600: return "GL_NEAREST";
        case 0x2601: return "GL_LINEAR";
        case 0x2700: return "GL_NEAREST_MIPMAP_NEAREST";
        case 0x2701: return "GL_LINEAR_MIPMAP_NEAREST";
        case 0x2702: return "GL_NEAREST_MIPMAP_LINEAR";
        case 0x2703: return "GL_LINEAR_MIPMAP_LINEAR";
        case 0x2800: return "GL_TEXTURE_MAG_FILTER";
        case 0x2801: return "GL_TEXTURE_MIN_FILTER";
        case 0x2802: return "GL_TEXTURE_WRAP_S";
        case 0x2803: return "GL_TEXTURE_WRAP_T";

        case 0x8000 : return "GL_ABGR_EXT";
        case 0x8001 : return "GL_CONSTANT_COLOR";
        case 0x8002 : return "GL_ONE_MINUS_CONSTANT_COLOR";
        case 0x8003 : return "GL_CONSTANT_ALPHA";
        case 0x8004 : return "GL_ONE_MINUS_CONSTANT_ALPHA";
        case 0x8005 : return "GL_BLEND_COLOR";
        case 0x8006 : return "GL_FUNC_ADD";
        case 0x8007 : return "GL_MIN";
        case 0x8008 : return "GL_MAX";
        case 0x8009 : return "GL_BLEND_EQUATION";
        case 0x800A : return "GL_FUNC_SUBTRACT";
        case 0x800B : return "GL_FUNC_REVERSE_SUBTRACT";
        case 0x800C : return "GL_CMYK_EXT";
        case 0x800D : return "GL_CMYKA_EXT";
        case 0x800E : return "GL_PACK_CMYK_HINT_EXT";
        case 0x800F : return "GL_UNPACK_CMYK_HINT_EXT";
        case 0x8010 : return "GL_CONVOLUTION_1D";
        case 0x8011 : return "GL_CONVOLUTION_2D";
        case 0x8012 : return "GL_SEPARABLE_2D";
        case 0x8013 : return "GL_CONVOLUTION_BORDER_MODE";
        case 0x8014 : return "GL_CONVOLUTION_FILTER_SCALE";
        case 0x8015 : return "GL_CONVOLUTION_FILTER_BIAS";
        case 0x8016 : return "GL_REDUCE";
        case 0x8017 : return "GL_CONVOLUTION_FORMAT";
        case 0x8018 : return "GL_CONVOLUTION_WIDTH";
        case 0x8019 : return "GL_CONVOLUTION_HEIGHT";
        case 0x801A : return "GL_MAX_CONVOLUTION_WIDTH";
        case 0x801B : return "GL_MAX_CONVOLUTION_HEIGHT";
        case 0x801C : return "GL_POST_CONVOLUTION_RED_SCALE";
        case 0x801D : return "GL_POST_CONVOLUTION_GREEN_SCALE";
        case 0x801E : return "GL_POST_CONVOLUTION_BLUE_SCALE";
        case 0x801F : return "GL_POST_CONVOLUTION_ALPHA_SCALE";
        case 0x8020 : return "GL_POST_CONVOLUTION_RED_BIAS";
        case 0x8021 : return "GL_POST_CONVOLUTION_GREEN_BIAS";
        case 0x8022 : return "GL_POST_CONVOLUTION_BLUE_BIAS";
        case 0x8023 : return "GL_POST_CONVOLUTION_ALPHA_BIAS";
        case 0x8024 : return "GL_HISTOGRAM";
        case 0x8025 : return "GL_PROXY_HISTOGRAM";
        case 0x8026 : return "GL_HISTOGRAM_WIDTH";
        case 0x8027 : return "GL_HISTOGRAM_FORMAT";
        case 0x8028 : return "GL_HISTOGRAM_RED_SIZE";
        case 0x8029 : return "GL_HISTOGRAM_GREEN_SIZE";
        case 0x802A : return "GL_HISTOGRAM_BLUE_SIZE";
        case 0x802B : return "GL_HISTOGRAM_ALPHA_SIZE";
        case 0x802C : return "GL_HISTOGRAM_LUMINANCE_SIZE";
        case 0x802D : return "GL_HISTOGRAM_SINK";
        case 0x802E : return "GL_MINMAX";
        case 0x802F : return "GL_MINMAX_FORMAT";
        case 0x8030 : return "GL_MINMAX_SINK";
        case 0x8031 : return "GL_TABLE_TOO_LARGE";
        case 0x8032 : return "GL_UNSIGNED_BYTE_3_3_2";
        case 0x8033 : return "GL_UNSIGNED_SHORT_4_4_4_4";
        case 0x8034 : return "GL_UNSIGNED_SHORT_5_5_5_1";
        case 0x8035 : return "GL_UNSIGNED_INT_8_8_8_8";
        case 0x8036 : return "GL_UNSIGNED_INT_10_10_10_2";
        case 0x8037 : return "GL_POLYGON_OFFSET_EXT";
        case 0x8039 : return "GL_POLYGON_OFFSET_BIAS_EXT";
        case 0x803A : return "GL_RESCALE_NORMAL_EXT";
        case 0x803B : return "GL_ALPHA4_EXT";
        case 0x803C : return "GL_ALPHA8_EXT";
        case 0x803D : return "GL_ALPHA12_EXT";
        case 0x803E : return "GL_ALPHA16_EXT";
        case 0x803F : return "GL_LUMINANCE4_EXT";
        case 0x8040 : return "GL_LUMINANCE8_EXT";
        case 0x8041 : return "GL_LUMINANCE12_EXT";
        case 0x8042 : return "GL_LUMINANCE16_EXT";
        case 0x8043 : return "GL_LUMINANCE4_ALPHA4_EXT";
        case 0x8044 : return "GL_LUMINANCE6_ALPHA2_EXT";
        case 0x8045 : return "GL_LUMINANCE8_ALPHA8_EXT";
        case 0x8046 : return "GL_LUMINANCE12_ALPHA4_EXT";
        case 0x8047 : return "GL_LUMINANCE12_ALPHA12_EXT";
        case 0x8048 : return "GL_LUMINANCE16_ALPHA16_EXT";
        case 0x8049 : return "GL_INTENSITY_EXT";
        case 0x804A : return "GL_INTENSITY4_EXT";
        case 0x804B : return "GL_INTENSITY8_EXT";
        case 0x804C : return "GL_INTENSITY12_EXT";
        case 0x804D : return "GL_INTENSITY16_EXT";
        case 0x804E : return "GL_RGB2_EXT";
        case 0x804F : return "GL_RGB4_EXT";
        case 0x8050 : return "GL_RGB5_EXT";
        case 0x8051 : return "GL_RGB8_EXT";
        case 0x8052 : return "GL_RGB10_EXT";
        case 0x8053 : return "GL_RGB12_EXT";
        case 0x8054 : return "GL_RGB16_EXT";
        case 0x8055 : return "GL_RGBA2_EXT";
        case 0x8056 : return "GL_RGBA4_EXT";
        case 0x8057 : return "GL_RGB5_A1_EXT";
        case 0x8058 : return "GL_RGBA8_EXT";
        case 0x8059 : return "GL_RGB10_A2_EXT";
        case 0x805A : return "GL_RGBA12_EXT";
        case 0x805B : return "GL_RGBA16_EXT";
        case 0x805C : return "GL_TEXTURE_RED_SIZE_EXT";
        case 0x805D : return "GL_TEXTURE_GREEN_SIZE_EXT";
        case 0x805E : return "GL_TEXTURE_BLUE_SIZE_EXT";
        case 0x805F : return "GL_TEXTURE_ALPHA_SIZE_EXT";
        case 0x8060 : return "GL_TEXTURE_LUMINANCE_SIZE_EXT";
        case 0x8061 : return "GL_TEXTURE_INTENSITY_SIZE_EXT";
        case 0x8062 : return "GL_REPLACE_EXT";
        case 0x8063 : return "GL_PROXY_TEXTURE_1D_EXT";
        case 0x8064 : return "GL_PROXY_TEXTURE_2D_EXT";
        case 0x8065 : return "GL_TEXTURE_TOO_LARGE_EXT";
        case 0x8066 : return "GL_TEXTURE_PRIORITY_EXT";
        case 0x8067 : return "GL_TEXTURE_RESIDENT_EXT";
        case 0x8068 : return "GL_TEXTURE_1D_BINDING_EXT";
        case 0x8069 : return "GL_TEXTURE_2D_BINDING_EXT";
        case 0x806A : return "GL_TEXTURE_3D_BINDING_EXT";
        case 0x806B : return "GL_PACK_SKIP_IMAGES";
        case 0x806C : return "GL_PACK_IMAGE_HEIGHT";
        case 0x806D : return "GL_UNPACK_SKIP_IMAGES";
        case 0x806E : return "GL_UNPACK_IMAGE_HEIGHT";
        case 0x806F : return "GL_TEXTURE_3D";
        case 0x8070 : return "GL_PROXY_TEXTURE_3D";
        case 0x8071 : return "GL_TEXTURE_DEPTH";
        case 0x8072 : return "GL_TEXTURE_WRAP_R";
        case 0x8073 : return "GL_MAX_3D_TEXTURE_SIZE";
        case 0x8074 : return "GL_VERTEX_ARRAY_EXT";
        case 0x8075 : return "GL_NORMAL_ARRAY_EXT";
        case 0x8076 : return "GL_COLOR_ARRAY_EXT";
        case 0x8077 : return "GL_INDEX_ARRAY_EXT";
        case 0x8078 : return "GL_TEXTURE_COORD_ARRAY_EXT";
        case 0x8079 : return "GL_EDGE_FLAG_ARRAY_EXT";
        case 0x807A : return "GL_VERTEX_ARRAY_SIZE_EXT";
        case 0x807B : return "GL_VERTEX_ARRAY_TYPE_EXT";
        case 0x807C : return "GL_VERTEX_ARRAY_STRIDE_EXT";
        case 0x807D : return "GL_VERTEX_ARRAY_COUNT_EXT";
        case 0x807E : return "GL_NORMAL_ARRAY_TYPE_EXT";
        case 0x807F : return "GL_NORMAL_ARRAY_STRIDE_EXT";
        case 0x8080 : return "GL_NORMAL_ARRAY_COUNT_EXT";
        case 0x8081 : return "GL_COLOR_ARRAY_SIZE_EXT";
        case 0x8082 : return "GL_COLOR_ARRAY_TYPE_EXT";
        case 0x8083 : return "GL_COLOR_ARRAY_STRIDE_EXT";
        case 0x8084 : return "GL_COLOR_ARRAY_COUNT_EXT";
        case 0x8085 : return "GL_INDEX_ARRAY_TYPE_EXT";
        case 0x8086 : return "GL_INDEX_ARRAY_STRIDE_EXT";
        case 0x8087 : return "GL_INDEX_ARRAY_COUNT_EXT";
        case 0x8088 : return "GL_TEXTURE_COORD_ARRAY_SIZE_EXT";
        case 0x8089 : return "GL_TEXTURE_COORD_ARRAY_TYPE_EXT";
        case 0x808A : return "GL_TEXTURE_COORD_ARRAY_STRIDE_EXT";
        case 0x808B : return "GL_TEXTURE_COORD_ARRAY_COUNT_EXT";
        case 0x808C : return "GL_EDGE_FLAG_ARRAY_STRIDE_EXT";
        case 0x808D : return "GL_EDGE_FLAG_ARRAY_COUNT_EXT";
        case 0x808E : return "GL_VERTEX_ARRAY_POINTER_EXT";
        case 0x808F : return "GL_NORMAL_ARRAY_POINTER_EXT";
        case 0x8090 : return "GL_COLOR_ARRAY_POINTER_EXT";
        case 0x8091 : return "GL_INDEX_ARRAY_POINTER_EXT";
        case 0x8092 : return "GL_TEXTURE_COORD_ARRAY_POINTER_EXT";
        case 0x8093 : return "GL_EDGE_FLAG_ARRAY_POINTER_EXT";
        case 0x8094 : return "GL_INTERLACE_SGIX";
        case 0x8095 : return "GL_DETAIL_TEXTURE_2D_SGIS";
        case 0x8096 : return "GL_DETAIL_TEXTURE_2D_BINDING_SGIS";
        case 0x8097 : return "GL_LINEAR_DETAIL_SGIS";
        case 0x8098 : return "GL_LINEAR_DETAIL_ALPHA_SGIS";
        case 0x8099 : return "GL_LINEAR_DETAIL_COLOR_SGIS";
        case 0x809A : return "GL_DETAIL_TEXTURE_LEVEL_SGIS";
        case 0x809B : return "GL_DETAIL_TEXTURE_MODE_SGIS";
        case 0x809C : return "GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS";
        case 0x809D : return "GL_MULTISAMPLE";
        case 0x809E : return "GL_SAMPLE_ALPHA_TO_COVERAGE";
        case 0x809F : return "GL_SAMPLE_ALPHA_TO_ONE";
        case 0x80A0 : return "GL_SAMPLE_COVERAGE";
        case 0x80A1 : return "GL_1PASS_EXT";
        case 0x80A2 : return "GL_2PASS_0_EXT";
        case 0x80A3 : return "GL_2PASS_1_EXT";
        case 0x80A4 : return "GL_4PASS_0_EXT";
        case 0x80A5 : return "GL_4PASS_1_EXT";
        case 0x80A6 : return "GL_4PASS_2_EXT";
        case 0x80A7 : return "GL_4PASS_3_EXT";
        case 0x80A8 : return "GL_SAMPLE_BUFFERS";
        case 0x80A9 : return "GL_SAMPLES";
        case 0x80AA : return "GL_SAMPLE_COVERAGE_VALUE";
        case 0x80AB : return "GL_SAMPLE_COVERAGE_INVERT";
        case 0x80AC : return "GL_SAMPLE_PATTERN_EXT";
        case 0x80AD : return "GL_LINEAR_SHARPEN_SGIS";
        case 0x80AE : return "GL_LINEAR_SHARPEN_ALPHA_SGIS";
        case 0x80AF : return "GL_LINEAR_SHARPEN_COLOR_SGIS";
        case 0x80B0 : return "GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS";
        case 0x80B1 : return "GL_COLOR_MATRIX";
        case 0x80B2 : return "GL_COLOR_MATRIX_STACK_DEPTH";
        case 0x80B3 : return "GL_MAX_COLOR_MATRIX_STACK_DEPTH";
        case 0x80B4 : return "GL_POST_COLOR_MATRIX_RED_SCALE";
        case 0x80B5 : return "GL_POST_COLOR_MATRIX_GREEN_SCALE";
        case 0x80B6 : return "GL_POST_COLOR_MATRIX_BLUE_SCALE";
        case 0x80B7 : return "GL_POST_COLOR_MATRIX_ALPHA_SCALE";
        case 0x80B8 : return "GL_POST_COLOR_MATRIX_RED_BIAS";
        case 0x80B9 : return "GL_POST_COLOR_MATRIX_GREEN_BIAS";
        case 0x80BA : return "GL_POST_COLOR_MATRIX_BLUE_BIAS";
        case 0x80BB : return "GL_POST_COLOR_MATRIX_ALPHA_BIAS";
        case 0x80BC : return "GL_TEXTURE_COLOR_TABLE_SGI";
        case 0x80BD : return "GL_PROXY_TEXTURE_COLOR_TABLE_SGI";
        case 0x80BE : return "GL_TEXTURE_ENV_BIAS_SGIX";
        case 0x80BF : return "GL_SHADOW_AMBIENT_SGIX";
        case 0x80C8 : return "GL_BLEND_DST_RGB";
        case 0x80C9 : return "GL_BLEND_SRC_RGB";
        case 0x80CA : return "GL_BLEND_DST_ALPHA";
        case 0x80CB : return "GL_BLEND_SRC_ALPHA";
        case 0x80CC : return "GL_422_EXT";
        case 0x80CD : return "GL_422_REV_EXT";
        case 0x80CE : return "GL_422_AVERAGE_EXT";
        case 0x80CF : return "GL_422_REV_AVERAGE_EXT";
        case 0x80D0 : return "GL_COLOR_TABLE";
        case 0x80D1 : return "GL_POST_CONVOLUTION_COLOR_TABLE";
        case 0x80D2 : return "GL_POST_COLOR_MATRIX_COLOR_TABLE";
        case 0x80D3 : return "GL_PROXY_COLOR_TABLE";
        case 0x80D4 : return "GL_PROXY_POST_CONVOLUTION_COLOR_TABLE";
        case 0x80D5 : return "GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE";
        case 0x80D6 : return "GL_COLOR_TABLE_SCALE";
        case 0x80D7 : return "GL_COLOR_TABLE_BIAS";
        case 0x80D8 : return "GL_COLOR_TABLE_FORMAT";
        case 0x80D9 : return "GL_COLOR_TABLE_WIDTH";
        case 0x80DA : return "GL_COLOR_TABLE_RED_SIZE";
        case 0x80DB : return "GL_COLOR_TABLE_GREEN_SIZE";
        case 0x80DC : return "GL_COLOR_TABLE_BLUE_SIZE";
        case 0x80DD : return "GL_COLOR_TABLE_ALPHA_SIZE";
        case 0x80DE : return "GL_COLOR_TABLE_LUMINANCE_SIZE";
        case 0x80DF : return "GL_COLOR_TABLE_INTENSITY_SIZE";
        case 0x80E0 : return "GL_BGR";
        case 0x80E1 : return "GL_BGRA";
        case 0x80E2 : return "GL_COLOR_INDEX1_EXT";
        case 0x80E3 : return "GL_COLOR_INDEX2_EXT";
        case 0x80E4 : return "GL_COLOR_INDEX4_EXT";
        case 0x80E5 : return "GL_COLOR_INDEX8_EXT";
        case 0x80E6 : return "GL_COLOR_INDEX12_EXT";
        case 0x80E7 : return "GL_COLOR_INDEX16_EXT";
        case 0x80E8 : return "GL_MAX_ELEMENTS_VERTICES";
        case 0x80E9 : return "GL_MAX_ELEMENTS_INDICES";
        case 0x80EA : return "GL_PHONG_WIN";
        case 0x80EB : return "GL_PHONG_HINT_WIN";
        case 0x80EC : return "GL_FOG_SPECULAR_TEXTURE_WIN";
        case 0x80ED : return "GL_TEXTURE_INDEX_SIZE_EXT";
        case 0x80EE : return "GL_PARAMETER_BUFFER";
        case 0x80EF : return "GL_PARAMETER_BUFFER_BINDING";
        case 0x80F0 : return "GL_CLIP_VOLUME_CLIPPING_HINT_EXT";
        case 0x8110 : return "GL_DUAL_ALPHA4_SGIS";
        case 0x8111 : return "GL_DUAL_ALPHA8_SGIS";
        case 0x8112 : return "GL_DUAL_ALPHA12_SGIS";
        case 0x8113 : return "GL_DUAL_ALPHA16_SGIS";
        case 0x8114 : return "GL_DUAL_LUMINANCE4_SGIS";
        case 0x8115 : return "GL_DUAL_LUMINANCE8_SGIS";
        case 0x8116 : return "GL_DUAL_LUMINANCE12_SGIS";
        case 0x8117 : return "GL_DUAL_LUMINANCE16_SGIS";
        case 0x8118 : return "GL_DUAL_INTENSITY4_SGIS";
        case 0x8119 : return "GL_DUAL_INTENSITY8_SGIS";
        case 0x811A : return "GL_DUAL_INTENSITY12_SGIS";
        case 0x811B : return "GL_DUAL_INTENSITY16_SGIS";
        case 0x811C : return "GL_DUAL_LUMINANCE_ALPHA4_SGIS";
        case 0x811D : return "GL_DUAL_LUMINANCE_ALPHA8_SGIS";
        case 0x811E : return "GL_QUAD_ALPHA4_SGIS";
        case 0x811F : return "GL_QUAD_ALPHA8_SGIS";
        case 0x8120 : return "GL_QUAD_LUMINANCE4_SGIS";
        case 0x8121 : return "GL_QUAD_LUMINANCE8_SGIS";
        case 0x8122 : return "GL_QUAD_INTENSITY4_SGIS";
        case 0x8123 : return "GL_QUAD_INTENSITY8_SGIS";
        case 0x8124 : return "GL_DUAL_TEXTURE_SELECT_SGIS";
        case 0x8125 : return "GL_QUAD_TEXTURE_SELECT_SGIS";
        case 0x8126 : return "GL_POINT_SIZE_MIN";
        case 0x8127 : return "GL_POINT_SIZE_MAX";
        case 0x8128 : return "GL_POINT_FADE_THRESHOLD_SIZE";
        case 0x8129 : return "GL_DISTANCE_ATTENUATION_EXT";
        case 0x812A : return "GL_FOG_FUNC_SGIS";
        case 0x812B : return "GL_FOG_FUNC_POINTS_SGIS";
        case 0x812C : return "GL_MAX_FOG_FUNC_POINTS_SGIS";
        case 0x812D : return "GL_CLAMP_TO_BORDER";
        case 0x812E : return "GL_TEXTURE_MULTI_BUFFER_HINT_SGIX";
        case 0x812F : return "GL_CLAMP_TO_EDGE";
        case 0x8130 : return "GL_PACK_SKIP_VOLUMES_SGIS";
        case 0x8131 : return "GL_PACK_IMAGE_DEPTH_SGIS";
        case 0x8132 : return "GL_UNPACK_SKIP_VOLUMES_SGIS";
        case 0x8133 : return "GL_UNPACK_IMAGE_DEPTH_SGIS";
        case 0x8134 : return "GL_TEXTURE_4D_SGIS";
        case 0x8135 : return "GL_PROXY_TEXTURE_4D_SGIS";
        case 0x8136 : return "GL_TEXTURE_4DSIZE_SGIS";
        case 0x8137 : return "GL_TEXTURE_WRAP_Q_SGIS";
        case 0x8138 : return "GL_MAX_4D_TEXTURE_SIZE_SGIS";
        case 0x8139 : return "GL_PIXEL_TEX_GEN_SGIX";
        case 0x813A : return "GL_TEXTURE_MIN_LOD";
        case 0x813B : return "GL_TEXTURE_MAX_LOD";
        case 0x813C : return "GL_TEXTURE_BASE_LEVEL";
        case 0x813D : return "GL_TEXTURE_MAX_LEVEL";
        case 0x813E : return "GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX";
        case 0x813F : return "GL_PIXEL_TILE_CACHE_INCREMENT_SGIX";
        case 0x8140 : return "GL_PIXEL_TILE_WIDTH_SGIX";
        case 0x8141 : return "GL_PIXEL_TILE_HEIGHT_SGIX";
        case 0x8142 : return "GL_PIXEL_TILE_GRID_WIDTH_SGIX";
        case 0x8143 : return "GL_PIXEL_TILE_GRID_HEIGHT_SGIX";
        case 0x8144 : return "GL_PIXEL_TILE_GRID_DEPTH_SGIX";
        case 0x8145 : return "GL_PIXEL_TILE_CACHE_SIZE_SGIX";
        case 0x8146 : return "GL_FILTER4_SGIS";
        case 0x8147 : return "GL_TEXTURE_FILTER4_SIZE_SGIS";
        case 0x8148 : return "GL_SPRITE_SGIX";
        case 0x8149 : return "GL_SPRITE_MODE_SGIX";
        case 0x814A : return "GL_SPRITE_AXIS_SGIX";
        case 0x814B : return "GL_SPRITE_TRANSLATION_SGIX";
        case 0x814C : return "GL_SPRITE_AXIAL_SGIX";
        case 0x814D : return "GL_SPRITE_OBJECT_ALIGNED_SGIX";
        case 0x814E : return "GL_SPRITE_EYE_ALIGNED_SGIX";
        case 0x814F : return "GL_TEXTURE_4D_BINDING_SGIS";
        case 0x8150 : return "GL_IGNORE_BORDER_HP";
        case 0x8151 : return "GL_CONSTANT_BORDER";
        case 0x8153 : return "GL_REPLICATE_BORDER";
        case 0x8154 : return "GL_CONVOLUTION_BORDER_COLOR";
        case 0x8155 : return "GL_IMAGE_SCALE_X_HP";
        case 0x8156 : return "GL_IMAGE_SCALE_Y_HP";
        case 0x8157 : return "GL_IMAGE_TRANSLATE_X_HP";
        case 0x8158 : return "GL_IMAGE_TRANSLATE_Y_HP";
        case 0x8159 : return "GL_IMAGE_ROTATE_ANGLE_HP";
        case 0x815A : return "GL_IMAGE_ROTATE_ORIGIN_X_HP";
        case 0x815B : return "GL_IMAGE_ROTATE_ORIGIN_Y_HP";
        case 0x815C : return "GL_IMAGE_MAG_FILTER_HP";
        case 0x815D : return "GL_IMAGE_MIN_FILTER_HP";
        case 0x815E : return "GL_IMAGE_CUBIC_WEIGHT_HP";
        case 0x815F : return "GL_CUBIC_HP";
        case 0x8160 : return "GL_AVERAGE_HP";
        case 0x8161 : return "GL_IMAGE_TRANSFORM_2D_HP";
        case 0x8162 : return "GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP";
        case 0x8163 : return "GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP";
        case 0x8165 : return "GL_OCCLUSION_TEST_HP";
        case 0x8166 : return "GL_OCCLUSION_TEST_RESULT_HP";
        case 0x8167 : return "GL_TEXTURE_LIGHTING_MODE_HP";
        case 0x8168 : return "GL_TEXTURE_POST_SPECULAR_HP";
        case 0x8169 : return "GL_TEXTURE_PRE_SPECULAR_HP";
        case 0x8170 : return "GL_LINEAR_CLIPMAP_LINEAR_SGIX";
        case 0x8171 : return "GL_TEXTURE_CLIPMAP_CENTER_SGIX";
        case 0x8172 : return "GL_TEXTURE_CLIPMAP_FRAME_SGIX";
        case 0x8173 : return "GL_TEXTURE_CLIPMAP_OFFSET_SGIX";
        case 0x8174 : return "GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX";
        case 0x8175 : return "GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX";
        case 0x8176 : return "GL_TEXTURE_CLIPMAP_DEPTH_SGIX";
        case 0x8177 : return "GL_MAX_CLIPMAP_DEPTH_SGIX";
        case 0x8178 : return "GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX";
        case 0x8179 : return "GL_POST_TEXTURE_FILTER_BIAS_SGIX";
        case 0x817A : return "GL_POST_TEXTURE_FILTER_SCALE_SGIX";
        case 0x817B : return "GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX";
        case 0x817C : return "GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX";
        case 0x817D : return "GL_REFERENCE_PLANE_SGIX";
        case 0x817E : return "GL_REFERENCE_PLANE_EQUATION_SGIX";
        case 0x817F : return "GL_IR_INSTRUMENT1_SGIX";
        case 0x8180 : return "GL_INSTRUMENT_BUFFER_POINTER_SGIX";
        case 0x8181 : return "GL_INSTRUMENT_MEASUREMENTS_SGIX";
        case 0x8182 : return "GL_LIST_PRIORITY_SGIX";
        case 0x8183 : return "GL_CALLIGRAPHIC_FRAGMENT_SGIX";
        case 0x818B : return "GL_FRAMEZOOM_SGIX";
        case 0x818C : return "GL_FRAMEZOOM_FACTOR_SGIX";
        case 0x818D : return "GL_MAX_FRAMEZOOM_FACTOR_SGIX";
        case 0x818E : return "GL_TEXTURE_LOD_BIAS_S_SGIX";
        case 0x818F : return "GL_TEXTURE_LOD_BIAS_T_SGIX";
        case 0x8190 : return "GL_TEXTURE_LOD_BIAS_R_SGIX";
        case 0x8191 : return "GL_GENERATE_MIPMAP";
        case 0x8192 : return "GL_GENERATE_MIPMAP_HINT";
        case 0x8194 : return "GL_GEOMETRY_DEFORMATION_SGIX";
        case 0x8195 : return "GL_TEXTURE_DEFORMATION_SGIX";
        case 0x8196 : return "GL_DEFORMATIONS_MASK_SGIX";
        case 0x8197 : return "GL_MAX_DEFORMATION_ORDER_SGIX";
        case 0x8198 : return "GL_FOG_OFFSET_SGIX";
        case 0x8199 : return "GL_FOG_OFFSET_VALUE_SGIX";
        case 0x819A : return "GL_TEXTURE_COMPARE_SGIX";
        case 0x819B : return "GL_TEXTURE_COMPARE_OPERATOR_SGIX";
        case 0x819C : return "GL_TEXTURE_LEQUAL_R_SGIX";
        case 0x819D : return "GL_TEXTURE_GEQUAL_R_SGIX";
        case 0x81A5 : return "GL_DEPTH_COMPONENT16";
        case 0x81A6 : return "GL_DEPTH_COMPONENT24";
        case 0x81A7 : return "GL_DEPTH_COMPONENT32";
        case 0x81A8 : return "GL_ARRAY_ELEMENT_LOCK_FIRST_EXT";
        case 0x81A9 : return "GL_ARRAY_ELEMENT_LOCK_COUNT_EXT";
        case 0x81AA : return "GL_CULL_VERTEX_EXT";
        case 0x81AB : return "GL_CULL_VERTEX_EYE_POSITION_EXT";
        case 0x81AC : return "GL_CULL_VERTEX_OBJECT_POSITION_EXT";
        case 0x81AD : return "GL_IUI_V2F_EXT";
        case 0x81AE : return "GL_IUI_V3F_EXT";
        case 0x81AF : return "GL_IUI_N3F_V2F_EXT";
        case 0x81B0 : return "GL_IUI_N3F_V3F_EXT";
        case 0x81B1 : return "GL_T2F_IUI_V2F_EXT";
        case 0x81B2 : return "GL_T2F_IUI_V3F_EXT";
        case 0x81B3 : return "GL_T2F_IUI_N3F_V2F_EXT";
        case 0x81B4 : return "GL_T2F_IUI_N3F_V3F_EXT";
        case 0x81B5 : return "GL_INDEX_TEST_EXT";
        case 0x81B6 : return "GL_INDEX_TEST_FUNC_EXT";
        case 0x81B7 : return "GL_INDEX_TEST_REF_EXT";
        case 0x81B8 : return "GL_INDEX_MATERIAL_EXT";
        case 0x81B9 : return "GL_INDEX_MATERIAL_PARAMETER_EXT";
        case 0x81BA : return "GL_INDEX_MATERIAL_FACE_EXT";
        case 0x81BB : return "GL_YCRCB_422_SGIX";
        case 0x81BC : return "GL_YCRCB_444_SGIX";
        case 0x81D4 : return "GL_WRAP_BORDER_SUN";
        case 0x81D5 : return "GL_UNPACK_CONSTANT_DATA_SUNX";
        case 0x81D6 : return "GL_TEXTURE_CONSTANT_DATA_SUNX";
        case 0x81D7 : return "GL_TRIANGLE_LIST_SUN";
        case 0x81D8 : return "GL_REPLACEMENT_CODE_SUN";
        case 0x81D9 : return "GL_GLOBAL_ALPHA_SUN";
        case 0x81DA : return "GL_GLOBAL_ALPHA_FACTOR_SUN";
        case 0x81EF : return "GL_TEXTURE_COLOR_WRITEMASK_SGIS";
        case 0x81F0 : return "GL_EYE_DISTANCE_TO_POINT_SGIS";
        case 0x81F1 : return "GL_OBJECT_DISTANCE_TO_POINT_SGIS";
        case 0x81F2 : return "GL_EYE_DISTANCE_TO_LINE_SGIS";
        case 0x81F3 : return "GL_OBJECT_DISTANCE_TO_LINE_SGIS";
        case 0x81F4 : return "GL_EYE_POINT_SGIS";
        case 0x81F5 : return "GL_OBJECT_POINT_SGIS";
        case 0x81F6 : return "GL_EYE_LINE_SGIS";
        case 0x81F7 : return "GL_OBJECT_LINE_SGIS";
        case 0x81F8 : return "GL_LIGHT_MODEL_COLOR_CONTROL";
        case 0x81F9 : return "GL_SINGLE_COLOR";
        case 0x81FA : return "GL_SEPARATE_SPECULAR_COLOR";
        case 0x81FB : return "GL_SHARED_TEXTURE_PALETTE_EXT";
        case 0x8200 : return "GL_TEXT_FRAGMENT_SHADER_ATI";
        case 0x8210 : return "GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING";
        case 0x8211 : return "GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE";
        case 0x8212 : return "GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE";
        case 0x8213 : return "GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE";
        case 0x8214 : return "GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE";
        case 0x8215 : return "GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE";
        case 0x8216 : return "GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE";
        case 0x8217 : return "GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE";
        case 0x8218 : return "GL_FRAMEBUFFER_DEFAULT";
        case 0x8219 : return "GL_FRAMEBUFFER_UNDEFINED";
        case 0x821A : return "GL_DEPTH_STENCIL_ATTACHMENT";
        case 0x821B : return "GL_MAJOR_VERSION";
        case 0x821C : return "GL_MINOR_VERSION";
        case 0x821D : return "GL_NUM_EXTENSIONS";
        case 0x821E : return "GL_CONTEXT_FLAGS";
        case 0x821F : return "GL_BUFFER_IMMUTABLE_STORAGE";
        case 0x8220 : return "GL_BUFFER_STORAGE_FLAGS";
        case 0x8221 : return "GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED";
        case 0x8222 : return "GL_INDEX";
        case 0x8225 : return "GL_COMPRESSED_RED";
        case 0x8226 : return "GL_COMPRESSED_RG";
        case 0x8227 : return "GL_RG";
        case 0x8228 : return "GL_RG_INTEGER";
        case 0x8229 : return "GL_R8";
        case 0x822A : return "GL_R16";
        case 0x822B : return "GL_RG8";
        case 0x822D : return "GL_R16F";
        case 0x822E : return "GL_R32F";
        case 0x822F : return "GL_RG16F";
        case 0x8230 : return "GL_RG32F";
        case 0x8231 : return "GL_R8I";
        case 0x8232 : return "GL_R8UI";
        case 0x8233 : return "GL_R16I";
        case 0x8234 : return "GL_R16UI";
        case 0x8235 : return "GL_R32I";
        case 0x8236 : return "GL_R32UI";
        case 0x8237 : return "GL_RG8I";
        case 0x8238 : return "GL_RG8UI";
        case 0x8239 : return "GL_RG16I";
        case 0x823A : return "GL_RG16UI";
        case 0x823B : return "GL_RG32I";
        case 0x823C : return "GL_RG32UI";
        case 0x8242 : return "GL_DEBUG_OUTPUT_SYNCHRONOUS";
        case 0x8243 : return "GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH";
        case 0x8244 : return "GL_DEBUG_CALLBACK_FUNCTION";
        case 0x8245 : return "GL_DEBUG_CALLBACK_USER_PARAM";
        case 0x8246 : return "GL_DEBUG_SOURCE_API";
        case 0x8247 : return "GL_DEBUG_SOURCE_WINDOW_SYSTEM";
        case 0x8248 : return "GL_DEBUG_SOURCE_SHADER_COMPILER";
        case 0x8249 : return "GL_DEBUG_SOURCE_THIRD_PARTY";
        case 0x824A : return "GL_DEBUG_SOURCE_APPLICATION";
        case 0x824B : return "GL_DEBUG_SOURCE_OTHER";
        case 0x824C : return "GL_DEBUG_TYPE_ERROR";
        case 0x824D : return "GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR";
        case 0x824E : return "GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR";
        case 0x824F : return "GL_DEBUG_TYPE_PORTABILITY";
        case 0x8250 : return "GL_DEBUG_TYPE_PERFORMANCE";
        case 0x8251 : return "GL_DEBUG_TYPE_OTHER";
        case 0x8252 : return "GL_LOSE_CONTEXT_ON_RESET";
        case 0x8253 : return "GL_GUILTY_CONTEXT_RESET";
        case 0x8254 : return "GL_INNOCENT_CONTEXT_RESET";
        case 0x8255 : return "GL_UNKNOWN_CONTEXT_RESET";
        case 0x8256 : return "GL_RESET_NOTIFICATION_STRATEGY";
        case 0x8257 : return "GL_PROGRAM_BINARY_RETRIEVABLE_HINT";
        case 0x8258 : return "GL_PROGRAM_SEPARABLE";
        case 0x8259 : return "GL_ACTIVE_PROGRAM";
        case 0x825A : return "GL_PROGRAM_PIPELINE_BINDING";
        case 0x825B : return "GL_MAX_VIEWPORTS";
        case 0x825C : return "GL_VIEWPORT_SUBPIXEL_BITS";
        case 0x825D : return "GL_VIEWPORT_BOUNDS_RANGE";
        case 0x825E : return "GL_LAYER_PROVOKING_VERTEX";
        case 0x825F : return "GL_VIEWPORT_INDEX_PROVOKING_VERTEX";
        case 0x8260 : return "GL_UNDEFINED_VERTEX";
        case 0x8261 : return "GL_NO_RESET_NOTIFICATION";
        case 0x8262 : return "GL_MAX_COMPUTE_SHARED_MEMORY_SIZE";
        case 0x8263 : return "GL_MAX_COMPUTE_UNIFORM_COMPONENTS";
        case 0x8264 : return "GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS";
        case 0x8265 : return "GL_MAX_COMPUTE_ATOMIC_COUNTERS";
        case 0x8266 : return "GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS";
        case 0x8267 : return "GL_COMPUTE_WORK_GROUP_SIZE";
        case 0x8268 : return "GL_DEBUG_TYPE_MARKER";
        case 0x8269 : return "GL_DEBUG_TYPE_PUSH_GROUP";
        case 0x826A : return "GL_DEBUG_TYPE_POP_GROUP";
        case 0x826B : return "GL_DEBUG_SEVERITY_NOTIFICATION";
        case 0x826C : return "GL_MAX_DEBUG_GROUP_STACK_DEPTH";
        case 0x826D : return "GL_DEBUG_GROUP_STACK_DEPTH";
        case 0x826E : return "GL_MAX_UNIFORM_LOCATIONS";
        case 0x826F : return "GL_INTERNALFORMAT_SUPPORTED";
        case 0x8270 : return "GL_INTERNALFORMAT_PREFERRED";
        case 0x8271 : return "GL_INTERNALFORMAT_RED_SIZE";
        case 0x8272 : return "GL_INTERNALFORMAT_GREEN_SIZE";
        case 0x8273 : return "GL_INTERNALFORMAT_BLUE_SIZE";
        case 0x8274 : return "GL_INTERNALFORMAT_ALPHA_SIZE";
        case 0x8275 : return "GL_INTERNALFORMAT_DEPTH_SIZE";
        case 0x8276 : return "GL_INTERNALFORMAT_STENCIL_SIZE";
        case 0x8277 : return "GL_INTERNALFORMAT_SHARED_SIZE";
        case 0x8278 : return "GL_INTERNALFORMAT_RED_TYPE";
        case 0x8279 : return "GL_INTERNALFORMAT_GREEN_TYPE";
        case 0x827A : return "GL_INTERNALFORMAT_BLUE_TYPE";
        case 0x827B : return "GL_INTERNALFORMAT_ALPHA_TYPE";
        case 0x827C : return "GL_INTERNALFORMAT_DEPTH_TYPE";
        case 0x827D : return "GL_INTERNALFORMAT_STENCIL_TYPE";
        case 0x827E : return "GL_MAX_WIDTH";
        case 0x827F : return "GL_MAX_HEIGHT";
        case 0x8280 : return "GL_MAX_DEPTH";
        case 0x8281 : return "GL_MAX_LAYERS";
        case 0x8282 : return "GL_MAX_COMBINED_DIMENSIONS";
        case 0x8283 : return "GL_COLOR_COMPONENTS";
        case 0x8284 : return "GL_DEPTH_COMPONENTS";
        case 0x8285 : return "GL_STENCIL_COMPONENTS";
        case 0x8286 : return "GL_COLOR_RENDERABLE";
        case 0x8287 : return "GL_DEPTH_RENDERABLE";
        case 0x8288 : return "GL_STENCIL_RENDERABLE";
        case 0x8289 : return "GL_FRAMEBUFFER_RENDERABLE";
        case 0x828A : return "GL_FRAMEBUFFER_RENDERABLE_LAYERED";
        case 0x828B : return "GL_FRAMEBUFFER_BLEND";
        case 0x828C : return "GL_READ_PIXELS";
        case 0x828D : return "GL_READ_PIXELS_FORMAT";
        case 0x828E : return "GL_READ_PIXELS_TYPE";
        case 0x828F : return "GL_TEXTURE_IMAGE_FORMAT";
        case 0x8290 : return "GL_TEXTURE_IMAGE_TYPE";
        case 0x8291 : return "GL_GET_TEXTURE_IMAGE_FORMAT";
        case 0x8292 : return "GL_GET_TEXTURE_IMAGE_TYPE";
        case 0x8293 : return "GL_MIPMAP";
        case 0x8294 : return "GL_MANUAL_GENERATE_MIPMAP";
        case 0x8295 : return "GL_AUTO_GENERATE_MIPMAP";
        case 0x8296 : return "GL_COLOR_ENCODING";
        case 0x8297 : return "GL_SRGB_READ";
        case 0x8298 : return "GL_SRGB_WRITE";
        case 0x829A : return "GL_FILTER";
        case 0x829B : return "GL_VERTEX_TEXTURE";
        case 0x829C : return "GL_TESS_CONTROL_TEXTURE";
        case 0x829D : return "GL_TESS_EVALUATION_TEXTURE";
        case 0x829E : return "GL_GEOMETRY_TEXTURE";
        case 0x829F : return "GL_FRAGMENT_TEXTURE";
        case 0x82A0 : return "GL_COMPUTE_TEXTURE";
        case 0x82A1 : return "GL_TEXTURE_SHADOW";
        case 0x82A2 : return "GL_TEXTURE_GATHER";
        case 0x82A3 : return "GL_TEXTURE_GATHER_SHADOW";
        case 0x82A4 : return "GL_SHADER_IMAGE_LOAD";
        case 0x82A5 : return "GL_SHADER_IMAGE_STORE";
        case 0x82A6 : return "GL_SHADER_IMAGE_ATOMIC";
        case 0x82A7 : return "GL_IMAGE_TEXEL_SIZE";
        case 0x82A8 : return "GL_IMAGE_COMPATIBILITY_CLASS";
        case 0x82A9 : return "GL_IMAGE_PIXEL_FORMAT";
        case 0x82AA : return "GL_IMAGE_PIXEL_TYPE";
        case 0x82AC : return "GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST";
        case 0x82AD : return "GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST";
        case 0x82AE : return "GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE";
        case 0x82AF : return "GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE";
        case 0x82B1 : return "GL_TEXTURE_COMPRESSED_BLOCK_WIDTH";
        case 0x82B2 : return "GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT";
        case 0x82B3 : return "GL_TEXTURE_COMPRESSED_BLOCK_SIZE";
        case 0x82B4 : return "GL_CLEAR_BUFFER";
        case 0x82B5 : return "GL_TEXTURE_VIEW";
        case 0x82B6 : return "GL_VIEW_COMPATIBILITY_CLASS";
        case 0x82B7 : return "GL_FULL_SUPPORT";
        case 0x82B8 : return "GL_CAVEAT_SUPPORT";
        case 0x82B9 : return "GL_IMAGE_CLASS_4_X_32";
        case 0x82BA : return "GL_IMAGE_CLASS_2_X_32";
        case 0x82BB : return "GL_IMAGE_CLASS_1_X_32";
        case 0x82BC : return "GL_IMAGE_CLASS_4_X_16";
        case 0x82BD : return "GL_IMAGE_CLASS_2_X_16";
        case 0x82BE : return "GL_IMAGE_CLASS_1_X_16";
        case 0x82BF : return "GL_IMAGE_CLASS_4_X_8";
        case 0x82C0 : return "GL_IMAGE_CLASS_2_X_8";
        case 0x82C1 : return "GL_IMAGE_CLASS_1_X_8";
        case 0x82C2 : return "GL_IMAGE_CLASS_11_11_10";
        case 0x82C3 : return "GL_IMAGE_CLASS_10_10_10_2";
        case 0x82C4 : return "GL_VIEW_CLASS_128_BITS";
        case 0x82C5 : return "GL_VIEW_CLASS_96_BITS";
        case 0x82C6 : return "GL_VIEW_CLASS_64_BITS";
        case 0x82C7 : return "GL_VIEW_CLASS_48_BITS";
        case 0x82C8 : return "GL_VIEW_CLASS_32_BITS";
        case 0x82C9 : return "GL_VIEW_CLASS_24_BITS";
        case 0x82CA : return "GL_VIEW_CLASS_16_BITS";
        case 0x82CB : return "GL_VIEW_CLASS_8_BITS";
        case 0x82CC : return "GL_VIEW_CLASS_S3TC_DXT1_RGB";
        case 0x82CD : return "GL_VIEW_CLASS_S3TC_DXT1_RGBA";
        case 0x82CE : return "GL_VIEW_CLASS_S3TC_DXT3_RGBA";
        case 0x82CF : return "GL_VIEW_CLASS_S3TC_DXT5_RGBA";
        case 0x82D0 : return "GL_VIEW_CLASS_RGTC1_RED";
        case 0x82D1 : return "GL_VIEW_CLASS_RGTC2_RG";
        case 0x82D2 : return "GL_VIEW_CLASS_BPTC_UNORM";
        case 0x82D3 : return "GL_VIEW_CLASS_BPTC_FLOAT";
        case 0x82D4 : return "GL_VERTEX_ATTRIB_BINDING";
        case 0x82D5 : return "GL_VERTEX_ATTRIB_RELATIVE_OFFSET";
        case 0x82D6 : return "GL_VERTEX_BINDING_DIVISOR";
        case 0x82D7 : return "GL_VERTEX_BINDING_OFFSET";
        case 0x82D8 : return "GL_VERTEX_BINDING_STRIDE";
        case 0x82D9 : return "GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET";
        case 0x82DA : return "GL_MAX_VERTEX_ATTRIB_BINDINGS";
        case 0x82DB : return "GL_TEXTURE_VIEW_MIN_LEVEL";
        case 0x82DC : return "GL_TEXTURE_VIEW_NUM_LEVELS";
        case 0x82DD : return "GL_TEXTURE_VIEW_MIN_LAYER";
        case 0x82DE : return "GL_TEXTURE_VIEW_NUM_LAYERS";
        case 0x82DF : return "GL_TEXTURE_IMMUTABLE_LEVELS";
        case 0x82E0 : return "GL_BUFFER";
        case 0x82E1 : return "GL_SHADER";
        case 0x82E2 : return "GL_PROGRAM";
        case 0x82E3 : return "GL_QUERY";
        case 0x82E4 : return "GL_PROGRAM_PIPELINE";
        case 0x82E5 : return "GL_MAX_VERTEX_ATTRIB_STRIDE";
        case 0x82E6 : return "GL_SAMPLER";
        case 0x82E7 : return "GL_DISPLAY_LIST";
        case 0x82E8 : return "GL_MAX_LABEL_LENGTH";
        case 0x82E9 : return "GL_NUM_SHADING_LANGUAGE_VERSIONS";
        case 0x82EA : return "GL_QUERY_TARGET";
        case 0x82EC : return "GL_TRANSFORM_FEEDBACK_OVERFLOW";
        case 0x82ED : return "GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW";
        case 0x82EE : return "GL_VERTICES_SUBMITTED";
        case 0x82EF : return "GL_PRIMITIVES_SUBMITTED";
        case 0x82F0 : return "GL_VERTEX_SHADER_INVOCATIONS";
        case 0x82F1 : return "GL_TESS_CONTROL_SHADER_PATCHES";
        case 0x82F2 : return "GL_TESS_EVALUATION_SHADER_INVOCATIONS";
        case 0x82F3 : return "GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED";
        case 0x82F4 : return "GL_FRAGMENT_SHADER_INVOCATIONS";
        case 0x82F5 : return "GL_COMPUTE_SHADER_INVOCATIONS";
        case 0x82F6 : return "GL_CLIPPING_INPUT_PRIMITIVES";
        case 0x82F7 : return "GL_CLIPPING_OUTPUT_PRIMITIVES";
        case 0x82F9 : return "GL_MAX_CULL_DISTANCES";
        case 0x82FA : return "GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES";
        case 0x82FB : return "GL_CONTEXT_RELEASE_BEHAVIOR";
        case 0x82FC : return "GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH";
        case 0x8316 : return "GL_CONVOLUTION_HINT_SGIX";
        case 0x8318 : return "GL_YCRCB_SGIX";
        case 0x8319 : return "GL_YCRCBA_SGIX";
        case 0x8320 : return "GL_ALPHA_MIN_SGIX";
        case 0x8321 : return "GL_ALPHA_MAX_SGIX";
        case 0x8322 : return "GL_SCALEBIAS_HINT_SGIX";
        case 0x8329 : return "GL_ASYNC_MARKER_SGIX";
        case 0x832B : return "GL_PIXEL_TEX_GEN_MODE_SGIX";
        case 0x832C : return "GL_ASYNC_HISTOGRAM_SGIX";
        case 0x832D : return "GL_MAX_ASYNC_HISTOGRAM_SGIX";
        case 0x8330 : return "GL_PIXEL_TRANSFORM_2D_EXT";
        case 0x8331 : return "GL_PIXEL_MAG_FILTER_EXT";
        case 0x8332 : return "GL_PIXEL_MIN_FILTER_EXT";
        case 0x8333 : return "GL_PIXEL_CUBIC_WEIGHT_EXT";
        case 0x8334 : return "GL_CUBIC_EXT";
        case 0x8335 : return "GL_AVERAGE_EXT";
        case 0x8336 : return "GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT";
        case 0x8337 : return "GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT";
        case 0x8338 : return "GL_PIXEL_TRANSFORM_2D_MATRIX_EXT";
        case 0x8349 : return "GL_FRAGMENT_MATERIAL_EXT";
        case 0x834A : return "GL_FRAGMENT_NORMAL_EXT";
        case 0x834C : return "GL_FRAGMENT_COLOR_EXT";
        case 0x834D : return "GL_ATTENUATION_EXT";
        case 0x834E : return "GL_SHADOW_ATTENUATION_EXT";
        case 0x834F : return "GL_TEXTURE_APPLICATION_MODE_EXT";
        case 0x8350 : return "GL_TEXTURE_LIGHT_EXT";
        case 0x8351 : return "GL_TEXTURE_MATERIAL_FACE_EXT";
        case 0x8352 : return "GL_TEXTURE_MATERIAL_PARAMETER_EXT";
        case 0x8353 : return "GL_PIXEL_TEXTURE_SGIS";
        case 0x8354 : return "GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS";
        case 0x8355 : return "GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS";
        case 0x8356 : return "GL_PIXEL_GROUP_COLOR_SGIS";
        case 0x835C : return "GL_ASYNC_TEX_IMAGE_SGIX";
        case 0x835D : return "GL_ASYNC_DRAW_PIXELS_SGIX";
        case 0x835E : return "GL_ASYNC_READ_PIXELS_SGIX";
        case 0x835F : return "GL_MAX_ASYNC_TEX_IMAGE_SGIX";
        case 0x8360 : return "GL_MAX_ASYNC_DRAW_PIXELS_SGIX";
        case 0x8361 : return "GL_MAX_ASYNC_READ_PIXELS_SGIX";
        case 0x8362 : return "GL_UNSIGNED_BYTE_2_3_3_REV";
        case 0x8363 : return "GL_UNSIGNED_SHORT_5_6_5";
        case 0x8364 : return "GL_UNSIGNED_SHORT_5_6_5_REV";
        case 0x8365 : return "GL_UNSIGNED_SHORT_4_4_4_4_REV";
        case 0x8366 : return "GL_UNSIGNED_SHORT_1_5_5_5_REV";
        case 0x8367 : return "GL_UNSIGNED_INT_8_8_8_8_REV";
        case 0x8368 : return "GL_UNSIGNED_INT_2_10_10_10_REV";
        case 0x8369 : return "GL_TEXTURE_MAX_CLAMP_S_SGIX";
        case 0x836A : return "GL_TEXTURE_MAX_CLAMP_T_SGIX";
        case 0x836B : return "GL_TEXTURE_MAX_CLAMP_R_SGIX";
        case 0x8370 : return "GL_MIRRORED_REPEAT";
        case 0x83A0 : return "GL_RGB_S3TC";
        case 0x83A1 : return "GL_RGB4_S3TC";
        case 0x83A2 : return "GL_RGBA_S3TC";
        case 0x83A3 : return "GL_RGBA4_S3TC";
        case 0x83A4 : return "GL_RGBA_DXT5_S3TC";
        case 0x83A5 : return "GL_RGBA4_DXT5_S3TC";
        case 0x83EE : return "GL_VERTEX_PRECLIP_SGIX";
        case 0x83EF : return "GL_VERTEX_PRECLIP_HINT_SGIX";
        case 0x83F0 : return "GL_COMPRESSED_RGB_S3TC_DXT1_EXT";
        case 0x83F1 : return "GL_COMPRESSED_RGBA_S3TC_DXT1_EXT";
        case 0x83F2 : return "GL_COMPRESSED_RGBA_S3TC_DXT3_EXT";
        case 0x83F3 : return "GL_COMPRESSED_RGBA_S3TC_DXT5_EXT";
        case 0x83F4 : return "GL_PARALLEL_ARRAYS_INTEL";
        case 0x83F5 : return "GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL";
        case 0x83F6 : return "GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL";
        case 0x83F7 : return "GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL";
        case 0x83F8 : return "GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL";
        case 0x83F9 : return "GL_PERFQUERY_DONOT_FLUSH_INTEL";
        case 0x83FA : return "GL_PERFQUERY_FLUSH_INTEL";
        case 0x83FB : return "GL_PERFQUERY_WAIT_INTEL";
        case 0x83FC : return "GL_BLACKHOLE_RENDER_INTEL";
        case 0x83FE : return "GL_CONSERVATIVE_RASTERIZATION_INTEL";
        case 0x83FF : return "GL_TEXTURE_MEMORY_LAYOUT_INTEL";
        case 0x8400 : return "GL_FRAGMENT_LIGHTING_SGIX";
        case 0x8401 : return "GL_FRAGMENT_COLOR_MATERIAL_SGIX";
        case 0x8402 : return "GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX";
        case 0x8403 : return "GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX";
        case 0x8404 : return "GL_MAX_FRAGMENT_LIGHTS_SGIX";
        case 0x8405 : return "GL_MAX_ACTIVE_LIGHTS_SGIX";
        case 0x8406 : return "GL_CURRENT_RASTER_NORMAL_SGIX";
        case 0x8407 : return "GL_LIGHT_ENV_MODE_SGIX";
        case 0x8408 : return "GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX";
        case 0x8409 : return "GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX";
        case 0x840A : return "GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX";
        case 0x840B : return "GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX";
        case 0x840C : return "GL_FRAGMENT_LIGHT0_SGIX";
        case 0x840D : return "GL_FRAGMENT_LIGHT1_SGIX";
        case 0x840E : return "GL_FRAGMENT_LIGHT2_SGIX";
        case 0x840F : return "GL_FRAGMENT_LIGHT3_SGIX";
        case 0x8410 : return "GL_FRAGMENT_LIGHT4_SGIX";
        case 0x8411 : return "GL_FRAGMENT_LIGHT5_SGIX";
        case 0x8412 : return "GL_FRAGMENT_LIGHT6_SGIX";
        case 0x8413 : return "GL_FRAGMENT_LIGHT7_SGIX";
        case 0x842E : return "GL_PACK_RESAMPLE_SGIX";
        case 0x842F : return "GL_UNPACK_RESAMPLE_SGIX";
        case 0x8430 : return "GL_RESAMPLE_DECIMATE_SGIX";
        case 0x8433 : return "GL_RESAMPLE_REPLICATE_SGIX";
        case 0x8434 : return "GL_RESAMPLE_ZERO_FILL_SGIX";
        case 0x8439 : return "GL_TANGENT_ARRAY_EXT";
        case 0x843A : return "GL_BINORMAL_ARRAY_EXT";
        case 0x843B : return "GL_CURRENT_TANGENT_EXT";
        case 0x843C : return "GL_CURRENT_BINORMAL_EXT";
        case 0x843E : return "GL_TANGENT_ARRAY_TYPE_EXT";
        case 0x843F : return "GL_TANGENT_ARRAY_STRIDE_EXT";
        case 0x8440 : return "GL_BINORMAL_ARRAY_TYPE_EXT";
        case 0x8441 : return "GL_BINORMAL_ARRAY_STRIDE_EXT";
        case 0x8442 : return "GL_TANGENT_ARRAY_POINTER_EXT";
        case 0x8443 : return "GL_BINORMAL_ARRAY_POINTER_EXT";
        case 0x8444 : return "GL_MAP1_TANGENT_EXT";
        case 0x8445 : return "GL_MAP2_TANGENT_EXT";
        case 0x8446 : return "GL_MAP1_BINORMAL_EXT";
        case 0x8447 : return "GL_MAP2_BINORMAL_EXT";
        case 0x844D : return "GL_NEAREST_CLIPMAP_NEAREST_SGIX";
        case 0x844E : return "GL_NEAREST_CLIPMAP_LINEAR_SGIX";
        case 0x844F : return "GL_LINEAR_CLIPMAP_NEAREST_SGIX";
        case 0x8450 : return "GL_FOG_COORD_SRC";
        case 0x8451 : return "GL_FOG_COORD";
        case 0x8452 : return "GL_FRAGMENT_DEPTH";
        case 0x8453 : return "GL_CURRENT_FOG_COORD";
        case 0x8454 : return "GL_FOG_COORD_ARRAY_TYPE";
        case 0x8455 : return "GL_FOG_COORD_ARRAY_STRIDE";
        case 0x8456 : return "GL_FOG_COORD_ARRAY_POINTER";
        case 0x8457 : return "GL_FOG_COORD_ARRAY";
        case 0x8458 : return "GL_COLOR_SUM";
        case 0x8459 : return "GL_CURRENT_SECONDARY_COLOR";
        case 0x845A : return "GL_SECONDARY_COLOR_ARRAY_SIZE";
        case 0x845B : return "GL_SECONDARY_COLOR_ARRAY_TYPE";
        case 0x845C : return "GL_SECONDARY_COLOR_ARRAY_STRIDE";
        case 0x845D : return "GL_SECONDARY_COLOR_ARRAY_POINTER";
        case 0x845E : return "GL_SECONDARY_COLOR_ARRAY";
        case 0x845F : return "GL_CURRENT_RASTER_SECONDARY_COLOR";
        case 0x846D : return "GL_ALIASED_POINT_SIZE_RANGE";
        case 0x846E : return "GL_ALIASED_LINE_WIDTH_RANGE";
        case 0x8490 : return "GL_SCREEN_COORDINATES_REND";
        case 0x8491 : return "GL_INVERTED_SCREEN_W_REND";
        case 0x84C0 : return "GL_TEXTURE0";
        case 0x84C1 : return "GL_TEXTURE1";
        case 0x84C2 : return "GL_TEXTURE2";
        case 0x84C3 : return "GL_TEXTURE3";
        case 0x84C4 : return "GL_TEXTURE4";
        case 0x84C5 : return "GL_TEXTURE5";
        case 0x84C6 : return "GL_TEXTURE6";
        case 0x84C7 : return "GL_TEXTURE7";
        case 0x84C8 : return "GL_TEXTURE8";
        case 0x84C9 : return "GL_TEXTURE9";
        case 0x84CA : return "GL_TEXTURE10";
        case 0x84CB : return "GL_TEXTURE11";
        case 0x84CC : return "GL_TEXTURE12";
        case 0x84CD : return "GL_TEXTURE13";
        case 0x84CE : return "GL_TEXTURE14";
        case 0x84CF : return "GL_TEXTURE15";
        case 0x84D0 : return "GL_TEXTURE16";
        case 0x84D1 : return "GL_TEXTURE17";
        case 0x84D2 : return "GL_TEXTURE18";
        case 0x84D3 : return "GL_TEXTURE19";
        case 0x84D4 : return "GL_TEXTURE20";
        case 0x84D5 : return "GL_TEXTURE21";
        case 0x84D6 : return "GL_TEXTURE22";
        case 0x84D7 : return "GL_TEXTURE23";
        case 0x84D8 : return "GL_TEXTURE24";
        case 0x84D9 : return "GL_TEXTURE25";
        case 0x84DA : return "GL_TEXTURE26";
        case 0x84DB : return "GL_TEXTURE27";
        case 0x84DC : return "GL_TEXTURE28";
        case 0x84DD : return "GL_TEXTURE29";
        case 0x84DE : return "GL_TEXTURE30";
        case 0x84DF : return "GL_TEXTURE31";
        case 0x84E0 : return "GL_ACTIVE_TEXTURE";
        case 0x84E1 : return "GL_CLIENT_ACTIVE_TEXTURE";
        case 0x84E2 : return "GL_MAX_TEXTURE_UNITS";
        case 0x84E3 : return "GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV";
        case 0x84E4 : return "GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV";
        case 0x84E5 : return "GL_TRANSPOSE_TEXTURE_MATRIX";
        case 0x84E6 : return "GL_TRANSPOSE_COLOR_MATRIX";
        case 0x84E7 : return "GL_SUBTRACT";
        case 0x84E8 : return "GL_MAX_RENDERBUFFER_SIZE";
        case 0x84E9 : return "GL_COMPRESSED_ALPHA";
        case 0x84EA : return "GL_COMPRESSED_LUMINANCE";
        case 0x84EB : return "GL_COMPRESSED_LUMINANCE_ALPHA";
        case 0x84EC : return "GL_COMPRESSED_INTENSITY";
        case 0x84ED : return "GL_COMPRESSED_RGB";
        case 0x84EE : return "GL_COMPRESSED_RGBA";
        case 0x84EF : return "GL_TEXTURE_COMPRESSION_HINT";
        case 0x84F0 : return "GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER";
        case 0x84F1 : return "GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER";
        case 0x84F2 : return "GL_ALL_COMPLETED_NV";
        case 0x84F3 : return "GL_FENCE_STATUS_NV";
        case 0x84F4 : return "GL_FENCE_CONDITION_NV";
        case 0x84F5 : return "GL_TEXTURE_RECTANGLE";
        case 0x84F6 : return "GL_TEXTURE_BINDING_RECTANGLE";
        case 0x84F7 : return "GL_PROXY_TEXTURE_RECTANGLE";
        case 0x84F8 : return "GL_MAX_RECTANGLE_TEXTURE_SIZE";
        case 0x84F9 : return "GL_DEPTH_STENCIL";
        case 0x84FA : return "GL_UNSIGNED_INT_24_8";
        case 0x84FD : return "GL_MAX_TEXTURE_LOD_BIAS";
        case 0x84FE : return "GL_TEXTURE_MAX_ANISOTROPY";
        case 0x84FF : return "GL_MAX_TEXTURE_MAX_ANISOTROPY";
        case 0x8500 : return "GL_TEXTURE_FILTER_CONTROL";
        case 0x8501 : return "GL_TEXTURE_LOD_BIAS";
        case 0x8502 : return "GL_MODELVIEW1_STACK_DEPTH_EXT";
        case 0x8503 : return "GL_COMBINE4_NV";
        case 0x8504 : return "GL_MAX_SHININESS_NV";
        case 0x8505 : return "GL_MAX_SPOT_EXPONENT_NV";
        case 0x8506 : return "GL_MODELVIEW1_MATRIX_EXT";
        case 0x8507 : return "GL_INCR_WRAP";
        case 0x8508 : return "GL_DECR_WRAP";
        case 0x8509 : return "GL_VERTEX_WEIGHTING_EXT";
        case 0x850A : return "GL_MODELVIEW1_EXT";
        case 0x850B : return "GL_CURRENT_VERTEX_WEIGHT_EXT";
        case 0x850C : return "GL_VERTEX_WEIGHT_ARRAY_EXT";
        case 0x850D : return "GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT";
        case 0x850E : return "GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT";
        case 0x850F : return "GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT";
        case 0x8510 : return "GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT";
        case 0x8511 : return "GL_NORMAL_MAP";
        case 0x8512 : return "GL_REFLECTION_MAP";
        case 0x8513 : return "GL_TEXTURE_CUBE_MAP";
        case 0x8514 : return "GL_TEXTURE_BINDING_CUBE_MAP";
        case 0x8515 : return "GL_TEXTURE_CUBE_MAP_POSITIVE_X";
        case 0x8516 : return "GL_TEXTURE_CUBE_MAP_NEGATIVE_X";
        case 0x8517 : return "GL_TEXTURE_CUBE_MAP_POSITIVE_Y";
        case 0x8518 : return "GL_TEXTURE_CUBE_MAP_NEGATIVE_Y";
        case 0x8519 : return "GL_TEXTURE_CUBE_MAP_POSITIVE_Z";
        case 0x851A : return "GL_TEXTURE_CUBE_MAP_NEGATIVE_Z";
        case 0x851B : return "GL_PROXY_TEXTURE_CUBE_MAP";
        case 0x851C : return "GL_MAX_CUBE_MAP_TEXTURE_SIZE";
        case 0x851D : return "GL_VERTEX_ARRAY_RANGE_APPLE";
        case 0x851E : return "GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE";
        case 0x851F : return "GL_VERTEX_ARRAY_RANGE_VALID_NV";
        case 0x8520 : return "GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV";
        case 0x8521 : return "GL_VERTEX_ARRAY_RANGE_POINTER_APPLE";
        case 0x8522 : return "GL_REGISTER_COMBINERS_NV";
        case 0x8523 : return "GL_VARIABLE_A_NV";
        case 0x8524 : return "GL_VARIABLE_B_NV";
        case 0x8525 : return "GL_VARIABLE_C_NV";
        case 0x8526 : return "GL_VARIABLE_D_NV";
        case 0x8527 : return "GL_VARIABLE_E_NV";
        case 0x8528 : return "GL_VARIABLE_F_NV";
        case 0x8529 : return "GL_VARIABLE_G_NV";
        case 0x852A : return "GL_CONSTANT_COLOR0_NV";
        case 0x852B : return "GL_CONSTANT_COLOR1_NV";
        case 0x852C : return "GL_PRIMARY_COLOR_NV";
        case 0x852D : return "GL_SECONDARY_COLOR_NV";
        case 0x852E : return "GL_SPARE0_NV";
        case 0x852F : return "GL_SPARE1_NV";
        case 0x8530 : return "GL_DISCARD_NV";
        case 0x8531 : return "GL_E_TIMES_F_NV";
        case 0x8532 : return "GL_SPARE0_PLUS_SECONDARY_COLOR_NV";
        case 0x8533 : return "GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV";
        case 0x8534 : return "GL_MULTISAMPLE_FILTER_HINT_NV";
        case 0x8535 : return "GL_PER_STAGE_CONSTANTS_NV";
        case 0x8536 : return "GL_UNSIGNED_IDENTITY_NV";
        case 0x8537 : return "GL_UNSIGNED_INVERT_NV";
        case 0x8538 : return "GL_EXPAND_NORMAL_NV";
        case 0x8539 : return "GL_EXPAND_NEGATE_NV";
        case 0x853A : return "GL_HALF_BIAS_NORMAL_NV";
        case 0x853B : return "GL_HALF_BIAS_NEGATE_NV";
        case 0x853C : return "GL_SIGNED_IDENTITY_NV";
        case 0x853D : return "GL_SIGNED_NEGATE_NV";
        case 0x853E : return "GL_SCALE_BY_TWO_NV";
        case 0x853F : return "GL_SCALE_BY_FOUR_NV";
        case 0x8540 : return "GL_SCALE_BY_ONE_HALF_NV";
        case 0x8541 : return "GL_BIAS_BY_NEGATIVE_ONE_HALF_NV";
        case 0x8542 : return "GL_COMBINER_INPUT_NV";
        case 0x8543 : return "GL_COMBINER_MAPPING_NV";
        case 0x8544 : return "GL_COMBINER_COMPONENT_USAGE_NV";
        case 0x8545 : return "GL_COMBINER_AB_DOT_PRODUCT_NV";
        case 0x8546 : return "GL_COMBINER_CD_DOT_PRODUCT_NV";
        case 0x8547 : return "GL_COMBINER_MUX_SUM_NV";
        case 0x8548 : return "GL_COMBINER_SCALE_NV";
        case 0x8549 : return "GL_COMBINER_BIAS_NV";
        case 0x854A : return "GL_COMBINER_AB_OUTPUT_NV";
        case 0x854B : return "GL_COMBINER_CD_OUTPUT_NV";
        case 0x854C : return "GL_COMBINER_SUM_OUTPUT_NV";
        case 0x854D : return "GL_MAX_GENERAL_COMBINERS_NV";
        case 0x854E : return "GL_NUM_GENERAL_COMBINERS_NV";
        case 0x854F : return "GL_COLOR_SUM_CLAMP_NV";
        case 0x8550 : return "GL_COMBINER0_NV";
        case 0x8551 : return "GL_COMBINER1_NV";
        case 0x8552 : return "GL_COMBINER2_NV";
        case 0x8553 : return "GL_COMBINER3_NV";
        case 0x8554 : return "GL_COMBINER4_NV";
        case 0x8555 : return "GL_COMBINER5_NV";
        case 0x8556 : return "GL_COMBINER6_NV";
        case 0x8557 : return "GL_COMBINER7_NV";
        case 0x8558 : return "GL_PRIMITIVE_RESTART_NV";
        case 0x8559 : return "GL_PRIMITIVE_RESTART_INDEX_NV";
        case 0x855A : return "GL_FOG_DISTANCE_MODE_NV";
        case 0x855B : return "GL_EYE_RADIAL_NV";
        case 0x855C : return "GL_EYE_PLANE_ABSOLUTE_NV";
        case 0x855D : return "GL_EMBOSS_LIGHT_NV";
        case 0x855E : return "GL_EMBOSS_CONSTANT_NV";
        case 0x855F : return "GL_EMBOSS_MAP_NV";
        case 0x8560 : return "GL_RED_MIN_CLAMP_INGR";
        case 0x8561 : return "GL_GREEN_MIN_CLAMP_INGR";
        case 0x8562 : return "GL_BLUE_MIN_CLAMP_INGR";
        case 0x8563 : return "GL_ALPHA_MIN_CLAMP_INGR";
        case 0x8564 : return "GL_RED_MAX_CLAMP_INGR";
        case 0x8565 : return "GL_GREEN_MAX_CLAMP_INGR";
        case 0x8566 : return "GL_BLUE_MAX_CLAMP_INGR";
        case 0x8567 : return "GL_ALPHA_MAX_CLAMP_INGR";
        case 0x8568 : return "GL_INTERLACE_READ_INGR";
        case 0x8570 : return "GL_COMBINE";
        case 0x8571 : return "GL_COMBINE_RGB";
        case 0x8572 : return "GL_COMBINE_ALPHA";
        case 0x8573 : return "GL_RGB_SCALE";
        case 0x8574 : return "GL_ADD_SIGNED";
        case 0x8575 : return "GL_INTERPOLATE";
        case 0x8576 : return "GL_CONSTANT";
        case 0x8577 : return "GL_PRIMARY_COLOR";
        case 0x8578 : return "GL_PREVIOUS";
        case 0x8580 : return "GL_SOURCE0_RGB";
        case 0x8581 : return "GL_SOURCE1_RGB";
        case 0x8582 : return "GL_SOURCE2_RGB";
        case 0x8583 : return "GL_SOURCE3_RGB_NV";
        case 0x8588 : return "GL_SOURCE0_ALPHA";
        case 0x8589 : return "GL_SOURCE1_ALPHA";
        case 0x858A : return "GL_SOURCE2_ALPHA";
        case 0x858B : return "GL_SOURCE3_ALPHA_NV";
        case 0x8590 : return "GL_OPERAND0_RGB";
        case 0x8591 : return "GL_OPERAND1_RGB";
        case 0x8592 : return "GL_OPERAND2_RGB";
        case 0x8593 : return "GL_OPERAND3_RGB_NV";
        case 0x8598 : return "GL_OPERAND0_ALPHA";
        case 0x8599 : return "GL_OPERAND1_ALPHA";
        case 0x859A : return "GL_OPERAND2_ALPHA";
        case 0x859B : return "GL_OPERAND3_ALPHA_NV";
        case 0x85A0 : return "GL_PACK_SUBSAMPLE_RATE_SGIX";
        case 0x85A1 : return "GL_UNPACK_SUBSAMPLE_RATE_SGIX";
        case 0x85A2 : return "GL_PIXEL_SUBSAMPLE_4444_SGIX";
        case 0x85A3 : return "GL_PIXEL_SUBSAMPLE_2424_SGIX";
        case 0x85A4 : return "GL_PIXEL_SUBSAMPLE_4242_SGIX";
        case 0x85AE : return "GL_PERTURB_EXT";
        case 0x85AF : return "GL_TEXTURE_NORMAL_EXT";
        case 0x85B0 : return "GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE";
        case 0x85B1 : return "GL_TRANSFORM_HINT_APPLE";
        case 0x85B2 : return "GL_UNPACK_CLIENT_STORAGE_APPLE";
        case 0x85B3 : return "GL_BUFFER_OBJECT_APPLE";
        case 0x85B4 : return "GL_STORAGE_CLIENT_APPLE";
        case 0x85B5 : return "GL_VERTEX_ARRAY_BINDING";
        case 0x85B7 : return "GL_TEXTURE_RANGE_LENGTH_APPLE";
        case 0x85B8 : return "GL_TEXTURE_RANGE_POINTER_APPLE";
        case 0x85B9 : return "GL_YCBCR_422_APPLE";
        case 0x85BA : return "GL_UNSIGNED_SHORT_8_8_APPLE";
        case 0x85BB : return "GL_UNSIGNED_SHORT_8_8_REV_APPLE";
        case 0x85BC : return "GL_TEXTURE_STORAGE_HINT_APPLE";
        case 0x85BD : return "GL_STORAGE_PRIVATE_APPLE";
        case 0x85BE : return "GL_STORAGE_CACHED_APPLE";
        case 0x85BF : return "GL_STORAGE_SHARED_APPLE";
        case 0x85C0 : return "GL_REPLACEMENT_CODE_ARRAY_SUN";
        case 0x85C1 : return "GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN";
        case 0x85C2 : return "GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN";
        case 0x85C3 : return "GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN";
        case 0x85C4 : return "GL_R1UI_V3F_SUN";
        case 0x85C5 : return "GL_R1UI_C4UB_V3F_SUN";
        case 0x85C6 : return "GL_R1UI_C3F_V3F_SUN";
        case 0x85C7 : return "GL_R1UI_N3F_V3F_SUN";
        case 0x85C8 : return "GL_R1UI_C4F_N3F_V3F_SUN";
        case 0x85C9 : return "GL_R1UI_T2F_V3F_SUN";
        case 0x85CA : return "GL_R1UI_T2F_N3F_V3F_SUN";
        case 0x85CB : return "GL_R1UI_T2F_C4F_N3F_V3F_SUN";
        case 0x85CC : return "GL_SLICE_ACCUM_SUN";
        case 0x8614 : return "GL_QUAD_MESH_SUN";
        case 0x8615 : return "GL_TRIANGLE_MESH_SUN";
        case 0x8620 : return "GL_VERTEX_PROGRAM_NV";
        case 0x8621 : return "GL_VERTEX_STATE_PROGRAM_NV";
        case 0x8622 : return "GL_VERTEX_ATTRIB_ARRAY_ENABLED";
        case 0x8623 : return "GL_ATTRIB_ARRAY_SIZE_NV";
        case 0x8624 : return "GL_ATTRIB_ARRAY_STRIDE_NV";
        case 0x8625 : return "GL_ATTRIB_ARRAY_TYPE_NV";
        case 0x8626 : return "GL_CURRENT_ATTRIB_NV";
        case 0x8627 : return "GL_PROGRAM_LENGTH_NV";
        case 0x8628 : return "GL_PROGRAM_STRING_NV";
        case 0x8629 : return "GL_MODELVIEW_PROJECTION_NV";
        case 0x862A : return "GL_IDENTITY_NV";
        case 0x862B : return "GL_INVERSE_NV";
        case 0x862C : return "GL_TRANSPOSE_NV";
        case 0x862D : return "GL_INVERSE_TRANSPOSE_NV";
        case 0x862E : return "GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV";
        case 0x862F : return "GL_MAX_TRACK_MATRICES_NV";
        case 0x8630 : return "GL_MATRIX0_NV";
        case 0x8631 : return "GL_MATRIX1_NV";
        case 0x8632 : return "GL_MATRIX2_NV";
        case 0x8633 : return "GL_MATRIX3_NV";
        case 0x8634 : return "GL_MATRIX4_NV";
        case 0x8635 : return "GL_MATRIX5_NV";
        case 0x8636 : return "GL_MATRIX6_NV";
        case 0x8637 : return "GL_MATRIX7_NV";
        case 0x8640 : return "GL_CURRENT_MATRIX_STACK_DEPTH_NV";
        case 0x8641 : return "GL_CURRENT_MATRIX_NV";
        case 0x8642 : return "GL_PROGRAM_POINT_SIZE";
        case 0x8643 : return "GL_VERTEX_PROGRAM_TWO_SIDE";
        case 0x8644 : return "GL_PROGRAM_PARAMETER_NV";
        case 0x8645 : return "GL_ATTRIB_ARRAY_POINTER_NV";
        case 0x8646 : return "GL_PROGRAM_TARGET_NV";
        case 0x8647 : return "GL_PROGRAM_RESIDENT_NV";
        case 0x8648 : return "GL_TRACK_MATRIX_NV";
        case 0x8649 : return "GL_TRACK_MATRIX_TRANSFORM_NV";
        case 0x864A : return "GL_VERTEX_PROGRAM_BINDING_NV";
        case 0x864B : return "GL_PROGRAM_ERROR_POSITION_NV";
        case 0x864C : return "GL_OFFSET_TEXTURE_RECTANGLE_NV";
        case 0x864D : return "GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV";
        case 0x864E : return "GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV";
        case 0x864F : return "GL_DEPTH_CLAMP";
        case 0x8650 : return "GL_VERTEX_ATTRIB_ARRAY0_NV";
        case 0x8651 : return "GL_VERTEX_ATTRIB_ARRAY1_NV";
        case 0x8652 : return "GL_VERTEX_ATTRIB_ARRAY2_NV";
        case 0x8653 : return "GL_VERTEX_ATTRIB_ARRAY3_NV";
        case 0x8654 : return "GL_VERTEX_ATTRIB_ARRAY4_NV";
        case 0x8655 : return "GL_VERTEX_ATTRIB_ARRAY5_NV";
        case 0x8656 : return "GL_VERTEX_ATTRIB_ARRAY6_NV";
        case 0x8657 : return "GL_VERTEX_ATTRIB_ARRAY7_NV";
        case 0x8658 : return "GL_VERTEX_ATTRIB_ARRAY8_NV";
        case 0x8659 : return "GL_VERTEX_ATTRIB_ARRAY9_NV";
        case 0x865A : return "GL_VERTEX_ATTRIB_ARRAY10_NV";
        case 0x865B : return "GL_VERTEX_ATTRIB_ARRAY11_NV";
        case 0x865C : return "GL_VERTEX_ATTRIB_ARRAY12_NV";
        case 0x865D : return "GL_VERTEX_ATTRIB_ARRAY13_NV";
        case 0x865E : return "GL_VERTEX_ATTRIB_ARRAY14_NV";
        case 0x865F : return "GL_VERTEX_ATTRIB_ARRAY15_NV";
        case 0x8660 : return "GL_MAP1_VERTEX_ATTRIB0_4_NV";
        case 0x8661 : return "GL_MAP1_VERTEX_ATTRIB1_4_NV";
        case 0x8662 : return "GL_MAP1_VERTEX_ATTRIB2_4_NV";
        case 0x8663 : return "GL_MAP1_VERTEX_ATTRIB3_4_NV";
        case 0x8664 : return "GL_MAP1_VERTEX_ATTRIB4_4_NV";
        case 0x8665 : return "GL_MAP1_VERTEX_ATTRIB5_4_NV";
        case 0x8666 : return "GL_MAP1_VERTEX_ATTRIB6_4_NV";
        case 0x8667 : return "GL_MAP1_VERTEX_ATTRIB7_4_NV";
        case 0x8668 : return "GL_MAP1_VERTEX_ATTRIB8_4_NV";
        case 0x8669 : return "GL_MAP1_VERTEX_ATTRIB9_4_NV";
        case 0x866A : return "GL_MAP1_VERTEX_ATTRIB10_4_NV";
        case 0x866B : return "GL_MAP1_VERTEX_ATTRIB11_4_NV";
        case 0x866C : return "GL_MAP1_VERTEX_ATTRIB12_4_NV";
        case 0x866D : return "GL_MAP1_VERTEX_ATTRIB13_4_NV";
        case 0x866E : return "GL_MAP1_VERTEX_ATTRIB14_4_NV";
        case 0x866F : return "GL_MAP1_VERTEX_ATTRIB15_4_NV";
        case 0x8670 : return "GL_MAP2_VERTEX_ATTRIB0_4_NV";
        case 0x8671 : return "GL_MAP2_VERTEX_ATTRIB1_4_NV";
        case 0x8672 : return "GL_MAP2_VERTEX_ATTRIB2_4_NV";
        case 0x8673 : return "GL_MAP2_VERTEX_ATTRIB3_4_NV";
        case 0x8674 : return "GL_MAP2_VERTEX_ATTRIB4_4_NV";
        case 0x8675 : return "GL_MAP2_VERTEX_ATTRIB5_4_NV";
        case 0x8676 : return "GL_MAP2_VERTEX_ATTRIB6_4_NV";
        case 0x8677 : return "GL_MAP2_VERTEX_ATTRIB7_4_NV";
        case 0x8678 : return "GL_MAP2_VERTEX_ATTRIB8_4_NV";
        case 0x8679 : return "GL_MAP2_VERTEX_ATTRIB9_4_NV";
        case 0x867A : return "GL_MAP2_VERTEX_ATTRIB10_4_NV";
        case 0x867B : return "GL_MAP2_VERTEX_ATTRIB11_4_NV";
        case 0x867C : return "GL_MAP2_VERTEX_ATTRIB12_4_NV";
        case 0x867D : return "GL_MAP2_VERTEX_ATTRIB13_4_NV";
        case 0x867E : return "GL_MAP2_VERTEX_ATTRIB14_4_NV";
        case 0x867F : return "GL_MAP2_VERTEX_ATTRIB15_4_NV";
        case 0x86A0 : return "GL_TEXTURE_COMPRESSED_IMAGE_SIZE";
        case 0x86A1 : return "GL_TEXTURE_COMPRESSED";
        case 0x86A2 : return "GL_NUM_COMPRESSED_TEXTURE_FORMATS";
        case 0x86A3 : return "GL_COMPRESSED_TEXTURE_FORMATS";
        case 0x86AE : return "GL_DOT3_RGB";
        case 0x86AF : return "GL_DOT3_RGBA";
        case 0x86B0 : return "GL_COMPRESSED_RGB_FXT1_3DFX";
        case 0x86B1 : return "GL_COMPRESSED_RGBA_FXT1_3DFX";
        case 0x86B2 : return "GL_MULTISAMPLE_3DFX";
        case 0x86B3 : return "GL_SAMPLE_BUFFERS_3DFX";
        case 0x86B4 : return "GL_SAMPLES_3DFX";
        case 0x86C0 : return "GL_EVAL_2D_NV";
        case 0x86C1 : return "GL_EVAL_TRIANGULAR_2D_NV";
        case 0x86C2 : return "GL_MAP_TESSELLATION_NV";
        case 0x86C3 : return "GL_MAP_ATTRIB_U_ORDER_NV";
        case 0x86C4 : return "GL_MAP_ATTRIB_V_ORDER_NV";
        case 0x86C5 : return "GL_EVAL_FRACTIONAL_TESSELLATION_NV";
        case 0x86C6 : return "GL_EVAL_VERTEX_ATTRIB0_NV";
        case 0x86C7 : return "GL_EVAL_VERTEX_ATTRIB1_NV";
        case 0x86C8 : return "GL_EVAL_VERTEX_ATTRIB2_NV";
        case 0x86C9 : return "GL_EVAL_VERTEX_ATTRIB3_NV";
        case 0x86CA : return "GL_EVAL_VERTEX_ATTRIB4_NV";
        case 0x86CB : return "GL_EVAL_VERTEX_ATTRIB5_NV";
        case 0x86CC : return "GL_EVAL_VERTEX_ATTRIB6_NV";
        case 0x86CD : return "GL_EVAL_VERTEX_ATTRIB7_NV";
        case 0x86CE : return "GL_EVAL_VERTEX_ATTRIB8_NV";
        case 0x86CF : return "GL_EVAL_VERTEX_ATTRIB9_NV";
        case 0x86D0 : return "GL_EVAL_VERTEX_ATTRIB10_NV";
        case 0x86D1 : return "GL_EVAL_VERTEX_ATTRIB11_NV";
        case 0x86D2 : return "GL_EVAL_VERTEX_ATTRIB12_NV";
        case 0x86D3 : return "GL_EVAL_VERTEX_ATTRIB13_NV";
        case 0x86D4 : return "GL_EVAL_VERTEX_ATTRIB14_NV";
        case 0x86D5 : return "GL_EVAL_VERTEX_ATTRIB15_NV";
        case 0x86D6 : return "GL_MAX_MAP_TESSELLATION_NV";
        case 0x86D7 : return "GL_MAX_RATIONAL_EVAL_ORDER_NV";
        case 0x86D8 : return "GL_MAX_PROGRAM_PATCH_ATTRIBS_NV";
        case 0x86D9 : return "GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV";
        case 0x86DA : return "GL_UNSIGNED_INT_S8_S8_8_8_NV";
        case 0x86DB : return "GL_UNSIGNED_INT_8_8_S8_S8_REV_NV";
        case 0x86DC : return "GL_DSDT_MAG_INTENSITY_NV";
        case 0x86DD : return "GL_SHADER_CONSISTENT_NV";
        case 0x86DE : return "GL_TEXTURE_SHADER_NV";
        case 0x86DF : return "GL_SHADER_OPERATION_NV";
        case 0x86E0 : return "GL_CULL_MODES_NV";
        case 0x86E1 : return "GL_OFFSET_TEXTURE_2D_MATRIX_NV";
        case 0x86E2 : return "GL_OFFSET_TEXTURE_2D_SCALE_NV";
        case 0x86E3 : return "GL_OFFSET_TEXTURE_2D_BIAS_NV";
        case 0x86E4 : return "GL_PREVIOUS_TEXTURE_INPUT_NV";
        case 0x86E5 : return "GL_CONST_EYE_NV";
        case 0x86E6 : return "GL_PASS_THROUGH_NV";
        case 0x86E7 : return "GL_CULL_FRAGMENT_NV";
        case 0x86E8 : return "GL_OFFSET_TEXTURE_2D_NV";
        case 0x86E9 : return "GL_DEPENDENT_AR_TEXTURE_2D_NV";
        case 0x86EA : return "GL_DEPENDENT_GB_TEXTURE_2D_NV";
        case 0x86EB : return "GL_SURFACE_STATE_NV";
        case 0x86EC : return "GL_DOT_PRODUCT_NV";
        case 0x86ED : return "GL_DOT_PRODUCT_DEPTH_REPLACE_NV";
        case 0x86EE : return "GL_DOT_PRODUCT_TEXTURE_2D_NV";
        case 0x86EF : return "GL_DOT_PRODUCT_TEXTURE_3D_NV";
        case 0x86F0 : return "GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV";
        case 0x86F1 : return "GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV";
        case 0x86F2 : return "GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV";
        case 0x86F3 : return "GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV";
        case 0x86F4 : return "GL_HILO_NV";
        case 0x86F5 : return "GL_DSDT_NV";
        case 0x86F6 : return "GL_DSDT_MAG_NV";
        case 0x86F7 : return "GL_DSDT_MAG_VIB_NV";
        case 0x86F8 : return "GL_HILO16_NV";
        case 0x86F9 : return "GL_SIGNED_HILO_NV";
        case 0x86FA : return "GL_SIGNED_HILO16_NV";
        case 0x86FB : return "GL_SIGNED_RGBA_NV";
        case 0x86FC : return "GL_SIGNED_RGBA8_NV";
        case 0x86FD : return "GL_SURFACE_REGISTERED_NV";
        case 0x86FE : return "GL_SIGNED_RGB_NV";
        case 0x86FF : return "GL_SIGNED_RGB8_NV";
        case 0x8700 : return "GL_SURFACE_MAPPED_NV";
        case 0x8701 : return "GL_SIGNED_LUMINANCE_NV";
        case 0x8702 : return "GL_SIGNED_LUMINANCE8_NV";
        case 0x8703 : return "GL_SIGNED_LUMINANCE_ALPHA_NV";
        case 0x8704 : return "GL_SIGNED_LUMINANCE8_ALPHA8_NV";
        case 0x8705 : return "GL_SIGNED_ALPHA_NV";
        case 0x8706 : return "GL_SIGNED_ALPHA8_NV";
        case 0x8707 : return "GL_SIGNED_INTENSITY_NV";
        case 0x8708 : return "GL_SIGNED_INTENSITY8_NV";
        case 0x8709 : return "GL_DSDT8_NV";
        case 0x870A : return "GL_DSDT8_MAG8_NV";
        case 0x870B : return "GL_DSDT8_MAG8_INTENSITY8_NV";
        case 0x870C : return "GL_SIGNED_RGB_UNSIGNED_ALPHA_NV";
        case 0x870D : return "GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV";
        case 0x870E : return "GL_HI_SCALE_NV";
        case 0x870F : return "GL_LO_SCALE_NV";
        case 0x8710 : return "GL_DS_SCALE_NV";
        case 0x8711 : return "GL_DT_SCALE_NV";
        case 0x8712 : return "GL_MAGNITUDE_SCALE_NV";
        case 0x8713 : return "GL_VIBRANCE_SCALE_NV";
        case 0x8714 : return "GL_HI_BIAS_NV";
        case 0x8715 : return "GL_LO_BIAS_NV";
        case 0x8716 : return "GL_DS_BIAS_NV";
        case 0x8717 : return "GL_DT_BIAS_NV";
        case 0x8718 : return "GL_MAGNITUDE_BIAS_NV";
        case 0x8719 : return "GL_VIBRANCE_BIAS_NV";
        case 0x871A : return "GL_TEXTURE_BORDER_VALUES_NV";
        case 0x871B : return "GL_TEXTURE_HI_SIZE_NV";
        case 0x871C : return "GL_TEXTURE_LO_SIZE_NV";
        case 0x871D : return "GL_TEXTURE_DS_SIZE_NV";
        case 0x871E : return "GL_TEXTURE_DT_SIZE_NV";
        case 0x871F : return "GL_TEXTURE_MAG_SIZE_NV";
        case 0x8740 : return "GL_DOT3_RGB_EXT";
        case 0x8741 : return "GL_DOT3_RGBA_EXT";
        case 0x8742 : return "GL_MIRROR_CLAMP_ATI";
        case 0x8743 : return "GL_MIRROR_CLAMP_TO_EDGE";
        case 0x8744 : return "GL_MODULATE_ADD_ATI";
        case 0x8745 : return "GL_MODULATE_SIGNED_ADD_ATI";
        case 0x8746 : return "GL_MODULATE_SUBTRACT_ATI";
        case 0x874A : return "GL_SET_AMD";
        case 0x874B : return "GL_REPLACE_VALUE_AMD";
        case 0x874C : return "GL_STENCIL_OP_VALUE_AMD";
        case 0x874D : return "GL_STENCIL_BACK_OP_VALUE_AMD";
        case 0x874E : return "GL_VERTEX_ATTRIB_ARRAY_LONG";
        case 0x874F : return "GL_OCCLUSION_QUERY_EVENT_MASK_AMD";
        case 0x8757 : return "GL_YCBCR_MESA";
        case 0x8758 : return "GL_PACK_INVERT_MESA";
        case 0x8759 : return "GL_TEXTURE_1D_STACK_MESAX";
        case 0x875A : return "GL_TEXTURE_2D_STACK_MESAX";
        case 0x875B : return "GL_PROXY_TEXTURE_1D_STACK_MESAX";
        case 0x875C : return "GL_PROXY_TEXTURE_2D_STACK_MESAX";
        case 0x875D : return "GL_TEXTURE_1D_STACK_BINDING_MESAX";
        case 0x875E : return "GL_TEXTURE_2D_STACK_BINDING_MESAX";
        case 0x875F : return "GL_PROGRAM_BINARY_FORMAT_MESA";
        case 0x8760 : return "GL_STATIC_ATI";
        case 0x8761 : return "GL_DYNAMIC_ATI";
        case 0x8762 : return "GL_PRESERVE_ATI";
        case 0x8763 : return "GL_DISCARD_ATI";
        case 0x8764 : return "GL_BUFFER_SIZE";
        case 0x8765 : return "GL_BUFFER_USAGE";
        case 0x8766 : return "GL_ARRAY_OBJECT_BUFFER_ATI";
        case 0x8767 : return "GL_ARRAY_OBJECT_OFFSET_ATI";
        case 0x8768 : return "GL_ELEMENT_ARRAY_ATI";
        case 0x8769 : return "GL_ELEMENT_ARRAY_TYPE_ATI";
        case 0x876A : return "GL_ELEMENT_ARRAY_POINTER_ATI";
        case 0x876B : return "GL_MAX_VERTEX_STREAMS_ATI";
        case 0x876C : return "GL_VERTEX_STREAM0_ATI";
        case 0x876D : return "GL_VERTEX_STREAM1_ATI";
        case 0x876E : return "GL_VERTEX_STREAM2_ATI";
        case 0x876F : return "GL_VERTEX_STREAM3_ATI";
        case 0x8770 : return "GL_VERTEX_STREAM4_ATI";
        case 0x8771 : return "GL_VERTEX_STREAM5_ATI";
        case 0x8772 : return "GL_VERTEX_STREAM6_ATI";
        case 0x8773 : return "GL_VERTEX_STREAM7_ATI";
        case 0x8774 : return "GL_VERTEX_SOURCE_ATI";
        case 0x8775 : return "GL_BUMP_ROT_MATRIX_ATI";
        case 0x8776 : return "GL_BUMP_ROT_MATRIX_SIZE_ATI";
        case 0x8777 : return "GL_BUMP_NUM_TEX_UNITS_ATI";
        case 0x8778 : return "GL_BUMP_TEX_UNITS_ATI";
        case 0x8779 : return "GL_DUDV_ATI";
        case 0x877A : return "GL_DU8DV8_ATI";
        case 0x877B : return "GL_BUMP_ENVMAP_ATI";
        case 0x877C : return "GL_BUMP_TARGET_ATI";
        case 0x8780 : return "GL_VERTEX_SHADER_EXT";
        case 0x8781 : return "GL_VERTEX_SHADER_BINDING_EXT";
        case 0x8782 : return "GL_OP_INDEX_EXT";
        case 0x8783 : return "GL_OP_NEGATE_EXT";
        case 0x8784 : return "GL_OP_DOT3_EXT";
        case 0x8785 : return "GL_OP_DOT4_EXT";
        case 0x8786 : return "GL_OP_MUL_EXT";
        case 0x8787 : return "GL_OP_ADD_EXT";
        case 0x8788 : return "GL_OP_MADD_EXT";
        case 0x8789 : return "GL_OP_FRAC_EXT";
        case 0x878A : return "GL_OP_MAX_EXT";
        case 0x878B : return "GL_OP_MIN_EXT";
        case 0x878C : return "GL_OP_SET_GE_EXT";
        case 0x878D : return "GL_OP_SET_LT_EXT";
        case 0x878E : return "GL_OP_CLAMP_EXT";
        case 0x878F : return "GL_OP_FLOOR_EXT";
        case 0x8790 : return "GL_OP_ROUND_EXT";
        case 0x8791 : return "GL_OP_EXP_BASE_2_EXT";
        case 0x8792 : return "GL_OP_LOG_BASE_2_EXT";
        case 0x8793 : return "GL_OP_POWER_EXT";
        case 0x8794 : return "GL_OP_RECIP_EXT";
        case 0x8795 : return "GL_OP_RECIP_SQRT_EXT";
        case 0x8796 : return "GL_OP_SUB_EXT";
        case 0x8797 : return "GL_OP_CROSS_PRODUCT_EXT";
        case 0x8798 : return "GL_OP_MULTIPLY_MATRIX_EXT";
        case 0x8799 : return "GL_OP_MOV_EXT";
        case 0x879A : return "GL_OUTPUT_VERTEX_EXT";
        case 0x879B : return "GL_OUTPUT_COLOR0_EXT";
        case 0x879C : return "GL_OUTPUT_COLOR1_EXT";
        case 0x879D : return "GL_OUTPUT_TEXTURE_COORD0_EXT";
        case 0x879E : return "GL_OUTPUT_TEXTURE_COORD1_EXT";
        case 0x879F : return "GL_OUTPUT_TEXTURE_COORD2_EXT";
        case 0x87A0 : return "GL_OUTPUT_TEXTURE_COORD3_EXT";
        case 0x87A1 : return "GL_OUTPUT_TEXTURE_COORD4_EXT";
        case 0x87A2 : return "GL_OUTPUT_TEXTURE_COORD5_EXT";
        case 0x87A3 : return "GL_OUTPUT_TEXTURE_COORD6_EXT";
        case 0x87A4 : return "GL_OUTPUT_TEXTURE_COORD7_EXT";
        case 0x87A5 : return "GL_OUTPUT_TEXTURE_COORD8_EXT";
        case 0x87A6 : return "GL_OUTPUT_TEXTURE_COORD9_EXT";
        case 0x87A7 : return "GL_OUTPUT_TEXTURE_COORD10_EXT";
        case 0x87A8 : return "GL_OUTPUT_TEXTURE_COORD11_EXT";
        case 0x87A9 : return "GL_OUTPUT_TEXTURE_COORD12_EXT";
        case 0x87AA : return "GL_OUTPUT_TEXTURE_COORD13_EXT";
        case 0x87AB : return "GL_OUTPUT_TEXTURE_COORD14_EXT";
        case 0x87AC : return "GL_OUTPUT_TEXTURE_COORD15_EXT";
        case 0x87AD : return "GL_OUTPUT_TEXTURE_COORD16_EXT";
        case 0x87AE : return "GL_OUTPUT_TEXTURE_COORD17_EXT";
        case 0x87AF : return "GL_OUTPUT_TEXTURE_COORD18_EXT";
        case 0x87B0 : return "GL_OUTPUT_TEXTURE_COORD19_EXT";
        case 0x87B1 : return "GL_OUTPUT_TEXTURE_COORD20_EXT";
        case 0x87B2 : return "GL_OUTPUT_TEXTURE_COORD21_EXT";
        case 0x87B3 : return "GL_OUTPUT_TEXTURE_COORD22_EXT";
        case 0x87B4 : return "GL_OUTPUT_TEXTURE_COORD23_EXT";
        case 0x87B5 : return "GL_OUTPUT_TEXTURE_COORD24_EXT";
        case 0x87B6 : return "GL_OUTPUT_TEXTURE_COORD25_EXT";
        case 0x87B7 : return "GL_OUTPUT_TEXTURE_COORD26_EXT";
        case 0x87B8 : return "GL_OUTPUT_TEXTURE_COORD27_EXT";
        case 0x87B9 : return "GL_OUTPUT_TEXTURE_COORD28_EXT";
        case 0x87BA : return "GL_OUTPUT_TEXTURE_COORD29_EXT";
        case 0x87BB : return "GL_OUTPUT_TEXTURE_COORD30_EXT";
        case 0x87BC : return "GL_OUTPUT_TEXTURE_COORD31_EXT";
        case 0x87BD : return "GL_OUTPUT_FOG_EXT";
        case 0x87BE : return "GL_SCALAR_EXT";
        case 0x87BF : return "GL_VECTOR_EXT";
        case 0x87C0 : return "GL_MATRIX_EXT";
        case 0x87C1 : return "GL_VARIANT_EXT";
        case 0x87C2 : return "GL_INVARIANT_EXT";
        case 0x87C3 : return "GL_LOCAL_CONSTANT_EXT";
        case 0x87C4 : return "GL_LOCAL_EXT";
        case 0x87C5 : return "GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT";
        case 0x87C6 : return "GL_MAX_VERTEX_SHADER_VARIANTS_EXT";
        case 0x87C7 : return "GL_MAX_VERTEX_SHADER_INVARIANTS_EXT";
        case 0x87C8 : return "GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT";
        case 0x87C9 : return "GL_MAX_VERTEX_SHADER_LOCALS_EXT";
        case 0x87CA : return "GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT";
        case 0x87CB : return "GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT";
        case 0x87CC : return "GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT";
        case 0x87CD : return "GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT";
        case 0x87CE : return "GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT";
        case 0x87CF : return "GL_VERTEX_SHADER_INSTRUCTIONS_EXT";
        case 0x87D0 : return "GL_VERTEX_SHADER_VARIANTS_EXT";
        case 0x87D1 : return "GL_VERTEX_SHADER_INVARIANTS_EXT";
        case 0x87D2 : return "GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT";
        case 0x87D3 : return "GL_VERTEX_SHADER_LOCALS_EXT";
        case 0x87D4 : return "GL_VERTEX_SHADER_OPTIMIZED_EXT";
        case 0x87D5 : return "GL_X_EXT";
        case 0x87D6 : return "GL_Y_EXT";
        case 0x87D7 : return "GL_Z_EXT";
        case 0x87D8 : return "GL_W_EXT";
        case 0x87D9 : return "GL_NEGATIVE_X_EXT";
        case 0x87DA : return "GL_NEGATIVE_Y_EXT";
        case 0x87DB : return "GL_NEGATIVE_Z_EXT";
        case 0x87DC : return "GL_NEGATIVE_W_EXT";
        case 0x87DD : return "GL_ZERO_EXT";
        case 0x87DE : return "GL_ONE_EXT";
        case 0x87DF : return "GL_NEGATIVE_ONE_EXT";
        case 0x87E0 : return "GL_NORMALIZED_RANGE_EXT";
        case 0x87E1 : return "GL_FULL_RANGE_EXT";
        case 0x87E2 : return "GL_CURRENT_VERTEX_EXT";
        case 0x87E3 : return "GL_MVP_MATRIX_EXT";
        case 0x87E4 : return "GL_VARIANT_VALUE_EXT";
        case 0x87E5 : return "GL_VARIANT_DATATYPE_EXT";
        case 0x87E6 : return "GL_VARIANT_ARRAY_STRIDE_EXT";
        case 0x87E7 : return "GL_VARIANT_ARRAY_TYPE_EXT";
        case 0x87E8 : return "GL_VARIANT_ARRAY_EXT";
        case 0x87E9 : return "GL_VARIANT_ARRAY_POINTER_EXT";
        case 0x87EA : return "GL_INVARIANT_VALUE_EXT";
        case 0x87EB : return "GL_INVARIANT_DATATYPE_EXT";
        case 0x87EC : return "GL_LOCAL_CONSTANT_VALUE_EXT";
        case 0x87ED : return "GL_LOCAL_CONSTANT_DATATYPE_EXT";
        case 0x87F0 : return "GL_PN_TRIANGLES_ATI";
        case 0x87F1 : return "GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI";
        case 0x87F2 : return "GL_PN_TRIANGLES_POINT_MODE_ATI";
        case 0x87F3 : return "GL_PN_TRIANGLES_NORMAL_MODE_ATI";
        case 0x87F4 : return "GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI";
        case 0x87F5 : return "GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI";
        case 0x87F6 : return "GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI";
        case 0x87F7 : return "GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI";
        case 0x87F8 : return "GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI";
        case 0x87FB : return "GL_VBO_FREE_MEMORY_ATI";
        case 0x87FC : return "GL_TEXTURE_FREE_MEMORY_ATI";
        case 0x87FD : return "GL_RENDERBUFFER_FREE_MEMORY_ATI";
        case 0x87FE : return "GL_NUM_PROGRAM_BINARY_FORMATS";
        case 0x87FF : return "GL_PROGRAM_BINARY_FORMATS";
        case 0x8800 : return "GL_STENCIL_BACK_FUNC";
        case 0x8801 : return "GL_STENCIL_BACK_FAIL";
        case 0x8802 : return "GL_STENCIL_BACK_PASS_DEPTH_FAIL";
        case 0x8803 : return "GL_STENCIL_BACK_PASS_DEPTH_PASS";
        case 0x8814 : return "GL_RGBA32F";
        case 0x8815 : return "GL_RGB32F";
        case 0x8816 : return "GL_ALPHA32F_EXT";
        case 0x8817 : return "GL_INTENSITY_FLOAT32_APPLE";
        case 0x8818 : return "GL_LUMINANCE32F_EXT";
        case 0x8819 : return "GL_LUMINANCE_ALPHA32F_EXT";
        case 0x881A : return "GL_RGBA16F";
        case 0x881B : return "GL_RGB16F";
        case 0x881C : return "GL_ALPHA16F_EXT";
        case 0x881D : return "GL_INTENSITY_FLOAT16_APPLE";
        case 0x881E : return "GL_LUMINANCE16F_EXT";
        case 0x881F : return "GL_LUMINANCE_ALPHA16F_EXT";
        case 0x8824 : return "GL_MAX_DRAW_BUFFERS";
        case 0x8825 : return "GL_DRAW_BUFFER0";
        case 0x8826 : return "GL_DRAW_BUFFER1";
        case 0x8827 : return "GL_DRAW_BUFFER2";
        case 0x8828 : return "GL_DRAW_BUFFER3";
        case 0x8829 : return "GL_DRAW_BUFFER4";
        case 0x882A : return "GL_DRAW_BUFFER5";
        case 0x882B : return "GL_DRAW_BUFFER6";
        case 0x882C : return "GL_DRAW_BUFFER7";
        case 0x882D : return "GL_DRAW_BUFFER8";
        case 0x882E : return "GL_DRAW_BUFFER9";
        case 0x882F : return "GL_DRAW_BUFFER10";
        case 0x8830 : return "GL_DRAW_BUFFER11";
        case 0x8831 : return "GL_DRAW_BUFFER12";
        case 0x8832 : return "GL_DRAW_BUFFER13";
        case 0x8833 : return "GL_DRAW_BUFFER14";
        case 0x8834 : return "GL_DRAW_BUFFER15";
        case 0x8835 : return "GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI";
        case 0x883D : return "GL_BLEND_EQUATION_ALPHA";
        case 0x883F : return "GL_SUBSAMPLE_DISTANCE_AMD";
        case 0x884A : return "GL_TEXTURE_DEPTH_SIZE";
        case 0x884B : return "GL_DEPTH_TEXTURE_MODE";
        case 0x884C : return "GL_TEXTURE_COMPARE_MODE";
        case 0x884D : return "GL_TEXTURE_COMPARE_FUNC";
        case 0x884E : return "GL_COMPARE_R_TO_TEXTURE";
        case 0x884F : return "GL_TEXTURE_CUBE_MAP_SEAMLESS";
        case 0x8850 : return "GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV";
        case 0x8851 : return "GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV";
        case 0x8852 : return "GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV";
        case 0x8853 : return "GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV";
        case 0x8854 : return "GL_OFFSET_HILO_TEXTURE_2D_NV";
        case 0x8855 : return "GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV";
        case 0x8856 : return "GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV";
        case 0x8857 : return "GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV";
        case 0x8858 : return "GL_DEPENDENT_HILO_TEXTURE_2D_NV";
        case 0x8859 : return "GL_DEPENDENT_RGB_TEXTURE_3D_NV";
        case 0x885A : return "GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV";
        case 0x885B : return "GL_DOT_PRODUCT_PASS_THROUGH_NV";
        case 0x885C : return "GL_DOT_PRODUCT_TEXTURE_1D_NV";
        case 0x885D : return "GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV";
        case 0x885E : return "GL_HILO8_NV";
        case 0x885F : return "GL_SIGNED_HILO8_NV";
        case 0x8860 : return "GL_FORCE_BLUE_TO_ONE_NV";
        case 0x8861 : return "GL_POINT_SPRITE";
        case 0x8862 : return "GL_COORD_REPLACE";
        case 0x8863 : return "GL_POINT_SPRITE_R_MODE_NV";
        case 0x8864 : return "GL_PIXEL_COUNTER_BITS_NV";
        case 0x8865 : return "GL_CURRENT_OCCLUSION_QUERY_ID_NV";
        case 0x8866 : return "GL_PIXEL_COUNT_NV";
        case 0x8867 : return "GL_PIXEL_COUNT_AVAILABLE_NV";
        case 0x8868 : return "GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV";
        case 0x8869 : return "GL_MAX_VERTEX_ATTRIBS";
        case 0x886A : return "GL_VERTEX_ATTRIB_ARRAY_NORMALIZED";
        case 0x886C : return "GL_MAX_TESS_CONTROL_INPUT_COMPONENTS";
        case 0x886D : return "GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS";
        case 0x886E : return "GL_DEPTH_STENCIL_TO_RGBA_NV";
        case 0x886F : return "GL_DEPTH_STENCIL_TO_BGRA_NV";
        case 0x8870 : return "GL_FRAGMENT_PROGRAM_NV";
        case 0x8871 : return "GL_MAX_TEXTURE_COORDS";
        case 0x8872 : return "GL_MAX_TEXTURE_IMAGE_UNITS";
        case 0x8873 : return "GL_FRAGMENT_PROGRAM_BINDING_NV";
        case 0x8874 : return "GL_PROGRAM_ERROR_STRING_NV";
        case 0x8878 : return "GL_WRITE_PIXEL_DATA_RANGE_NV";
        case 0x8879 : return "GL_READ_PIXEL_DATA_RANGE_NV";
        case 0x887A : return "GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV";
        case 0x887B : return "GL_READ_PIXEL_DATA_RANGE_LENGTH_NV";
        case 0x887C : return "GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV";
        case 0x887D : return "GL_READ_PIXEL_DATA_RANGE_POINTER_NV";
        case 0x887F : return "GL_GEOMETRY_SHADER_INVOCATIONS";
        case 0x8880 : return "GL_FLOAT_R_NV";
        case 0x8881 : return "GL_FLOAT_RG_NV";
        case 0x8882 : return "GL_FLOAT_RGB_NV";
        case 0x8883 : return "GL_FLOAT_RGBA_NV";
        case 0x8884 : return "GL_FLOAT_R16_NV";
        case 0x8885 : return "GL_FLOAT_R32_NV";
        case 0x8886 : return "GL_FLOAT_RG16_NV";
        case 0x8887 : return "GL_FLOAT_RG32_NV";
        case 0x8888 : return "GL_FLOAT_RGB16_NV";
        case 0x8889 : return "GL_FLOAT_RGB32_NV";
        case 0x888A : return "GL_FLOAT_RGBA16_NV";
        case 0x888B : return "GL_FLOAT_RGBA32_NV";
        case 0x888C : return "GL_TEXTURE_FLOAT_COMPONENTS_NV";
        case 0x888D : return "GL_FLOAT_CLEAR_COLOR_VALUE_NV";
        case 0x888E : return "GL_FLOAT_RGBA_MODE_NV";
        case 0x888F : return "GL_TEXTURE_UNSIGNED_REMAP_MODE_NV";
        case 0x8890 : return "GL_DEPTH_BOUNDS_TEST_EXT";
        case 0x8891 : return "GL_DEPTH_BOUNDS_EXT";
        case 0x8892 : return "GL_ARRAY_BUFFER";
        case 0x8893 : return "GL_ELEMENT_ARRAY_BUFFER";
        case 0x8894 : return "GL_ARRAY_BUFFER_BINDING";
        case 0x8895 : return "GL_ELEMENT_ARRAY_BUFFER_BINDING";
        case 0x8896 : return "GL_VERTEX_ARRAY_BUFFER_BINDING";
        case 0x8897 : return "GL_NORMAL_ARRAY_BUFFER_BINDING";
        case 0x8898 : return "GL_COLOR_ARRAY_BUFFER_BINDING";
        case 0x8899 : return "GL_INDEX_ARRAY_BUFFER_BINDING";
        case 0x889A : return "GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING";
        case 0x889B : return "GL_EDGE_FLAG_ARRAY_BUFFER_BINDING";
        case 0x889C : return "GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING";
        case 0x889D : return "GL_FOG_COORD_ARRAY_BUFFER_BINDING";
        case 0x889E : return "GL_WEIGHT_ARRAY_BUFFER_BINDING";
        case 0x889F : return "GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING";
        case 0x88B8 : return "GL_READ_ONLY";
        case 0x88B9 : return "GL_WRITE_ONLY";
        case 0x88BA : return "GL_READ_WRITE";
        case 0x88BB : return "GL_BUFFER_ACCESS";
        case 0x88BC : return "GL_BUFFER_MAPPED";
        case 0x88BD : return "GL_BUFFER_MAP_POINTER";
        case 0x88BE : return "GL_WRITE_DISCARD_NV";
        case 0x88BF : return "GL_TIME_ELAPSED";
        case 0x88E0 : return "GL_STREAM_DRAW";
        case 0x88E1 : return "GL_STREAM_READ";
        case 0x88E2 : return "GL_STREAM_COPY";
        case 0x88E4 : return "GL_STATIC_DRAW";
        case 0x88E5 : return "GL_STATIC_READ";
        case 0x88E6 : return "GL_STATIC_COPY";
        case 0x88E8 : return "GL_DYNAMIC_DRAW";
        case 0x88E9 : return "GL_DYNAMIC_READ";
        case 0x88EA : return "GL_DYNAMIC_COPY";
        case 0x88EB : return "GL_PIXEL_PACK_BUFFER";
        case 0x88EC : return "GL_PIXEL_UNPACK_BUFFER";
        case 0x88ED : return "GL_PIXEL_PACK_BUFFER_BINDING";
        case 0x88EF : return "GL_PIXEL_UNPACK_BUFFER_BINDING";
        case 0x88F0 : return "GL_DEPTH24_STENCIL8";
        case 0x88F1 : return "GL_TEXTURE_STENCIL_SIZE";
        case 0x88F2 : return "GL_STENCIL_TAG_BITS_EXT";
        case 0x88F3 : return "GL_STENCIL_CLEAR_TAG_VALUE_EXT";
        case 0x88F4 : return "GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV";
        case 0x88F5 : return "GL_MAX_PROGRAM_CALL_DEPTH_NV";
        case 0x88F6 : return "GL_MAX_PROGRAM_IF_DEPTH_NV";
        case 0x88F7 : return "GL_MAX_PROGRAM_LOOP_DEPTH_NV";
        case 0x88F8 : return "GL_MAX_PROGRAM_LOOP_COUNT_NV";
        case 0x88F9 : return "GL_SRC1_COLOR";
        case 0x88FA : return "GL_ONE_MINUS_SRC1_COLOR";
        case 0x88FB : return "GL_ONE_MINUS_SRC1_ALPHA";
        case 0x88FC : return "GL_MAX_DUAL_SOURCE_DRAW_BUFFERS";
        case 0x88FD : return "GL_VERTEX_ATTRIB_ARRAY_INTEGER";
        case 0x88FE : return "GL_VERTEX_ATTRIB_ARRAY_DIVISOR";
        case 0x88FF : return "GL_MAX_ARRAY_TEXTURE_LAYERS";
        case 0x8904 : return "GL_MIN_PROGRAM_TEXEL_OFFSET";
        case 0x8905 : return "GL_MAX_PROGRAM_TEXEL_OFFSET";
        case 0x8906 : return "GL_PROGRAM_ATTRIB_COMPONENTS_NV";
        case 0x8907 : return "GL_PROGRAM_RESULT_COMPONENTS_NV";
        case 0x8908 : return "GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV";
        case 0x8909 : return "GL_MAX_PROGRAM_RESULT_COMPONENTS_NV";
        case 0x8910 : return "GL_STENCIL_TEST_TWO_SIDE_EXT";
        case 0x8911 : return "GL_ACTIVE_STENCIL_FACE_EXT";
        case 0x8912 : return "GL_MIRROR_CLAMP_TO_BORDER_EXT";
        case 0x8914 : return "GL_SAMPLES_PASSED";
        case 0x8916 : return "GL_GEOMETRY_VERTICES_OUT";
        case 0x8917 : return "GL_GEOMETRY_INPUT_TYPE";
        case 0x8918 : return "GL_GEOMETRY_OUTPUT_TYPE";
        case 0x8919 : return "GL_SAMPLER_BINDING";
        case 0x891A : return "GL_CLAMP_VERTEX_COLOR";
        case 0x891B : return "GL_CLAMP_FRAGMENT_COLOR";
        case 0x891C : return "GL_CLAMP_READ_COLOR";
        case 0x891D : return "GL_FIXED_ONLY";
        case 0x891E : return "GL_TESS_CONTROL_PROGRAM_NV";
        case 0x891F : return "GL_TESS_EVALUATION_PROGRAM_NV";
        case 0x8920 : return "GL_FRAGMENT_SHADER_ATI";
        case 0x8921 : return "GL_REG_0_ATI";
        case 0x8922 : return "GL_REG_1_ATI";
        case 0x8923 : return "GL_REG_2_ATI";
        case 0x8924 : return "GL_REG_3_ATI";
        case 0x8925 : return "GL_REG_4_ATI";
        case 0x8926 : return "GL_REG_5_ATI";
        case 0x8927 : return "GL_REG_6_ATI";
        case 0x8928 : return "GL_REG_7_ATI";
        case 0x8929 : return "GL_REG_8_ATI";
        case 0x892A : return "GL_REG_9_ATI";
        case 0x892B : return "GL_REG_10_ATI";
        case 0x892C : return "GL_REG_11_ATI";
        case 0x892D : return "GL_REG_12_ATI";
        case 0x892E : return "GL_REG_13_ATI";
        case 0x892F : return "GL_REG_14_ATI";
        case 0x8930 : return "GL_REG_15_ATI";
        case 0x8931 : return "GL_REG_16_ATI";
        case 0x8932 : return "GL_REG_17_ATI";
        case 0x8933 : return "GL_REG_18_ATI";
        case 0x8934 : return "GL_REG_19_ATI";
        case 0x8935 : return "GL_REG_20_ATI";
        case 0x8936 : return "GL_REG_21_ATI";
        case 0x8937 : return "GL_REG_22_ATI";
        case 0x8938 : return "GL_REG_23_ATI";
        case 0x8939 : return "GL_REG_24_ATI";
        case 0x893A : return "GL_REG_25_ATI";
        case 0x893B : return "GL_REG_26_ATI";
        case 0x893C : return "GL_REG_27_ATI";
        case 0x893D : return "GL_REG_28_ATI";
        case 0x893E : return "GL_REG_29_ATI";
        case 0x893F : return "GL_REG_30_ATI";
        case 0x8940 : return "GL_REG_31_ATI";
        case 0x8941 : return "GL_CON_0_ATI";
        case 0x8942 : return "GL_CON_1_ATI";
        case 0x8943 : return "GL_CON_2_ATI";
        case 0x8944 : return "GL_CON_3_ATI";
        case 0x8945 : return "GL_CON_4_ATI";
        case 0x8946 : return "GL_CON_5_ATI";
        case 0x8947 : return "GL_CON_6_ATI";
        case 0x8948 : return "GL_CON_7_ATI";
        case 0x8949 : return "GL_CON_8_ATI";
        case 0x894A : return "GL_CON_9_ATI";
        case 0x894B : return "GL_CON_10_ATI";
        case 0x894C : return "GL_CON_11_ATI";
        case 0x894D : return "GL_CON_12_ATI";
        case 0x894E : return "GL_CON_13_ATI";
        case 0x894F : return "GL_CON_14_ATI";
        case 0x8950 : return "GL_CON_15_ATI";
        case 0x8951 : return "GL_CON_16_ATI";
        case 0x8952 : return "GL_CON_17_ATI";
        case 0x8953 : return "GL_CON_18_ATI";
        case 0x8954 : return "GL_CON_19_ATI";
        case 0x8955 : return "GL_CON_20_ATI";
        case 0x8956 : return "GL_CON_21_ATI";
        case 0x8957 : return "GL_CON_22_ATI";
        case 0x8958 : return "GL_CON_23_ATI";
        case 0x8959 : return "GL_CON_24_ATI";
        case 0x895A : return "GL_CON_25_ATI";
        case 0x895B : return "GL_CON_26_ATI";
        case 0x895C : return "GL_CON_27_ATI";
        case 0x895D : return "GL_CON_28_ATI";
        case 0x895E : return "GL_CON_29_ATI";
        case 0x895F : return "GL_CON_30_ATI";
        case 0x8960 : return "GL_CON_31_ATI";
        case 0x8961 : return "GL_MOV_ATI";
        case 0x8963 : return "GL_ADD_ATI";
        case 0x8964 : return "GL_MUL_ATI";
        case 0x8965 : return "GL_SUB_ATI";
        case 0x8966 : return "GL_DOT3_ATI";
        case 0x8967 : return "GL_DOT4_ATI";
        case 0x8968 : return "GL_MAD_ATI";
        case 0x8969 : return "GL_LERP_ATI";
        case 0x896A : return "GL_CND_ATI";
        case 0x896B : return "GL_CND0_ATI";
        case 0x896C : return "GL_DOT2_ADD_ATI";
        case 0x896D : return "GL_SECONDARY_INTERPOLATOR_ATI";
        case 0x896E : return "GL_NUM_FRAGMENT_REGISTERS_ATI";
        case 0x896F : return "GL_NUM_FRAGMENT_CONSTANTS_ATI";
        case 0x8970 : return "GL_NUM_PASSES_ATI";
        case 0x8971 : return "GL_NUM_INSTRUCTIONS_PER_PASS_ATI";
        case 0x8972 : return "GL_NUM_INSTRUCTIONS_TOTAL_ATI";
        case 0x8973 : return "GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI";
        case 0x8974 : return "GL_NUM_LOOPBACK_COMPONENTS_ATI";
        case 0x8975 : return "GL_COLOR_ALPHA_PAIRING_ATI";
        case 0x8976 : return "GL_SWIZZLE_STR_ATI";
        case 0x8977 : return "GL_SWIZZLE_STQ_ATI";
        case 0x8978 : return "GL_SWIZZLE_STR_DR_ATI";
        case 0x8979 : return "GL_SWIZZLE_STQ_DQ_ATI";
        case 0x897A : return "GL_SWIZZLE_STRQ_ATI";
        case 0x897B : return "GL_SWIZZLE_STRQ_DQ_ATI";
        case 0x8980 : return "GL_INTERLACE_OML";
        case 0x8981 : return "GL_INTERLACE_READ_OML";
        case 0x8982 : return "GL_FORMAT_SUBSAMPLE_24_24_OML";
        case 0x8983 : return "GL_FORMAT_SUBSAMPLE_244_244_OML";
        case 0x8984 : return "GL_PACK_RESAMPLE_OML";
        case 0x8985 : return "GL_UNPACK_RESAMPLE_OML";
        case 0x8986 : return "GL_RESAMPLE_REPLICATE_OML";
        case 0x8987 : return "GL_RESAMPLE_ZERO_FILL_OML";
        case 0x8988 : return "GL_RESAMPLE_AVERAGE_OML";
        case 0x8989 : return "GL_RESAMPLE_DECIMATE_OML";
        case 0x8A00 : return "GL_VERTEX_ATTRIB_MAP1_APPLE";
        case 0x8A01 : return "GL_VERTEX_ATTRIB_MAP2_APPLE";
        case 0x8A02 : return "GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE";
        case 0x8A03 : return "GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE";
        case 0x8A04 : return "GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE";
        case 0x8A05 : return "GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE";
        case 0x8A06 : return "GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE";
        case 0x8A07 : return "GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE";
        case 0x8A08 : return "GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE";
        case 0x8A09 : return "GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE";
        case 0x8A0A : return "GL_DRAW_PIXELS_APPLE";
        case 0x8A0B : return "GL_FENCE_APPLE";
        case 0x8A0C : return "GL_ELEMENT_ARRAY_APPLE";
        case 0x8A0D : return "GL_ELEMENT_ARRAY_TYPE_APPLE";
        case 0x8A0E : return "GL_ELEMENT_ARRAY_POINTER_APPLE";
        case 0x8A0F : return "GL_COLOR_FLOAT_APPLE";
        case 0x8A11 : return "GL_UNIFORM_BUFFER";
        case 0x8A12 : return "GL_BUFFER_SERIALIZED_MODIFY_APPLE";
        case 0x8A13 : return "GL_BUFFER_FLUSHING_UNMAP_APPLE";
        case 0x8A14 : return "GL_AUX_DEPTH_STENCIL_APPLE";
        case 0x8A15 : return "GL_PACK_ROW_BYTES_APPLE";
        case 0x8A16 : return "GL_UNPACK_ROW_BYTES_APPLE";
        case 0x8A19 : return "GL_RELEASED_APPLE";
        case 0x8A1A : return "GL_VOLATILE_APPLE";
        case 0x8A1B : return "GL_RETAINED_APPLE";
        case 0x8A1C : return "GL_UNDEFINED_APPLE";
        case 0x8A1D : return "GL_PURGEABLE_APPLE";
        case 0x8A1F : return "GL_RGB_422_APPLE";
        case 0x8A28 : return "GL_UNIFORM_BUFFER_BINDING";
        case 0x8A29 : return "GL_UNIFORM_BUFFER_START";
        case 0x8A2A : return "GL_UNIFORM_BUFFER_SIZE";
        case 0x8A2B : return "GL_MAX_VERTEX_UNIFORM_BLOCKS";
        case 0x8A2C : return "GL_MAX_GEOMETRY_UNIFORM_BLOCKS";
        case 0x8A2D : return "GL_MAX_FRAGMENT_UNIFORM_BLOCKS";
        case 0x8A2E : return "GL_MAX_COMBINED_UNIFORM_BLOCKS";
        case 0x8A2F : return "GL_MAX_UNIFORM_BUFFER_BINDINGS";
        case 0x8A30 : return "GL_MAX_UNIFORM_BLOCK_SIZE";
        case 0x8A31 : return "GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS";
        case 0x8A32 : return "GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS";
        case 0x8A33 : return "GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS";
        case 0x8A34 : return "GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT";
        case 0x8A35 : return "GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH";
        case 0x8A36 : return "GL_ACTIVE_UNIFORM_BLOCKS";
        case 0x8A37 : return "GL_UNIFORM_TYPE";
        case 0x8A38 : return "GL_UNIFORM_SIZE";
        case 0x8A39 : return "GL_UNIFORM_NAME_LENGTH";
        case 0x8A3A : return "GL_UNIFORM_BLOCK_INDEX";
        case 0x8A3B : return "GL_UNIFORM_OFFSET";
        case 0x8A3C : return "GL_UNIFORM_ARRAY_STRIDE";
        case 0x8A3D : return "GL_UNIFORM_MATRIX_STRIDE";
        case 0x8A3E : return "GL_UNIFORM_IS_ROW_MAJOR";
        case 0x8A3F : return "GL_UNIFORM_BLOCK_BINDING";
        case 0x8A40 : return "GL_UNIFORM_BLOCK_DATA_SIZE";
        case 0x8A41 : return "GL_UNIFORM_BLOCK_NAME_LENGTH";
        case 0x8A42 : return "GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS";
        case 0x8A43 : return "GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES";
        case 0x8A44 : return "GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER";
        case 0x8A45 : return "GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER";
        case 0x8A46 : return "GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER";
        case 0x8A48 : return "GL_TEXTURE_SRGB_DECODE_EXT";
        case 0x8A49 : return "GL_DECODE_EXT";
        case 0x8A4A : return "GL_SKIP_DECODE_EXT";
        case 0x8A4F : return "GL_PROGRAM_PIPELINE_OBJECT_EXT";
        case 0x8A51 : return "GL_RGB_RAW_422_APPLE";
        case 0x8A52 : return "GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT";
        case 0x8B30 : return "GL_FRAGMENT_SHADER";
        case 0x8B31 : return "GL_VERTEX_SHADER";
        case 0x8B40 : return "GL_PROGRAM_OBJECT_EXT";
        case 0x8B48 : return "GL_SHADER_OBJECT_EXT";
        case 0x8B49 : return "GL_MAX_FRAGMENT_UNIFORM_COMPONENTS";
        case 0x8B4A : return "GL_MAX_VERTEX_UNIFORM_COMPONENTS";
        case 0x8B4B : return "GL_MAX_VARYING_COMPONENTS";
        case 0x8B4C : return "GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS";
        case 0x8B4D : return "GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS";
        case 0x8B4F : return "GL_SHADER_TYPE";
        case 0x8B50 : return "GL_FLOAT_VEC2";
        case 0x8B51 : return "GL_FLOAT_VEC3";
        case 0x8B52 : return "GL_FLOAT_VEC4";
        case 0x8B53 : return "GL_INT_VEC2";
        case 0x8B54 : return "GL_INT_VEC3";
        case 0x8B55 : return "GL_INT_VEC4";
        case 0x8B56 : return "GL_BOOL";
        case 0x8B57 : return "GL_BOOL_VEC2";
        case 0x8B58 : return "GL_BOOL_VEC3";
        case 0x8B59 : return "GL_BOOL_VEC4";
        case 0x8B5A : return "GL_FLOAT_MAT2";
        case 0x8B5B : return "GL_FLOAT_MAT3";
        case 0x8B5C : return "GL_FLOAT_MAT4";
        case 0x8B5D : return "GL_SAMPLER_1D";
        case 0x8B5E : return "GL_SAMPLER_2D";
        case 0x8B5F : return "GL_SAMPLER_3D";
        case 0x8B60 : return "GL_SAMPLER_CUBE";
        case 0x8B61 : return "GL_SAMPLER_1D_SHADOW";
        case 0x8B62 : return "GL_SAMPLER_2D_SHADOW";
        case 0x8B63 : return "GL_SAMPLER_2D_RECT";
        case 0x8B64 : return "GL_SAMPLER_2D_RECT_SHADOW";
        case 0x8B65 : return "GL_FLOAT_MAT2x3";
        case 0x8B66 : return "GL_FLOAT_MAT2x4";
        case 0x8B67 : return "GL_FLOAT_MAT3x2";
        case 0x8B68 : return "GL_FLOAT_MAT3x4";
        case 0x8B69 : return "GL_FLOAT_MAT4x2";
        case 0x8B6A : return "GL_FLOAT_MAT4x3";
        case 0x8B80 : return "GL_DELETE_STATUS";
        case 0x8B81 : return "GL_COMPILE_STATUS";
        case 0x8B82 : return "GL_LINK_STATUS";
        case 0x8B83 : return "GL_VALIDATE_STATUS";
        case 0x8B84 : return "GL_INFO_LOG_LENGTH";
        case 0x8B85 : return "GL_ATTACHED_SHADERS";
        case 0x8B86 : return "GL_ACTIVE_UNIFORMS";
        case 0x8B87 : return "GL_ACTIVE_UNIFORM_MAX_LENGTH";
        case 0x8B88 : return "GL_SHADER_SOURCE_LENGTH";
        case 0x8B89 : return "GL_ACTIVE_ATTRIBUTES";
        case 0x8B8A : return "GL_ACTIVE_ATTRIBUTE_MAX_LENGTH";
        case 0x8B8B : return "GL_FRAGMENT_SHADER_DERIVATIVE_HINT";
        case 0x8B8C : return "GL_SHADING_LANGUAGE_VERSION";
        case 0x8B8D : return "GL_ACTIVE_PROGRAM_EXT";
        case 0x8B90 : return "GL_PALETTE4_RGB8_OES";
        case 0x8B91 : return "GL_PALETTE4_RGBA8_OES";
        case 0x8B92 : return "GL_PALETTE4_R5_G6_B5_OES";
        case 0x8B93 : return "GL_PALETTE4_RGBA4_OES";
        case 0x8B94 : return "GL_PALETTE4_RGB5_A1_OES";
        case 0x8B95 : return "GL_PALETTE8_RGB8_OES";
        case 0x8B96 : return "GL_PALETTE8_RGBA8_OES";
        case 0x8B97 : return "GL_PALETTE8_R5_G6_B5_OES";
        case 0x8B98 : return "GL_PALETTE8_RGBA4_OES";
        case 0x8B99 : return "GL_PALETTE8_RGB5_A1_OES";
        case 0x8B9A : return "GL_IMPLEMENTATION_COLOR_READ_TYPE";
        case 0x8B9B : return "GL_IMPLEMENTATION_COLOR_READ_FORMAT";
        case 0x8BB8 : return "GL_TILE_RASTER_ORDER_FIXED_MESA";
        case 0x8BB9 : return "GL_TILE_RASTER_ORDER_INCREASING_X_MESA";
        case 0x8BBA : return "GL_TILE_RASTER_ORDER_INCREASING_Y_MESA";
        case 0x8BBB : return "GL_FRAMEBUFFER_FLIP_Y_MESA";
        case 0x8BBC : return "GL_FRAMEBUFFER_FLIP_X_MESA";
        case 0x8BBD : return "GL_FRAMEBUFFER_SWAP_XY_MESA";
        case 0x8BC0 : return "GL_COUNTER_TYPE_AMD";
        case 0x8BC1 : return "GL_COUNTER_RANGE_AMD";
        case 0x8BC2 : return "GL_UNSIGNED_INT64_AMD";
        case 0x8BC3 : return "GL_PERCENTAGE_AMD";
        case 0x8BC4 : return "GL_PERFMON_RESULT_AVAILABLE_AMD";
        case 0x8BC5 : return "GL_PERFMON_RESULT_SIZE_AMD";
        case 0x8BC6 : return "GL_PERFMON_RESULT_AMD";
        case 0x8C10 : return "GL_TEXTURE_RED_TYPE";
        case 0x8C11 : return "GL_TEXTURE_GREEN_TYPE";
        case 0x8C12 : return "GL_TEXTURE_BLUE_TYPE";
        case 0x8C13 : return "GL_TEXTURE_ALPHA_TYPE";
        case 0x8C14 : return "GL_TEXTURE_LUMINANCE_TYPE";
        case 0x8C15 : return "GL_TEXTURE_INTENSITY_TYPE";
        case 0x8C16 : return "GL_TEXTURE_DEPTH_TYPE";
        case 0x8C17 : return "GL_UNSIGNED_NORMALIZED";
        case 0x8C18 : return "GL_TEXTURE_1D_ARRAY";
        case 0x8C19 : return "GL_PROXY_TEXTURE_1D_ARRAY";
        case 0x8C1A : return "GL_TEXTURE_2D_ARRAY";
        case 0x8C1B : return "GL_PROXY_TEXTURE_2D_ARRAY";
        case 0x8C1C : return "GL_TEXTURE_BINDING_1D_ARRAY";
        case 0x8C1D : return "GL_TEXTURE_BINDING_2D_ARRAY";
        case 0x8C26 : return "GL_GEOMETRY_PROGRAM_NV";
        case 0x8C27 : return "GL_MAX_PROGRAM_OUTPUT_VERTICES_NV";
        case 0x8C28 : return "GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV";
        case 0x8C29 : return "GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS";
        case 0x8C2A : return "GL_TEXTURE_BUFFER";
        case 0x8C2B : return "GL_MAX_TEXTURE_BUFFER_SIZE";
        case 0x8C2C : return "GL_TEXTURE_BINDING_BUFFER";
        case 0x8C2D : return "GL_TEXTURE_BUFFER_DATA_STORE_BINDING";
        case 0x8C2E : return "GL_TEXTURE_BUFFER_FORMAT_EXT";
        case 0x8C2F : return "GL_ANY_SAMPLES_PASSED";
        case 0x8C36 : return "GL_SAMPLE_SHADING";
        case 0x8C37 : return "GL_MIN_SAMPLE_SHADING_VALUE";
        case 0x8C3A : return "GL_R11F_G11F_B10F";
        case 0x8C3B : return "GL_UNSIGNED_INT_10F_11F_11F_REV";
        case 0x8C3C : return "GL_RGBA_SIGNED_COMPONENTS_EXT";
        case 0x8C3D : return "GL_RGB9_E5";
        case 0x8C3E : return "GL_UNSIGNED_INT_5_9_9_9_REV";
        case 0x8C3F : return "GL_TEXTURE_SHARED_SIZE";
        case 0x8C40 : return "GL_SRGB";
        case 0x8C41 : return "GL_SRGB8";
        case 0x8C42 : return "GL_SRGB_ALPHA";
        case 0x8C43 : return "GL_SRGB8_ALPHA8";
        case 0x8C44 : return "GL_SLUMINANCE_ALPHA";
        case 0x8C45 : return "GL_SLUMINANCE8_ALPHA8";
        case 0x8C46 : return "GL_SLUMINANCE";
        case 0x8C47 : return "GL_SLUMINANCE8";
        case 0x8C48 : return "GL_COMPRESSED_SRGB";
        case 0x8C49 : return "GL_COMPRESSED_SRGB_ALPHA";
        case 0x8C4A : return "GL_COMPRESSED_SLUMINANCE";
        case 0x8C4B : return "GL_COMPRESSED_SLUMINANCE_ALPHA";
        case 0x8C4C : return "GL_COMPRESSED_SRGB_S3TC_DXT1_EXT";
        case 0x8C4D : return "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT";
        case 0x8C4E : return "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT";
        case 0x8C4F : return "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT";
        case 0x8C70 : return "GL_COMPRESSED_LUMINANCE_LATC1_EXT";
        case 0x8C71 : return "GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT";
        case 0x8C72 : return "GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT";
        case 0x8C73 : return "GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT";
        case 0x8C74 : return "GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV";
        case 0x8C75 : return "GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV";
        case 0x8C76 : return "GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH";
        case 0x8C77 : return "GL_BACK_PRIMARY_COLOR_NV";
        case 0x8C78 : return "GL_BACK_SECONDARY_COLOR_NV";
        case 0x8C79 : return "GL_TEXTURE_COORD_NV";
        case 0x8C7A : return "GL_CLIP_DISTANCE_NV";
        case 0x8C7B : return "GL_VERTEX_ID_NV";
        case 0x8C7C : return "GL_PRIMITIVE_ID_NV";
        case 0x8C7D : return "GL_GENERIC_ATTRIB_NV";
        case 0x8C7E : return "GL_TRANSFORM_FEEDBACK_ATTRIBS_NV";
        case 0x8C7F : return "GL_TRANSFORM_FEEDBACK_BUFFER_MODE";
        case 0x8C80 : return "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS";
        case 0x8C81 : return "GL_ACTIVE_VARYINGS_NV";
        case 0x8C82 : return "GL_ACTIVE_VARYING_MAX_LENGTH_NV";
        case 0x8C83 : return "GL_TRANSFORM_FEEDBACK_VARYINGS";
        case 0x8C84 : return "GL_TRANSFORM_FEEDBACK_BUFFER_START";
        case 0x8C85 : return "GL_TRANSFORM_FEEDBACK_BUFFER_SIZE";
        case 0x8C86 : return "GL_TRANSFORM_FEEDBACK_RECORD_NV";
        case 0x8C87 : return "GL_PRIMITIVES_GENERATED";
        case 0x8C88 : return "GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN";
        case 0x8C89 : return "GL_RASTERIZER_DISCARD";
        case 0x8C8A : return "GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS";
        case 0x8C8B : return "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS";
        case 0x8C8C : return "GL_INTERLEAVED_ATTRIBS";
        case 0x8C8D : return "GL_SEPARATE_ATTRIBS";
        case 0x8C8E : return "GL_TRANSFORM_FEEDBACK_BUFFER";
        case 0x8C8F : return "GL_TRANSFORM_FEEDBACK_BUFFER_BINDING";
        case 0x8CA0 : return "GL_POINT_SPRITE_COORD_ORIGIN";
        case 0x8CA1 : return "GL_LOWER_LEFT";
        case 0x8CA2 : return "GL_UPPER_LEFT";
        case 0x8CA3 : return "GL_STENCIL_BACK_REF";
        case 0x8CA4 : return "GL_STENCIL_BACK_VALUE_MASK";
        case 0x8CA5 : return "GL_STENCIL_BACK_WRITEMASK";
        case 0x8CA6 : return "GL_DRAW_FRAMEBUFFER_BINDING";
        case 0x8CA7 : return "GL_RENDERBUFFER_BINDING";
        case 0x8CA8 : return "GL_READ_FRAMEBUFFER";
        case 0x8CA9 : return "GL_DRAW_FRAMEBUFFER";
        case 0x8CAA : return "GL_READ_FRAMEBUFFER_BINDING";
        case 0x8CAB : return "GL_RENDERBUFFER_COVERAGE_SAMPLES_NV";
        case 0x8CAC : return "GL_DEPTH_COMPONENT32F";
        case 0x8CAD : return "GL_DEPTH32F_STENCIL8";
        case 0x8CD0 : return "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE";
        case 0x8CD1 : return "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME";
        case 0x8CD2 : return "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL";
        case 0x8CD3 : return "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE";
        case 0x8CD4 : return "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER";
        case 0x8CD5 : return "GL_FRAMEBUFFER_COMPLETE";
        case 0x8CD6 : return "GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT";
        case 0x8CD7 : return "GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";
        case 0x8CDB : return "GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER";
        case 0x8CDC : return "GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER";
        case 0x8CDD : return "GL_FRAMEBUFFER_UNSUPPORTED";
        case 0x8CDF : return "GL_MAX_COLOR_ATTACHMENTS";
        case 0x8CE0 : return "GL_COLOR_ATTACHMENT0";
        case 0x8CE1 : return "GL_COLOR_ATTACHMENT1";
        case 0x8CE2 : return "GL_COLOR_ATTACHMENT2";
        case 0x8CE3 : return "GL_COLOR_ATTACHMENT3";
        case 0x8CE4 : return "GL_COLOR_ATTACHMENT4";
        case 0x8CE5 : return "GL_COLOR_ATTACHMENT5";
        case 0x8CE6 : return "GL_COLOR_ATTACHMENT6";
        case 0x8CE7 : return "GL_COLOR_ATTACHMENT7";
        case 0x8CE8 : return "GL_COLOR_ATTACHMENT8";
        case 0x8CE9 : return "GL_COLOR_ATTACHMENT9";
        case 0x8CEA : return "GL_COLOR_ATTACHMENT10";
        case 0x8CEB : return "GL_COLOR_ATTACHMENT11";
        case 0x8CEC : return "GL_COLOR_ATTACHMENT12";
        case 0x8CED : return "GL_COLOR_ATTACHMENT13";
        case 0x8CEE : return "GL_COLOR_ATTACHMENT14";
        case 0x8CEF : return "GL_COLOR_ATTACHMENT15";
        case 0x8CF0 : return "GL_COLOR_ATTACHMENT16";
        case 0x8CF1 : return "GL_COLOR_ATTACHMENT17";
        case 0x8CF2 : return "GL_COLOR_ATTACHMENT18";
        case 0x8CF3 : return "GL_COLOR_ATTACHMENT19";
        case 0x8CF4 : return "GL_COLOR_ATTACHMENT20";
        case 0x8CF5 : return "GL_COLOR_ATTACHMENT21";
        case 0x8CF6 : return "GL_COLOR_ATTACHMENT22";
        case 0x8CF7 : return "GL_COLOR_ATTACHMENT23";
        case 0x8CF8 : return "GL_COLOR_ATTACHMENT24";
        case 0x8CF9 : return "GL_COLOR_ATTACHMENT25";
        case 0x8CFA : return "GL_COLOR_ATTACHMENT26";
        case 0x8CFB : return "GL_COLOR_ATTACHMENT27";
        case 0x8CFC : return "GL_COLOR_ATTACHMENT28";
        case 0x8CFD : return "GL_COLOR_ATTACHMENT29";
        case 0x8CFE : return "GL_COLOR_ATTACHMENT30";
        case 0x8CFF : return "GL_COLOR_ATTACHMENT31";
        case 0x8D00 : return "GL_DEPTH_ATTACHMENT";
        case 0x8D20 : return "GL_STENCIL_ATTACHMENT";
        case 0x8D40 : return "GL_FRAMEBUFFER";
        case 0x8D41 : return "GL_RENDERBUFFER";
        case 0x8D42 : return "GL_RENDERBUFFER_WIDTH";
        case 0x8D43 : return "GL_RENDERBUFFER_HEIGHT";
        case 0x8D44 : return "GL_RENDERBUFFER_INTERNAL_FORMAT";
        case 0x8D46 : return "GL_STENCIL_INDEX1";
        case 0x8D47 : return "GL_STENCIL_INDEX4";
        case 0x8D48 : return "GL_STENCIL_INDEX8";
        case 0x8D49 : return "GL_STENCIL_INDEX16";
        case 0x8D50 : return "GL_RENDERBUFFER_RED_SIZE";
        case 0x8D51 : return "GL_RENDERBUFFER_GREEN_SIZE";
        case 0x8D52 : return "GL_RENDERBUFFER_BLUE_SIZE";
        case 0x8D53 : return "GL_RENDERBUFFER_ALPHA_SIZE";
        case 0x8D54 : return "GL_RENDERBUFFER_DEPTH_SIZE";
        case 0x8D55 : return "GL_RENDERBUFFER_STENCIL_SIZE";
        case 0x8D56 : return "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE";
        case 0x8D57 : return "GL_MAX_SAMPLES";
        case 0x8D62 : return "GL_RGB565";
        case 0x8D69 : return "GL_PRIMITIVE_RESTART_FIXED_INDEX";
        case 0x8D6A : return "GL_ANY_SAMPLES_PASSED_CONSERVATIVE";
        case 0x8D6B : return "GL_MAX_ELEMENT_INDEX";
        case 0x8D70 : return "GL_RGBA32UI";
        case 0x8D71 : return "GL_RGB32UI";
        case 0x8D72 : return "GL_ALPHA32UI_EXT";
        case 0x8D73 : return "GL_INTENSITY32UI_EXT";
        case 0x8D74 : return "GL_LUMINANCE32UI_EXT";
        case 0x8D75 : return "GL_LUMINANCE_ALPHA32UI_EXT";
        case 0x8D76 : return "GL_RGBA16UI";
        case 0x8D77 : return "GL_RGB16UI";
        case 0x8D78 : return "GL_ALPHA16UI_EXT";
        case 0x8D79 : return "GL_INTENSITY16UI_EXT";
        case 0x8D7A : return "GL_LUMINANCE16UI_EXT";
        case 0x8D7B : return "GL_LUMINANCE_ALPHA16UI_EXT";
        case 0x8D7C : return "GL_RGBA8UI";
        case 0x8D7D : return "GL_RGB8UI";
        case 0x8D7E : return "GL_ALPHA8UI_EXT";
        case 0x8D7F : return "GL_INTENSITY8UI_EXT";
        case 0x8D80 : return "GL_LUMINANCE8UI_EXT";
        case 0x8D81 : return "GL_LUMINANCE_ALPHA8UI_EXT";
        case 0x8D82 : return "GL_RGBA32I";
        case 0x8D83 : return "GL_RGB32I";
        case 0x8D84 : return "GL_ALPHA32I_EXT";
        case 0x8D85 : return "GL_INTENSITY32I_EXT";
        case 0x8D86 : return "GL_LUMINANCE32I_EXT";
        case 0x8D87 : return "GL_LUMINANCE_ALPHA32I_EXT";
        case 0x8D88 : return "GL_RGBA16I";
        case 0x8D89 : return "GL_RGB16I";
        case 0x8D8A : return "GL_ALPHA16I_EXT";
        case 0x8D8B : return "GL_INTENSITY16I_EXT";
        case 0x8D8C : return "GL_LUMINANCE16I_EXT";
        case 0x8D8D : return "GL_LUMINANCE_ALPHA16I_EXT";
        case 0x8D8E : return "GL_RGBA8I";
        case 0x8D8F : return "GL_RGB8I";
        case 0x8D90 : return "GL_ALPHA8I_EXT";
        case 0x8D91 : return "GL_INTENSITY8I_EXT";
        case 0x8D92 : return "GL_LUMINANCE8I_EXT";
        case 0x8D93 : return "GL_LUMINANCE_ALPHA8I_EXT";
        case 0x8D94 : return "GL_RED_INTEGER";
        case 0x8D95 : return "GL_GREEN_INTEGER";
        case 0x8D96 : return "GL_BLUE_INTEGER";
        case 0x8D97 : return "GL_ALPHA_INTEGER";
        case 0x8D98 : return "GL_RGB_INTEGER";
        case 0x8D99 : return "GL_RGBA_INTEGER";
        case 0x8D9A : return "GL_BGR_INTEGER";
        case 0x8D9B : return "GL_BGRA_INTEGER";
        case 0x8D9C : return "GL_LUMINANCE_INTEGER_EXT";
        case 0x8D9D : return "GL_LUMINANCE_ALPHA_INTEGER_EXT";
        case 0x8D9E : return "GL_RGBA_INTEGER_MODE_EXT";
        case 0x8D9F : return "GL_INT_2_10_10_10_REV";
        case 0x8DA0 : return "GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV";
        case 0x8DA1 : return "GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV";
        case 0x8DA2 : return "GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV";
        case 0x8DA3 : return "GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV";
        case 0x8DA4 : return "GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV";
        case 0x8DA5 : return "GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV";
        case 0x8DA6 : return "GL_MAX_PROGRAM_GENERIC_RESULTS_NV";
        case 0x8DA7 : return "GL_FRAMEBUFFER_ATTACHMENT_LAYERED";
        case 0x8DA8 : return "GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS";
        case 0x8DA9 : return "GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT";
        case 0x8DAA : return "GL_LAYER_NV";
        case 0x8DAB : return "GL_DEPTH_COMPONENT32F_NV";
        case 0x8DAC : return "GL_DEPTH32F_STENCIL8_NV";
        case 0x8DAD : return "GL_FLOAT_32_UNSIGNED_INT_24_8_REV";
        case 0x8DAF : return "GL_DEPTH_BUFFER_FLOAT_MODE_NV";
        case 0x8DB9 : return "GL_FRAMEBUFFER_SRGB";
        case 0x8DBA : return "GL_FRAMEBUFFER_SRGB_CAPABLE_EXT";
        case 0x8DBB : return "GL_COMPRESSED_RED_RGTC1";
        case 0x8DBC : return "GL_COMPRESSED_SIGNED_RED_RGTC1";
        case 0x8DBD : return "GL_COMPRESSED_RG_RGTC2";
        case 0x8DBE : return "GL_COMPRESSED_SIGNED_RG_RGTC2";
        case 0x8DC0 : return "GL_SAMPLER_1D_ARRAY";
        case 0x8DC1 : return "GL_SAMPLER_2D_ARRAY";
        case 0x8DC2 : return "GL_SAMPLER_BUFFER";
        case 0x8DC3 : return "GL_SAMPLER_1D_ARRAY_SHADOW";
        case 0x8DC4 : return "GL_SAMPLER_2D_ARRAY_SHADOW";
        case 0x8DC5 : return "GL_SAMPLER_CUBE_SHADOW";
        case 0x8DC6 : return "GL_UNSIGNED_INT_VEC2";
        case 0x8DC7 : return "GL_UNSIGNED_INT_VEC3";
        case 0x8DC8 : return "GL_UNSIGNED_INT_VEC4";
        case 0x8DC9 : return "GL_INT_SAMPLER_1D";
        case 0x8DCA : return "GL_INT_SAMPLER_2D";
        case 0x8DCB : return "GL_INT_SAMPLER_3D";
        case 0x8DCC : return "GL_INT_SAMPLER_CUBE";
        case 0x8DCD : return "GL_INT_SAMPLER_2D_RECT";
        case 0x8DCE : return "GL_INT_SAMPLER_1D_ARRAY";
        case 0x8DCF : return "GL_INT_SAMPLER_2D_ARRAY";
        case 0x8DD0 : return "GL_INT_SAMPLER_BUFFER";
        case 0x8DD1 : return "GL_UNSIGNED_INT_SAMPLER_1D";
        case 0x8DD2 : return "GL_UNSIGNED_INT_SAMPLER_2D";
        case 0x8DD3 : return "GL_UNSIGNED_INT_SAMPLER_3D";
        case 0x8DD4 : return "GL_UNSIGNED_INT_SAMPLER_CUBE";
        case 0x8DD5 : return "GL_UNSIGNED_INT_SAMPLER_2D_RECT";
        case 0x8DD6 : return "GL_UNSIGNED_INT_SAMPLER_1D_ARRAY";
        case 0x8DD7 : return "GL_UNSIGNED_INT_SAMPLER_2D_ARRAY";
        case 0x8DD8 : return "GL_UNSIGNED_INT_SAMPLER_BUFFER";
        case 0x8DD9 : return "GL_GEOMETRY_SHADER";
        case 0x8DDA : return "GL_GEOMETRY_VERTICES_OUT_EXT";
        case 0x8DDB : return "GL_GEOMETRY_INPUT_TYPE_EXT";
        case 0x8DDC : return "GL_GEOMETRY_OUTPUT_TYPE_EXT";
        case 0x8DDD : return "GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT";
        case 0x8DDE : return "GL_MAX_VERTEX_VARYING_COMPONENTS_EXT";
        case 0x8DDF : return "GL_MAX_GEOMETRY_UNIFORM_COMPONENTS";
        case 0x8DE0 : return "GL_MAX_GEOMETRY_OUTPUT_VERTICES";
        case 0x8DE1 : return "GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS";
        case 0x8DE2 : return "GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT";
        case 0x8DE3 : return "GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT";
        case 0x8DE4 : return "GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT";
        case 0x8DE5 : return "GL_ACTIVE_SUBROUTINES";
        case 0x8DE6 : return "GL_ACTIVE_SUBROUTINE_UNIFORMS";
        case 0x8DE7 : return "GL_MAX_SUBROUTINES";
        case 0x8DE8 : return "GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS";
        case 0x8DED : return "GL_MAX_BINDABLE_UNIFORM_SIZE_EXT";
        case 0x8DEE : return "GL_UNIFORM_BUFFER_EXT";
        case 0x8DEF : return "GL_UNIFORM_BUFFER_BINDING_EXT";
        case 0x8DF0 : return "GL_LOW_FLOAT";
        case 0x8DF1 : return "GL_MEDIUM_FLOAT";
        case 0x8DF2 : return "GL_HIGH_FLOAT";
        case 0x8DF3 : return "GL_LOW_INT";
        case 0x8DF4 : return "GL_MEDIUM_INT";
        case 0x8DF5 : return "GL_HIGH_INT";
        case 0x8DF8 : return "GL_SHADER_BINARY_FORMATS";
        case 0x8DF9 : return "GL_NUM_SHADER_BINARY_FORMATS";
        case 0x8DFA : return "GL_SHADER_COMPILER";
        case 0x8DFB : return "GL_MAX_VERTEX_UNIFORM_VECTORS";
        case 0x8DFC : return "GL_MAX_VARYING_VECTORS";
        case 0x8DFD : return "GL_MAX_FRAGMENT_UNIFORM_VECTORS";
        case 0x8E10 : return "GL_RENDERBUFFER_COLOR_SAMPLES_NV";
        case 0x8E11 : return "GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV";
        case 0x8E12 : return "GL_MULTISAMPLE_COVERAGE_MODES_NV";
        case 0x8E13 : return "GL_QUERY_WAIT";
        case 0x8E14 : return "GL_QUERY_NO_WAIT";
        case 0x8E15 : return "GL_QUERY_BY_REGION_WAIT";
        case 0x8E16 : return "GL_QUERY_BY_REGION_NO_WAIT";
        case 0x8E17 : return "GL_QUERY_WAIT_INVERTED";
        case 0x8E18 : return "GL_QUERY_NO_WAIT_INVERTED";
        case 0x8E19 : return "GL_QUERY_BY_REGION_WAIT_INVERTED";
        case 0x8E1A : return "GL_QUERY_BY_REGION_NO_WAIT_INVERTED";
        case 0x8E1B : return "GL_POLYGON_OFFSET_CLAMP";
        case 0x8E1E : return "GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS";
        case 0x8E1F : return "GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS";
        case 0x8E20 : return "GL_COLOR_SAMPLES_NV";
        case 0x8E22 : return "GL_TRANSFORM_FEEDBACK";
        case 0x8E23 : return "GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED";
        case 0x8E24 : return "GL_TRANSFORM_FEEDBACK_ACTIVE";
        case 0x8E25 : return "GL_TRANSFORM_FEEDBACK_BINDING";
        case 0x8E26 : return "GL_FRAME_NV";
        case 0x8E27 : return "GL_FIELDS_NV";
        case 0x8E28 : return "GL_CURRENT_TIME_NV";
        case 0x8E29 : return "GL_NUM_FILL_STREAMS_NV";
        case 0x8E2A : return "GL_PRESENT_TIME_NV";
        case 0x8E2B : return "GL_PRESENT_DURATION_NV";
        case 0x8E2D : return "GL_PROGRAM_MATRIX_EXT";
        case 0x8E2E : return "GL_TRANSPOSE_PROGRAM_MATRIX_EXT";
        case 0x8E2F : return "GL_PROGRAM_MATRIX_STACK_DEPTH_EXT";
        case 0x8E42 : return "GL_TEXTURE_SWIZZLE_R";
        case 0x8E43 : return "GL_TEXTURE_SWIZZLE_G";
        case 0x8E44 : return "GL_TEXTURE_SWIZZLE_B";
        case 0x8E45 : return "GL_TEXTURE_SWIZZLE_A";
        case 0x8E46 : return "GL_TEXTURE_SWIZZLE_RGBA";
        case 0x8E47 : return "GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS";
        case 0x8E48 : return "GL_ACTIVE_SUBROUTINE_MAX_LENGTH";
        case 0x8E49 : return "GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH";
        case 0x8E4A : return "GL_NUM_COMPATIBLE_SUBROUTINES";
        case 0x8E4B : return "GL_COMPATIBLE_SUBROUTINES";
        case 0x8E4C : return "GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION";
        case 0x8E4D : return "GL_FIRST_VERTEX_CONVENTION";
        case 0x8E4E : return "GL_LAST_VERTEX_CONVENTION";
        case 0x8E4F : return "GL_PROVOKING_VERTEX";
        case 0x8E50 : return "GL_SAMPLE_POSITION";
        case 0x8E51 : return "GL_SAMPLE_MASK";
        case 0x8E52 : return "GL_SAMPLE_MASK_VALUE";
        case 0x8E53 : return "GL_TEXTURE_BINDING_RENDERBUFFER_NV";
        case 0x8E54 : return "GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV";
        case 0x8E55 : return "GL_TEXTURE_RENDERBUFFER_NV";
        case 0x8E56 : return "GL_SAMPLER_RENDERBUFFER_NV";
        case 0x8E57 : return "GL_INT_SAMPLER_RENDERBUFFER_NV";
        case 0x8E58 : return "GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV";
        case 0x8E59 : return "GL_MAX_SAMPLE_MASK_WORDS";
        case 0x8E5A : return "GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV";
        case 0x8E5B : return "GL_MIN_FRAGMENT_INTERPOLATION_OFFSET";
        case 0x8E5C : return "GL_MAX_FRAGMENT_INTERPOLATION_OFFSET";
        case 0x8E5D : return "GL_FRAGMENT_INTERPOLATION_OFFSET_BITS";
        case 0x8E5E : return "GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET";
        case 0x8E5F : return "GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET";
        case 0x8E60 : return "GL_MAX_MESH_UNIFORM_BLOCKS_NV";
        case 0x8E61 : return "GL_MAX_MESH_TEXTURE_IMAGE_UNITS_NV";
        case 0x8E62 : return "GL_MAX_MESH_IMAGE_UNIFORMS_NV";
        case 0x8E63 : return "GL_MAX_MESH_UNIFORM_COMPONENTS_NV";
        case 0x8E64 : return "GL_MAX_MESH_ATOMIC_COUNTER_BUFFERS_NV";
        case 0x8E65 : return "GL_MAX_MESH_ATOMIC_COUNTERS_NV";
        case 0x8E66 : return "GL_MAX_MESH_SHADER_STORAGE_BLOCKS_NV";
        case 0x8E67 : return "GL_MAX_COMBINED_MESH_UNIFORM_COMPONENTS_NV";
        case 0x8E68 : return "GL_MAX_TASK_UNIFORM_BLOCKS_NV";
        case 0x8E69 : return "GL_MAX_TASK_TEXTURE_IMAGE_UNITS_NV";
        case 0x8E6A : return "GL_MAX_TASK_IMAGE_UNIFORMS_NV";
        case 0x8E6B : return "GL_MAX_TASK_UNIFORM_COMPONENTS_NV";
        case 0x8E6C : return "GL_MAX_TASK_ATOMIC_COUNTER_BUFFERS_NV";
        case 0x8E6D : return "GL_MAX_TASK_ATOMIC_COUNTERS_NV";
        case 0x8E6E : return "GL_MAX_TASK_SHADER_STORAGE_BLOCKS_NV";
        case 0x8E6F : return "GL_MAX_COMBINED_TASK_UNIFORM_COMPONENTS_NV";
        case 0x8E70 : return "GL_MAX_TRANSFORM_FEEDBACK_BUFFERS";
        case 0x8E71 : return "GL_MAX_VERTEX_STREAMS";
        case 0x8E72 : return "GL_PATCH_VERTICES";
        case 0x8E73 : return "GL_PATCH_DEFAULT_INNER_LEVEL";
        case 0x8E74 : return "GL_PATCH_DEFAULT_OUTER_LEVEL";
        case 0x8E75 : return "GL_TESS_CONTROL_OUTPUT_VERTICES";
        case 0x8E76 : return "GL_TESS_GEN_MODE";
        case 0x8E77 : return "GL_TESS_GEN_SPACING";
        case 0x8E78 : return "GL_TESS_GEN_VERTEX_ORDER";
        case 0x8E79 : return "GL_TESS_GEN_POINT_MODE";
        case 0x8E7A : return "GL_ISOLINES";
        case 0x8E7B : return "GL_FRACTIONAL_ODD";
        case 0x8E7C : return "GL_FRACTIONAL_EVEN";
        case 0x8E7D : return "GL_MAX_PATCH_VERTICES";
        case 0x8E7E : return "GL_MAX_TESS_GEN_LEVEL";
        case 0x8E7F : return "GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS";
        case 0x8E80 : return "GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS";
        case 0x8E81 : return "GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS";
        case 0x8E82 : return "GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS";
        case 0x8E83 : return "GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS";
        case 0x8E84 : return "GL_MAX_TESS_PATCH_COMPONENTS";
        case 0x8E85 : return "GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS";
        case 0x8E86 : return "GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS";
        case 0x8E87 : return "GL_TESS_EVALUATION_SHADER";
        case 0x8E88 : return "GL_TESS_CONTROL_SHADER";
        case 0x8E89 : return "GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS";
        case 0x8E8A : return "GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS";
        case 0x8E8C : return "GL_COMPRESSED_RGBA_BPTC_UNORM";
        case 0x8E8D : return "GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM";
        case 0x8E8E : return "GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT";
        case 0x8E8F : return "GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT";
        case 0x8F10 : return "GL_INCLUSIVE_EXT";
        case 0x8F11 : return "GL_EXCLUSIVE_EXT";
        case 0x8F12 : return "GL_WINDOW_RECTANGLE_EXT";
        case 0x8F13 : return "GL_WINDOW_RECTANGLE_MODE_EXT";
        case 0x8F14 : return "GL_MAX_WINDOW_RECTANGLES_EXT";
        case 0x8F15 : return "GL_NUM_WINDOW_RECTANGLES_EXT";
        case 0x8F1D : return "GL_BUFFER_GPU_ADDRESS_NV";
        case 0x8F1E : return "GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV";
        case 0x8F1F : return "GL_ELEMENT_ARRAY_UNIFIED_NV";
        case 0x8F20 : return "GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV";
        case 0x8F21 : return "GL_VERTEX_ARRAY_ADDRESS_NV";
        case 0x8F22 : return "GL_NORMAL_ARRAY_ADDRESS_NV";
        case 0x8F23 : return "GL_COLOR_ARRAY_ADDRESS_NV";
        case 0x8F24 : return "GL_INDEX_ARRAY_ADDRESS_NV";
        case 0x8F25 : return "GL_TEXTURE_COORD_ARRAY_ADDRESS_NV";
        case 0x8F26 : return "GL_EDGE_FLAG_ARRAY_ADDRESS_NV";
        case 0x8F27 : return "GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV";
        case 0x8F28 : return "GL_FOG_COORD_ARRAY_ADDRESS_NV";
        case 0x8F29 : return "GL_ELEMENT_ARRAY_ADDRESS_NV";
        case 0x8F2A : return "GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV";
        case 0x8F2B : return "GL_VERTEX_ARRAY_LENGTH_NV";
        case 0x8F2C : return "GL_NORMAL_ARRAY_LENGTH_NV";
        case 0x8F2D : return "GL_COLOR_ARRAY_LENGTH_NV";
        case 0x8F2E : return "GL_INDEX_ARRAY_LENGTH_NV";
        case 0x8F2F : return "GL_TEXTURE_COORD_ARRAY_LENGTH_NV";
        case 0x8F30 : return "GL_EDGE_FLAG_ARRAY_LENGTH_NV";
        case 0x8F31 : return "GL_SECONDARY_COLOR_ARRAY_LENGTH_NV";
        case 0x8F32 : return "GL_FOG_COORD_ARRAY_LENGTH_NV";
        case 0x8F33 : return "GL_ELEMENT_ARRAY_LENGTH_NV";
        case 0x8F34 : return "GL_GPU_ADDRESS_NV";
        case 0x8F35 : return "GL_MAX_SHADER_BUFFER_ADDRESS_NV";
        case 0x8F36 : return "GL_COPY_READ_BUFFER";
        case 0x8F37 : return "GL_COPY_WRITE_BUFFER";
        case 0x8F38 : return "GL_MAX_IMAGE_UNITS";
        case 0x8F39 : return "GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS";
        case 0x8F3A : return "GL_IMAGE_BINDING_NAME";
        case 0x8F3B : return "GL_IMAGE_BINDING_LEVEL";
        case 0x8F3C : return "GL_IMAGE_BINDING_LAYERED";
        case 0x8F3D : return "GL_IMAGE_BINDING_LAYER";
        case 0x8F3E : return "GL_IMAGE_BINDING_ACCESS";
        case 0x8F3F : return "GL_DRAW_INDIRECT_BUFFER";
        case 0x8F40 : return "GL_DRAW_INDIRECT_UNIFIED_NV";
        case 0x8F41 : return "GL_DRAW_INDIRECT_ADDRESS_NV";
        case 0x8F42 : return "GL_DRAW_INDIRECT_LENGTH_NV";
        case 0x8F43 : return "GL_DRAW_INDIRECT_BUFFER_BINDING";
        case 0x8F44 : return "GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV";
        case 0x8F45 : return "GL_MAX_PROGRAM_SUBROUTINE_NUM_NV";
        case 0x8F46 : return "GL_DOUBLE_MAT2";
        case 0x8F47 : return "GL_DOUBLE_MAT3";
        case 0x8F48 : return "GL_DOUBLE_MAT4";
        case 0x8F49 : return "GL_DOUBLE_MAT2x3";
        case 0x8F4A : return "GL_DOUBLE_MAT2x4";
        case 0x8F4B : return "GL_DOUBLE_MAT3x2";
        case 0x8F4C : return "GL_DOUBLE_MAT3x4";
        case 0x8F4D : return "GL_DOUBLE_MAT4x2";
        case 0x8F4E : return "GL_DOUBLE_MAT4x3";
        case 0x8F4F : return "GL_VERTEX_BINDING_BUFFER";
        case 0x8F90 : return "GL_RED_SNORM";
        case 0x8F91 : return "GL_RG_SNORM";
        case 0x8F92 : return "GL_RGB_SNORM";
        case 0x8F93 : return "GL_RGBA_SNORM";
        case 0x8F94 : return "GL_R8_SNORM";
        case 0x8F95 : return "GL_RG8_SNORM";
        case 0x8F96 : return "GL_RGB8_SNORM";
        case 0x8F97 : return "GL_RGBA8_SNORM";
        case 0x8F98 : return "GL_R16_SNORM";
        case 0x8F99 : return "GL_RG16_SNORM";
        case 0x8F9A : return "GL_RGB16_SNORM";
        case 0x8F9B : return "GL_RGBA16_SNORM";
        case 0x8F9C : return "GL_SIGNED_NORMALIZED";
        case 0x8F9D : return "GL_PRIMITIVE_RESTART";
        case 0x8F9E : return "GL_PRIMITIVE_RESTART_INDEX";
        case 0x8FBD : return "GL_SR8_EXT";
        case 0x8FBE : return "GL_SRG8_EXT";
        case 0x8FE0 : return "GL_INT8_NV";
        case 0x8FE1 : return "GL_INT8_VEC2_NV";
        case 0x8FE2 : return "GL_INT8_VEC3_NV";
        case 0x8FE3 : return "GL_INT8_VEC4_NV";
        case 0x8FE4 : return "GL_INT16_NV";
        case 0x8FE5 : return "GL_INT16_VEC2_NV";
        case 0x8FE6 : return "GL_INT16_VEC3_NV";
        case 0x8FE7 : return "GL_INT16_VEC4_NV";
        case 0x8FE9 : return "GL_INT64_VEC2_NV";
        case 0x8FEA : return "GL_INT64_VEC3_NV";
        case 0x8FEB : return "GL_INT64_VEC4_NV";
        case 0x8FEC : return "GL_UNSIGNED_INT8_NV";
        case 0x8FED : return "GL_UNSIGNED_INT8_VEC2_NV";
        case 0x8FEE : return "GL_UNSIGNED_INT8_VEC3_NV";
        case 0x8FEF : return "GL_UNSIGNED_INT8_VEC4_NV";
        case 0x8FF0 : return "GL_UNSIGNED_INT16_NV";
        case 0x8FF1 : return "GL_UNSIGNED_INT16_VEC2_NV";
        case 0x8FF2 : return "GL_UNSIGNED_INT16_VEC3_NV";
        case 0x8FF3 : return "GL_UNSIGNED_INT16_VEC4_NV";
        case 0x8FF5 : return "GL_UNSIGNED_INT64_VEC2_NV";
        case 0x8FF6 : return "GL_UNSIGNED_INT64_VEC3_NV";
        case 0x8FF7 : return "GL_UNSIGNED_INT64_VEC4_NV";
        case 0x8FF8 : return "GL_FLOAT16_NV";
        case 0x8FF9 : return "GL_FLOAT16_VEC2_NV";
        case 0x8FFA : return "GL_FLOAT16_VEC3_NV";
        case 0x8FFB : return "GL_FLOAT16_VEC4_NV";
        case 0x8FFC : return "GL_DOUBLE_VEC2";
        case 0x8FFD : return "GL_DOUBLE_VEC3";
        case 0x8FFE : return "GL_DOUBLE_VEC4";
        case 0x9001 : return "GL_SAMPLER_BUFFER_AMD";
        case 0x9002 : return "GL_INT_SAMPLER_BUFFER_AMD";
        case 0x9003 : return "GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD";
        case 0x9004 : return "GL_TESSELLATION_MODE_AMD";
        case 0x9005 : return "GL_TESSELLATION_FACTOR_AMD";
        case 0x9006 : return "GL_DISCRETE_AMD";
        case 0x9007 : return "GL_CONTINUOUS_AMD";
        case 0x9009 : return "GL_TEXTURE_CUBE_MAP_ARRAY";
        case 0x900A : return "GL_TEXTURE_BINDING_CUBE_MAP_ARRAY";
        case 0x900B : return "GL_PROXY_TEXTURE_CUBE_MAP_ARRAY";
        case 0x900C : return "GL_SAMPLER_CUBE_MAP_ARRAY";
        case 0x900D : return "GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW";
        case 0x900E : return "GL_INT_SAMPLER_CUBE_MAP_ARRAY";
        case 0x900F : return "GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY";
        case 0x9010 : return "GL_ALPHA_SNORM";
        case 0x9011 : return "GL_LUMINANCE_SNORM";
        case 0x9012 : return "GL_LUMINANCE_ALPHA_SNORM";
        case 0x9013 : return "GL_INTENSITY_SNORM";
        case 0x9014 : return "GL_ALPHA8_SNORM";
        case 0x9015 : return "GL_LUMINANCE8_SNORM";
        case 0x9016 : return "GL_LUMINANCE8_ALPHA8_SNORM";
        case 0x9017 : return "GL_INTENSITY8_SNORM";
        case 0x9018 : return "GL_ALPHA16_SNORM";
        case 0x9019 : return "GL_LUMINANCE16_SNORM";
        case 0x901A : return "GL_LUMINANCE16_ALPHA16_SNORM";
        case 0x901B : return "GL_INTENSITY16_SNORM";
        case 0x901C : return "GL_FACTOR_MIN_AMD";
        case 0x901D : return "GL_FACTOR_MAX_AMD";
        case 0x901E : return "GL_DEPTH_CLAMP_NEAR_AMD";
        case 0x901F : return "GL_DEPTH_CLAMP_FAR_AMD";
        case 0x9020 : return "GL_VIDEO_BUFFER_NV";
        case 0x9021 : return "GL_VIDEO_BUFFER_BINDING_NV";
        case 0x9022 : return "GL_FIELD_UPPER_NV";
        case 0x9023 : return "GL_FIELD_LOWER_NV";
        case 0x9024 : return "GL_NUM_VIDEO_CAPTURE_STREAMS_NV";
        case 0x9025 : return "GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV";
        case 0x9026 : return "GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV";
        case 0x9027 : return "GL_LAST_VIDEO_CAPTURE_STATUS_NV";
        case 0x9028 : return "GL_VIDEO_BUFFER_PITCH_NV";
        case 0x9029 : return "GL_VIDEO_COLOR_CONVERSION_MATRIX_NV";
        case 0x902A : return "GL_VIDEO_COLOR_CONVERSION_MAX_NV";
        case 0x902B : return "GL_VIDEO_COLOR_CONVERSION_MIN_NV";
        case 0x902C : return "GL_VIDEO_COLOR_CONVERSION_OFFSET_NV";
        case 0x902D : return "GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV";
        case 0x902E : return "GL_PARTIAL_SUCCESS_NV";
        case 0x902F : return "GL_SUCCESS_NV";
        case 0x9030 : return "GL_FAILURE_NV";
        case 0x9031 : return "GL_YCBYCR8_422_NV";
        case 0x9032 : return "GL_YCBAYCR8A_4224_NV";
        case 0x9033 : return "GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV";
        case 0x9034 : return "GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV";
        case 0x9035 : return "GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV";
        case 0x9036 : return "GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV";
        case 0x9037 : return "GL_Z4Y12Z4CB12Z4CR12_444_NV";
        case 0x9038 : return "GL_VIDEO_CAPTURE_FRAME_WIDTH_NV";
        case 0x9039 : return "GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV";
        case 0x903A : return "GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV";
        case 0x903B : return "GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV";
        case 0x903C : return "GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV";
        case 0x9045 : return "GL_TEXTURE_COVERAGE_SAMPLES_NV";
        case 0x9046 : return "GL_TEXTURE_COLOR_SAMPLES_NV";
        case 0x9047 : return "GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX";
        case 0x9048 : return "GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX";
        case 0x9049 : return "GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX";
        case 0x904A : return "GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX";
        case 0x904B : return "GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX";
        case 0x904C : return "GL_IMAGE_1D";
        case 0x904D : return "GL_IMAGE_2D";
        case 0x904E : return "GL_IMAGE_3D";
        case 0x904F : return "GL_IMAGE_2D_RECT";
        case 0x9050 : return "GL_IMAGE_CUBE";
        case 0x9051 : return "GL_IMAGE_BUFFER";
        case 0x9052 : return "GL_IMAGE_1D_ARRAY";
        case 0x9053 : return "GL_IMAGE_2D_ARRAY";
        case 0x9054 : return "GL_IMAGE_CUBE_MAP_ARRAY";
        case 0x9055 : return "GL_IMAGE_2D_MULTISAMPLE";
        case 0x9056 : return "GL_IMAGE_2D_MULTISAMPLE_ARRAY";
        case 0x9057 : return "GL_INT_IMAGE_1D";
        case 0x9058 : return "GL_INT_IMAGE_2D";
        case 0x9059 : return "GL_INT_IMAGE_3D";
        case 0x905A : return "GL_INT_IMAGE_2D_RECT";
        case 0x905B : return "GL_INT_IMAGE_CUBE";
        case 0x905C : return "GL_INT_IMAGE_BUFFER";
        case 0x905D : return "GL_INT_IMAGE_1D_ARRAY";
        case 0x905E : return "GL_INT_IMAGE_2D_ARRAY";
        case 0x905F : return "GL_INT_IMAGE_CUBE_MAP_ARRAY";
        case 0x9060 : return "GL_INT_IMAGE_2D_MULTISAMPLE";
        case 0x9061 : return "GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY";
        case 0x9062 : return "GL_UNSIGNED_INT_IMAGE_1D";
        case 0x9063 : return "GL_UNSIGNED_INT_IMAGE_2D";
        case 0x9064 : return "GL_UNSIGNED_INT_IMAGE_3D";
        case 0x9065 : return "GL_UNSIGNED_INT_IMAGE_2D_RECT";
        case 0x9066 : return "GL_UNSIGNED_INT_IMAGE_CUBE";
        case 0x9067 : return "GL_UNSIGNED_INT_IMAGE_BUFFER";
        case 0x9068 : return "GL_UNSIGNED_INT_IMAGE_1D_ARRAY";
        case 0x9069 : return "GL_UNSIGNED_INT_IMAGE_2D_ARRAY";
        case 0x906A : return "GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY";
        case 0x906B : return "GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE";
        case 0x906C : return "GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY";
        case 0x906D : return "GL_MAX_IMAGE_SAMPLES";
        case 0x906E : return "GL_IMAGE_BINDING_FORMAT";
        case 0x906F : return "GL_RGB10_A2UI";
        case 0x9070 : return "GL_PATH_FORMAT_SVG_NV";
        case 0x9071 : return "GL_PATH_FORMAT_PS_NV";
        case 0x9072 : return "GL_STANDARD_FONT_NAME_NV";
        case 0x9073 : return "GL_SYSTEM_FONT_NAME_NV";
        case 0x9074 : return "GL_FILE_NAME_NV";
        case 0x9075 : return "GL_PATH_STROKE_WIDTH_NV";
        case 0x9076 : return "GL_PATH_END_CAPS_NV";
        case 0x9077 : return "GL_PATH_INITIAL_END_CAP_NV";
        case 0x9078 : return "GL_PATH_TERMINAL_END_CAP_NV";
        case 0x9079 : return "GL_PATH_JOIN_STYLE_NV";
        case 0x907A : return "GL_PATH_MITER_LIMIT_NV";
        case 0x907B : return "GL_PATH_DASH_CAPS_NV";
        case 0x907C : return "GL_PATH_INITIAL_DASH_CAP_NV";
        case 0x907D : return "GL_PATH_TERMINAL_DASH_CAP_NV";
        case 0x907E : return "GL_PATH_DASH_OFFSET_NV";
        case 0x907F : return "GL_PATH_CLIENT_LENGTH_NV";
        case 0x9080 : return "GL_PATH_FILL_MODE_NV";
        case 0x9081 : return "GL_PATH_FILL_MASK_NV";
        case 0x9082 : return "GL_PATH_FILL_COVER_MODE_NV";
        case 0x9083 : return "GL_PATH_STROKE_COVER_MODE_NV";
        case 0x9084 : return "GL_PATH_STROKE_MASK_NV";
        case 0x9088 : return "GL_COUNT_UP_NV";
        case 0x9089 : return "GL_COUNT_DOWN_NV";
        case 0x908A : return "GL_PATH_OBJECT_BOUNDING_BOX_NV";
        case 0x908B : return "GL_CONVEX_HULL_NV";
        case 0x908D : return "GL_BOUNDING_BOX_NV";
        case 0x908E : return "GL_TRANSLATE_X_NV";
        case 0x908F : return "GL_TRANSLATE_Y_NV";
        case 0x9090 : return "GL_TRANSLATE_2D_NV";
        case 0x9091 : return "GL_TRANSLATE_3D_NV";
        case 0x9092 : return "GL_AFFINE_2D_NV";
        case 0x9094 : return "GL_AFFINE_3D_NV";
        case 0x9096 : return "GL_TRANSPOSE_AFFINE_2D_NV";
        case 0x9098 : return "GL_TRANSPOSE_AFFINE_3D_NV";
        case 0x909A : return "GL_UTF8_NV";
        case 0x909B : return "GL_UTF16_NV";
        case 0x909C : return "GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV";
        case 0x909D : return "GL_PATH_COMMAND_COUNT_NV";
        case 0x909E : return "GL_PATH_COORD_COUNT_NV";
        case 0x909F : return "GL_PATH_DASH_ARRAY_COUNT_NV";
        case 0x90A0 : return "GL_PATH_COMPUTED_LENGTH_NV";
        case 0x90A1 : return "GL_PATH_FILL_BOUNDING_BOX_NV";
        case 0x90A2 : return "GL_PATH_STROKE_BOUNDING_BOX_NV";
        case 0x90A3 : return "GL_SQUARE_NV";
        case 0x90A4 : return "GL_ROUND_NV";
        case 0x90A5 : return "GL_TRIANGULAR_NV";
        case 0x90A6 : return "GL_BEVEL_NV";
        case 0x90A7 : return "GL_MITER_REVERT_NV";
        case 0x90A8 : return "GL_MITER_TRUNCATE_NV";
        case 0x90A9 : return "GL_SKIP_MISSING_GLYPH_NV";
        case 0x90AA : return "GL_USE_MISSING_GLYPH_NV";
        case 0x90AB : return "GL_PATH_ERROR_POSITION_NV";
        case 0x90AC : return "GL_PATH_FOG_GEN_MODE_NV";
        case 0x90AD : return "GL_ACCUM_ADJACENT_PAIRS_NV";
        case 0x90AE : return "GL_ADJACENT_PAIRS_NV";
        case 0x90AF : return "GL_FIRST_TO_REST_NV";
        case 0x90B0 : return "GL_PATH_GEN_MODE_NV";
        case 0x90B1 : return "GL_PATH_GEN_COEFF_NV";
        case 0x90B2 : return "GL_PATH_GEN_COLOR_FORMAT_NV";
        case 0x90B3 : return "GL_PATH_GEN_COMPONENTS_NV";
        case 0x90B4 : return "GL_PATH_DASH_OFFSET_RESET_NV";
        case 0x90B5 : return "GL_MOVE_TO_RESETS_NV";
        case 0x90B6 : return "GL_MOVE_TO_CONTINUES_NV";
        case 0x90B7 : return "GL_PATH_STENCIL_FUNC_NV";
        case 0x90B8 : return "GL_PATH_STENCIL_REF_NV";
        case 0x90B9 : return "GL_PATH_STENCIL_VALUE_MASK_NV";
        case 0x90BA : return "GL_SCALED_RESOLVE_FASTEST_EXT";
        case 0x90BB : return "GL_SCALED_RESOLVE_NICEST_EXT";
        case 0x90BC : return "GL_MIN_MAP_BUFFER_ALIGNMENT";
        case 0x90BD : return "GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV";
        case 0x90BE : return "GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV";
        case 0x90BF : return "GL_PATH_COVER_DEPTH_FUNC_NV";
        case 0x90C7 : return "GL_IMAGE_FORMAT_COMPATIBILITY_TYPE";
        case 0x90C8 : return "GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE";
        case 0x90C9 : return "GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS";
        case 0x90CA : return "GL_MAX_VERTEX_IMAGE_UNIFORMS";
        case 0x90CB : return "GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS";
        case 0x90CC : return "GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS";
        case 0x90CD : return "GL_MAX_GEOMETRY_IMAGE_UNIFORMS";
        case 0x90CE : return "GL_MAX_FRAGMENT_IMAGE_UNIFORMS";
        case 0x90CF : return "GL_MAX_COMBINED_IMAGE_UNIFORMS";
        case 0x90D0 : return "GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV";
        case 0x90D1 : return "GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV";
        case 0x90D2 : return "GL_SHADER_STORAGE_BUFFER";
        case 0x90D3 : return "GL_SHADER_STORAGE_BUFFER_BINDING";
        case 0x90D4 : return "GL_SHADER_STORAGE_BUFFER_START";
        case 0x90D5 : return "GL_SHADER_STORAGE_BUFFER_SIZE";
        case 0x90D6 : return "GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS";
        case 0x90D7 : return "GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS";
        case 0x90D8 : return "GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS";
        case 0x90D9 : return "GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS";
        case 0x90DA : return "GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS";
        case 0x90DB : return "GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS";
        case 0x90DC : return "GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS";
        case 0x90DD : return "GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS";
        case 0x90DE : return "GL_MAX_SHADER_STORAGE_BLOCK_SIZE";
        case 0x90DF : return "GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT";
        case 0x90E1 : return "GL_SYNC_X11_FENCE_EXT";
        case 0x90EA : return "GL_DEPTH_STENCIL_TEXTURE_MODE";
        case 0x90EB : return "GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS";
        case 0x90EC : return "GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER";
        case 0x90ED : return "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER";
        case 0x90EE : return "GL_DISPATCH_INDIRECT_BUFFER";
        case 0x90EF : return "GL_DISPATCH_INDIRECT_BUFFER_BINDING";
        case 0x90F3 : return "GL_CONTEXT_ROBUST_ACCESS";
        case 0x90FB : return "GL_COMPUTE_PROGRAM_NV";
        case 0x90FC : return "GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV";
        case 0x9100 : return "GL_TEXTURE_2D_MULTISAMPLE";
        case 0x9101 : return "GL_PROXY_TEXTURE_2D_MULTISAMPLE";
        case 0x9102 : return "GL_TEXTURE_2D_MULTISAMPLE_ARRAY";
        case 0x9103 : return "GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY";
        case 0x9104 : return "GL_TEXTURE_BINDING_2D_MULTISAMPLE";
        case 0x9105 : return "GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY";
        case 0x9106 : return "GL_TEXTURE_SAMPLES";
        case 0x9107 : return "GL_TEXTURE_FIXED_SAMPLE_LOCATIONS";
        case 0x9108 : return "GL_SAMPLER_2D_MULTISAMPLE";
        case 0x9109 : return "GL_INT_SAMPLER_2D_MULTISAMPLE";
        case 0x910A : return "GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE";
        case 0x910B : return "GL_SAMPLER_2D_MULTISAMPLE_ARRAY";
        case 0x910C : return "GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY";
        case 0x910D : return "GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY";
        case 0x910E : return "GL_MAX_COLOR_TEXTURE_SAMPLES";
        case 0x910F : return "GL_MAX_DEPTH_TEXTURE_SAMPLES";
        case 0x9110 : return "GL_MAX_INTEGER_SAMPLES";
        case 0x9111 : return "GL_MAX_SERVER_WAIT_TIMEOUT";
        case 0x9112 : return "GL_OBJECT_TYPE";
        case 0x9113 : return "GL_SYNC_CONDITION";
        case 0x9114 : return "GL_SYNC_STATUS";
        case 0x9115 : return "GL_SYNC_FLAGS";
        case 0x9116 : return "GL_SYNC_FENCE";
        case 0x9117 : return "GL_SYNC_GPU_COMMANDS_COMPLETE";
        case 0x9118 : return "GL_UNSIGNALED";
        case 0x9119 : return "GL_SIGNALED";
        case 0x911A : return "GL_ALREADY_SIGNALED";
        case 0x911B : return "GL_TIMEOUT_EXPIRED";
        case 0x911C : return "GL_CONDITION_SATISFIED";
        case 0x911D : return "GL_WAIT_FAILED";
        case 0x911F : return "GL_BUFFER_ACCESS_FLAGS";
        case 0x9120 : return "GL_BUFFER_MAP_LENGTH";
        case 0x9121 : return "GL_BUFFER_MAP_OFFSET";
        case 0x9122 : return "GL_MAX_VERTEX_OUTPUT_COMPONENTS";
        case 0x9123 : return "GL_MAX_GEOMETRY_INPUT_COMPONENTS";
        case 0x9124 : return "GL_MAX_GEOMETRY_OUTPUT_COMPONENTS";
        case 0x9125 : return "GL_MAX_FRAGMENT_INPUT_COMPONENTS";
        case 0x9126 : return "GL_CONTEXT_PROFILE_MASK";
        case 0x9127 : return "GL_UNPACK_COMPRESSED_BLOCK_WIDTH";
        case 0x9128 : return "GL_UNPACK_COMPRESSED_BLOCK_HEIGHT";
        case 0x9129 : return "GL_UNPACK_COMPRESSED_BLOCK_DEPTH";
        case 0x912A : return "GL_UNPACK_COMPRESSED_BLOCK_SIZE";
        case 0x912B : return "GL_PACK_COMPRESSED_BLOCK_WIDTH";
        case 0x912C : return "GL_PACK_COMPRESSED_BLOCK_HEIGHT";
        case 0x912D : return "GL_PACK_COMPRESSED_BLOCK_DEPTH";
        case 0x912E : return "GL_PACK_COMPRESSED_BLOCK_SIZE";
        case 0x912F : return "GL_TEXTURE_IMMUTABLE_FORMAT";
        case 0x9143 : return "GL_MAX_DEBUG_MESSAGE_LENGTH";
        case 0x9144 : return "GL_MAX_DEBUG_LOGGED_MESSAGES";
        case 0x9145 : return "GL_DEBUG_LOGGED_MESSAGES";
        case 0x9146 : return "GL_DEBUG_SEVERITY_HIGH";
        case 0x9147 : return "GL_DEBUG_SEVERITY_MEDIUM";
        case 0x9148 : return "GL_DEBUG_SEVERITY_LOW";
        case 0x9149 : return "GL_DEBUG_CATEGORY_API_ERROR_AMD";
        case 0x914A : return "GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD";
        case 0x914B : return "GL_DEBUG_CATEGORY_DEPRECATION_AMD";
        case 0x914C : return "GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD";
        case 0x914D : return "GL_DEBUG_CATEGORY_PERFORMANCE_AMD";
        case 0x914E : return "GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD";
        case 0x914F : return "GL_DEBUG_CATEGORY_APPLICATION_AMD";
        case 0x9150 : return "GL_DEBUG_CATEGORY_OTHER_AMD";
        case 0x9151 : return "GL_BUFFER_OBJECT_EXT";
        case 0x9152 : return "GL_PERFORMANCE_MONITOR_AMD";
        case 0x9153 : return "GL_QUERY_OBJECT_AMD";
        case 0x9154 : return "GL_VERTEX_ARRAY_OBJECT_AMD";
        case 0x9155 : return "GL_SAMPLER_OBJECT_AMD";
        case 0x9160 : return "GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD";
        case 0x9192 : return "GL_QUERY_BUFFER";
        case 0x9193 : return "GL_QUERY_BUFFER_BINDING";
        case 0x9194 : return "GL_QUERY_RESULT_NO_WAIT";
        case 0x9195 : return "GL_VIRTUAL_PAGE_SIZE_X_AMD";
        case 0x9196 : return "GL_VIRTUAL_PAGE_SIZE_Y_AMD";
        case 0x9197 : return "GL_VIRTUAL_PAGE_SIZE_Z_AMD";
        case 0x9198 : return "GL_MAX_SPARSE_TEXTURE_SIZE_AMD";
        case 0x9199 : return "GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD";
        case 0x919A : return "GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS";
        case 0x919B : return "GL_MIN_SPARSE_LEVEL_AMD";
        case 0x919C : return "GL_MIN_LOD_WARNING_AMD";
        case 0x919D : return "GL_TEXTURE_BUFFER_OFFSET";
        case 0x919E : return "GL_TEXTURE_BUFFER_SIZE";
        case 0x919F : return "GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT";
        case 0x91A0 : return "GL_STREAM_RASTERIZATION_AMD";
        case 0x91A4 : return "GL_VERTEX_ELEMENT_SWIZZLE_AMD";
        case 0x91A5 : return "GL_VERTEX_ID_SWIZZLE_AMD";
        case 0x91AE : return "GL_PIXELS_PER_SAMPLE_PATTERN_X_AMD";
        case 0x91AF : return "GL_PIXELS_PER_SAMPLE_PATTERN_Y_AMD";
        case 0x91B0 : return "GL_MAX_SHADER_COMPILER_THREADS_KHR";
        case 0x91B1 : return "GL_COMPLETION_STATUS_KHR";
        case 0x91B2 : return "GL_RENDERBUFFER_STORAGE_SAMPLES_AMD";
        case 0x91B3 : return "GL_MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD";
        case 0x91B4 : return "GL_MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD";
        case 0x91B5 : return "GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD";
        case 0x91B6 : return "GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD";
        case 0x91B7 : return "GL_SUPPORTED_MULTISAMPLE_MODES_AMD";
        case 0x91B9 : return "GL_COMPUTE_SHADER";
        case 0x91BB : return "GL_MAX_COMPUTE_UNIFORM_BLOCKS";
        case 0x91BC : return "GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS";
        case 0x91BD : return "GL_MAX_COMPUTE_IMAGE_UNIFORMS";
        case 0x91BE : return "GL_MAX_COMPUTE_WORK_GROUP_COUNT";
        case 0x91BF : return "GL_MAX_COMPUTE_WORK_GROUP_SIZE";
        case 0x91C5 : return "GL_FLOAT16_MAT2_AMD";
        case 0x91C6 : return "GL_FLOAT16_MAT3_AMD";
        case 0x91C7 : return "GL_FLOAT16_MAT4_AMD";
        case 0x91C8 : return "GL_FLOAT16_MAT2x3_AMD";
        case 0x91C9 : return "GL_FLOAT16_MAT2x4_AMD";
        case 0x91CA : return "GL_FLOAT16_MAT3x2_AMD";
        case 0x91CB : return "GL_FLOAT16_MAT3x4_AMD";
        case 0x91CC : return "GL_FLOAT16_MAT4x2_AMD";
        case 0x91CD : return "GL_FLOAT16_MAT4x3_AMD";
        case 0x9270 : return "GL_COMPRESSED_R11_EAC";
        case 0x9271 : return "GL_COMPRESSED_SIGNED_R11_EAC";
        case 0x9272 : return "GL_COMPRESSED_RG11_EAC";
        case 0x9273 : return "GL_COMPRESSED_SIGNED_RG11_EAC";
        case 0x9274 : return "GL_COMPRESSED_RGB8_ETC2";
        case 0x9275 : return "GL_COMPRESSED_SRGB8_ETC2";
        case 0x9276 : return "GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2";
        case 0x9277 : return "GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2";
        case 0x9278 : return "GL_COMPRESSED_RGBA8_ETC2_EAC";
        case 0x9279 : return "GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC";
        case 0x9280 : return "GL_BLEND_PREMULTIPLIED_SRC_NV";
        case 0x9281 : return "GL_BLEND_OVERLAP_NV";
        case 0x9282 : return "GL_UNCORRELATED_NV";
        case 0x9283 : return "GL_DISJOINT_NV";
        case 0x9284 : return "GL_CONJOINT_NV";
        case 0x9285 : return "GL_BLEND_ADVANCED_COHERENT_KHR";
        case 0x9286 : return "GL_SRC_NV";
        case 0x9287 : return "GL_DST_NV";
        case 0x9288 : return "GL_SRC_OVER_NV";
        case 0x9289 : return "GL_DST_OVER_NV";
        case 0x928A : return "GL_SRC_IN_NV";
        case 0x928B : return "GL_DST_IN_NV";
        case 0x928C : return "GL_SRC_OUT_NV";
        case 0x928D : return "GL_DST_OUT_NV";
        case 0x928E : return "GL_SRC_ATOP_NV";
        case 0x928F : return "GL_DST_ATOP_NV";
        case 0x9291 : return "GL_PLUS_NV";
        case 0x9292 : return "GL_PLUS_DARKER_NV";
        case 0x9294 : return "GL_MULTIPLY_KHR";
        case 0x9295 : return "GL_SCREEN_KHR";
        case 0x9296 : return "GL_OVERLAY_KHR";
        case 0x9297 : return "GL_DARKEN_KHR";
        case 0x9298 : return "GL_LIGHTEN_KHR";
        case 0x9299 : return "GL_COLORDODGE_KHR";
        case 0x929A : return "GL_COLORBURN_KHR";
        case 0x929B : return "GL_HARDLIGHT_KHR";
        case 0x929C : return "GL_SOFTLIGHT_KHR";
        case 0x929E : return "GL_DIFFERENCE_KHR";
        case 0x929F : return "GL_MINUS_NV";
        case 0x92A0 : return "GL_EXCLUSION_KHR";
        case 0x92A1 : return "GL_CONTRAST_NV";
        case 0x92A3 : return "GL_INVERT_RGB_NV";
        case 0x92A4 : return "GL_LINEARDODGE_NV";
        case 0x92A5 : return "GL_LINEARBURN_NV";
        case 0x92A6 : return "GL_VIVIDLIGHT_NV";
        case 0x92A7 : return "GL_LINEARLIGHT_NV";
        case 0x92A8 : return "GL_PINLIGHT_NV";
        case 0x92A9 : return "GL_HARDMIX_NV";
        case 0x92AD : return "GL_HSL_HUE_KHR";
        case 0x92AE : return "GL_HSL_SATURATION_KHR";
        case 0x92AF : return "GL_HSL_COLOR_KHR";
        case 0x92B0 : return "GL_HSL_LUMINOSITY_KHR";
        case 0x92B1 : return "GL_PLUS_CLAMPED_NV";
        case 0x92B2 : return "GL_PLUS_CLAMPED_ALPHA_NV";
        case 0x92B3 : return "GL_MINUS_CLAMPED_NV";
        case 0x92B4 : return "GL_INVERT_OVG_NV";
        case 0x92BA : return "GL_MAX_LGPU_GPUS_NVX";
        case 0x92BB : return "GL_PURGED_CONTEXT_RESET_NV";
        case 0x92BF : return "GL_ALPHA_TO_COVERAGE_DITHER_MODE_NV";
        case 0x92C0 : return "GL_ATOMIC_COUNTER_BUFFER";
        case 0x92C1 : return "GL_ATOMIC_COUNTER_BUFFER_BINDING";
        case 0x92C2 : return "GL_ATOMIC_COUNTER_BUFFER_START";
        case 0x92C3 : return "GL_ATOMIC_COUNTER_BUFFER_SIZE";
        case 0x92C4 : return "GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE";
        case 0x92C5 : return "GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS";
        case 0x92C6 : return "GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES";
        case 0x92C7 : return "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER";
        case 0x92C8 : return "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER";
        case 0x92C9 : return "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER";
        case 0x92CA : return "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER";
        case 0x92CB : return "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER";
        case 0x92CC : return "GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS";
        case 0x92CD : return "GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS";
        case 0x92CE : return "GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS";
        case 0x92CF : return "GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS";
        case 0x92D0 : return "GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS";
        case 0x92D1 : return "GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS";
        case 0x92D2 : return "GL_MAX_VERTEX_ATOMIC_COUNTERS";
        case 0x92D3 : return "GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS";
        case 0x92D4 : return "GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS";
        case 0x92D5 : return "GL_MAX_GEOMETRY_ATOMIC_COUNTERS";
        case 0x92D6 : return "GL_MAX_FRAGMENT_ATOMIC_COUNTERS";
        case 0x92D7 : return "GL_MAX_COMBINED_ATOMIC_COUNTERS";
        case 0x92D8 : return "GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE";
        case 0x92D9 : return "GL_ACTIVE_ATOMIC_COUNTER_BUFFERS";
        case 0x92DA : return "GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX";
        case 0x92DB : return "GL_UNSIGNED_INT_ATOMIC_COUNTER";
        case 0x92DC : return "GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS";
        case 0x92DD : return "GL_FRAGMENT_COVERAGE_TO_COLOR_NV";
        case 0x92DE : return "GL_FRAGMENT_COVERAGE_COLOR_NV";
        case 0x92DF : return "GL_MESH_OUTPUT_PER_VERTEX_GRANULARITY_NV";
        case 0x92E0 : return "GL_DEBUG_OUTPUT";
        case 0x92E1 : return "GL_UNIFORM";
        case 0x92E2 : return "GL_UNIFORM_BLOCK";
        case 0x92E3 : return "GL_PROGRAM_INPUT";
        case 0x92E4 : return "GL_PROGRAM_OUTPUT";
        case 0x92E5 : return "GL_BUFFER_VARIABLE";
        case 0x92E6 : return "GL_SHADER_STORAGE_BLOCK";
        case 0x92E7 : return "GL_IS_PER_PATCH";
        case 0x92E8 : return "GL_VERTEX_SUBROUTINE";
        case 0x92E9 : return "GL_TESS_CONTROL_SUBROUTINE";
        case 0x92EA : return "GL_TESS_EVALUATION_SUBROUTINE";
        case 0x92EB : return "GL_GEOMETRY_SUBROUTINE";
        case 0x92EC : return "GL_FRAGMENT_SUBROUTINE";
        case 0x92ED : return "GL_COMPUTE_SUBROUTINE";
        case 0x92EE : return "GL_VERTEX_SUBROUTINE_UNIFORM";
        case 0x92EF : return "GL_TESS_CONTROL_SUBROUTINE_UNIFORM";
        case 0x92F0 : return "GL_TESS_EVALUATION_SUBROUTINE_UNIFORM";
        case 0x92F1 : return "GL_GEOMETRY_SUBROUTINE_UNIFORM";
        case 0x92F2 : return "GL_FRAGMENT_SUBROUTINE_UNIFORM";
        case 0x92F3 : return "GL_COMPUTE_SUBROUTINE_UNIFORM";
        case 0x92F4 : return "GL_TRANSFORM_FEEDBACK_VARYING";
        case 0x92F5 : return "GL_ACTIVE_RESOURCES";
        case 0x92F6 : return "GL_MAX_NAME_LENGTH";
        case 0x92F7 : return "GL_MAX_NUM_ACTIVE_VARIABLES";
        case 0x92F8 : return "GL_MAX_NUM_COMPATIBLE_SUBROUTINES";
        case 0x92F9 : return "GL_NAME_LENGTH";
        case 0x92FA : return "GL_TYPE";
        case 0x92FB : return "GL_ARRAY_SIZE";
        case 0x92FC : return "GL_OFFSET";
        case 0x92FD : return "GL_BLOCK_INDEX";
        case 0x92FE : return "GL_ARRAY_STRIDE";
        case 0x92FF : return "GL_MATRIX_STRIDE";
        case 0x9300 : return "GL_IS_ROW_MAJOR";
        case 0x9301 : return "GL_ATOMIC_COUNTER_BUFFER_INDEX";
        case 0x9302 : return "GL_BUFFER_BINDING";
        case 0x9303 : return "GL_BUFFER_DATA_SIZE";
        case 0x9304 : return "GL_NUM_ACTIVE_VARIABLES";
        case 0x9305 : return "GL_ACTIVE_VARIABLES";
        case 0x9306 : return "GL_REFERENCED_BY_VERTEX_SHADER";
        case 0x9307 : return "GL_REFERENCED_BY_TESS_CONTROL_SHADER";
        case 0x9308 : return "GL_REFERENCED_BY_TESS_EVALUATION_SHADER";
        case 0x9309 : return "GL_REFERENCED_BY_GEOMETRY_SHADER";
        case 0x930A : return "GL_REFERENCED_BY_FRAGMENT_SHADER";
        case 0x930B : return "GL_REFERENCED_BY_COMPUTE_SHADER";
        case 0x930C : return "GL_TOP_LEVEL_ARRAY_SIZE";
        case 0x930D : return "GL_TOP_LEVEL_ARRAY_STRIDE";
        case 0x930E : return "GL_LOCATION";
        case 0x930F : return "GL_LOCATION_INDEX";
        case 0x9310 : return "GL_FRAMEBUFFER_DEFAULT_WIDTH";
        case 0x9311 : return "GL_FRAMEBUFFER_DEFAULT_HEIGHT";
        case 0x9312 : return "GL_FRAMEBUFFER_DEFAULT_LAYERS";
        case 0x9313 : return "GL_FRAMEBUFFER_DEFAULT_SAMPLES";
        case 0x9314 : return "GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS";
        case 0x9315 : return "GL_MAX_FRAMEBUFFER_WIDTH";
        case 0x9316 : return "GL_MAX_FRAMEBUFFER_HEIGHT";
        case 0x9317 : return "GL_MAX_FRAMEBUFFER_LAYERS";
        case 0x9318 : return "GL_MAX_FRAMEBUFFER_SAMPLES";
        case 0x9327 : return "GL_RASTER_MULTISAMPLE_EXT";
        case 0x9328 : return "GL_RASTER_SAMPLES_EXT";
        case 0x9329 : return "GL_MAX_RASTER_SAMPLES_EXT";
        case 0x932A : return "GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT";
        case 0x932B : return "GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT";
        case 0x932C : return "GL_EFFECTIVE_RASTER_SAMPLES_EXT";
        case 0x932D : return "GL_DEPTH_SAMPLES_NV";
        case 0x932E : return "GL_STENCIL_SAMPLES_NV";
        case 0x932F : return "GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV";
        case 0x9330 : return "GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV";
        case 0x9331 : return "GL_COVERAGE_MODULATION_TABLE_NV";
        case 0x9332 : return "GL_COVERAGE_MODULATION_NV";
        case 0x9333 : return "GL_COVERAGE_MODULATION_TABLE_SIZE_NV";
        case 0x9339 : return "GL_WARP_SIZE_NV";
        case 0x933A : return "GL_WARPS_PER_SM_NV";
        case 0x933B : return "GL_SM_COUNT_NV";
        case 0x933C : return "GL_FILL_RECTANGLE_NV";
        case 0x933D : return "GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV";
        case 0x933E : return "GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV";
        case 0x933F : return "GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV";
        case 0x9340 : return "GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV";
        case 0x9341 : return "GL_PROGRAMMABLE_SAMPLE_LOCATION_NV";
        case 0x9342 : return "GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV";
        case 0x9343 : return "GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV";
        case 0x9346 : return "GL_CONSERVATIVE_RASTERIZATION_NV";
        case 0x9347 : return "GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV";
        case 0x9348 : return "GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV";
        case 0x9349 : return "GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV";
        case 0x934A : return "GL_LOCATION_COMPONENT";
        case 0x934B : return "GL_TRANSFORM_FEEDBACK_BUFFER_INDEX";
        case 0x934C : return "GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE";
        case 0x934D : return "GL_ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV";
        case 0x934E : return "GL_ALPHA_TO_COVERAGE_DITHER_ENABLE_NV";
        case 0x934F : return "GL_ALPHA_TO_COVERAGE_DITHER_DISABLE_NV";
        case 0x9350 : return "GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV";
        case 0x9351 : return "GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV";
        case 0x9352 : return "GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV";
        case 0x9353 : return "GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV";
        case 0x9354 : return "GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV";
        case 0x9355 : return "GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV";
        case 0x9356 : return "GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV";
        case 0x9357 : return "GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV";
        case 0x9358 : return "GL_VIEWPORT_SWIZZLE_X_NV";
        case 0x9359 : return "GL_VIEWPORT_SWIZZLE_Y_NV";
        case 0x935A : return "GL_VIEWPORT_SWIZZLE_Z_NV";
        case 0x935B : return "GL_VIEWPORT_SWIZZLE_W_NV";
        case 0x935C : return "GL_CLIP_ORIGIN";
        case 0x935D : return "GL_CLIP_DEPTH_MODE";
        case 0x935E : return "GL_NEGATIVE_ONE_TO_ONE";
        case 0x935F : return "GL_ZERO_TO_ONE";
        case 0x9365 : return "GL_CLEAR_TEXTURE";
        case 0x9366 : return "GL_TEXTURE_REDUCTION_MODE_EXT";
        case 0x9367 : return "GL_WEIGHTED_AVERAGE_EXT";
        case 0x9368 : return "GL_FONT_GLYPHS_AVAILABLE_NV";
        case 0x9369 : return "GL_FONT_TARGET_UNAVAILABLE_NV";
        case 0x936A : return "GL_FONT_UNAVAILABLE_NV";
        case 0x936B : return "GL_FONT_UNINTELLIGIBLE_NV";
        case 0x936C : return "GL_STANDARD_FONT_FORMAT_NV";
        case 0x936D : return "GL_FRAGMENT_INPUT_NV";
        case 0x936E : return "GL_UNIFORM_BUFFER_UNIFIED_NV";
        case 0x936F : return "GL_UNIFORM_BUFFER_ADDRESS_NV";
        case 0x9370 : return "GL_UNIFORM_BUFFER_LENGTH_NV";
        case 0x9371 : return "GL_MULTISAMPLES_NV";
        case 0x9372 : return "GL_SUPERSAMPLE_SCALE_X_NV";
        case 0x9373 : return "GL_SUPERSAMPLE_SCALE_Y_NV";
        case 0x9374 : return "GL_CONFORMANT_NV";
        case 0x9379 : return "GL_CONSERVATIVE_RASTER_DILATE_NV";
        case 0x937A : return "GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV";
        case 0x937B : return "GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV";
        case 0x937C : return "GL_VIEWPORT_POSITION_W_SCALE_NV";
        case 0x937D : return "GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV";
        case 0x937E : return "GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV";
        case 0x937F : return "GL_REPRESENTATIVE_FRAGMENT_TEST_NV";
        case 0x9380 : return "GL_NUM_SAMPLE_COUNTS";
        case 0x9383 : return "GL_VIEW_CLASS_EAC_R11";
        case 0x9384 : return "GL_VIEW_CLASS_EAC_RG11";
        case 0x9385 : return "GL_VIEW_CLASS_ETC2_RGB";
        case 0x9386 : return "GL_VIEW_CLASS_ETC2_RGBA";
        case 0x9387 : return "GL_VIEW_CLASS_ETC2_EAC_RGBA";
        case 0x9388 : return "GL_VIEW_CLASS_ASTC_4x4_RGBA";
        case 0x9389 : return "GL_VIEW_CLASS_ASTC_5x4_RGBA";
        case 0x938A : return "GL_VIEW_CLASS_ASTC_5x5_RGBA";
        case 0x938B : return "GL_VIEW_CLASS_ASTC_6x5_RGBA";
        case 0x938C : return "GL_VIEW_CLASS_ASTC_6x6_RGBA";
        case 0x938D : return "GL_VIEW_CLASS_ASTC_8x5_RGBA";
        case 0x938E : return "GL_VIEW_CLASS_ASTC_8x6_RGBA";
        case 0x938F : return "GL_VIEW_CLASS_ASTC_8x8_RGBA";
        case 0x9390 : return "GL_VIEW_CLASS_ASTC_1";
        case 0x9391 : return "GL_VIEW_CLASS_ASTC_1";
        case 0x9392 : return "GL_VIEW_CLASS_ASTC_1";
        case 0x9394 : return "GL_VIEW_CLASS_ASTC_12x10_RGBA";
        case 0x9395 : return "GL_VIEW_CLASS_ASTC_12x12_RGBA";
        case 0x93A1 : return "GL_BGRA8_EXT";
        case 0x93B0 : return "GL_COMPRESSED_RGBA_ASTC_4x4_KHR";
        case 0x93B1 : return "GL_COMPRESSED_RGBA_ASTC_5x4_KHR";
        case 0x93B2 : return "GL_COMPRESSED_RGBA_ASTC_5x5_KHR";
        case 0x93B3 : return "GL_COMPRESSED_RGBA_ASTC_6x5_KHR";
        case 0x93B4 : return "GL_COMPRESSED_RGBA_ASTC_6x6_KHR";
        case 0x93B5 : return "GL_COMPRESSED_RGBA_ASTC_8x5_KHR";
        case 0x93B6 : return "GL_COMPRESSED_RGBA_ASTC_8x6_KHR";
        case 0x93B7 : return "GL_COMPRESSED_RGBA_ASTC_8x8_KHR";
        case 0x93B8 : return "GL_COMPRESSED_RGBA_ASTC_1";
        case 0x93B9 : return "GL_COMPRESSED_RGBA_ASTC_1";
        case 0x93BA : return "GL_COMPRESSED_RGBA_ASTC_1";
        case 0x93BC : return "GL_COMPRESSED_RGBA_ASTC_12x10_KHR";
        case 0x93BD : return "GL_COMPRESSED_RGBA_ASTC_12x12_KHR";
        case 0x93D0 : return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR";
        case 0x93D1 : return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR";
        case 0x93D2 : return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR";
        case 0x93D3 : return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR";
        case 0x93D4 : return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR";
        case 0x93D5 : return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR";
        case 0x93D6 : return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR";
        case 0x93D7 : return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR";
        case 0x93D8 : return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_1";
        case 0x93D9 : return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_1";
        case 0x93DA : return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_1";
        case 0x93DC : return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR";
        case 0x93DD : return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR";
        case 0x94F0 : return "GL_PERFQUERY_COUNTER_EVENT_INTEL";
        case 0x94F1 : return "GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL";
        case 0x94F2 : return "GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL";
        case 0x94F3 : return "GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL";
        case 0x94F4 : return "GL_PERFQUERY_COUNTER_RAW_INTEL";
        case 0x94F5 : return "GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL";
        case 0x94F8 : return "GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL";
        case 0x94F9 : return "GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL";
        case 0x94FA : return "GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL";
        case 0x94FB : return "GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL";
        case 0x94FC : return "GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL";
        case 0x94FD : return "GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL";
        case 0x94FE : return "GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL";
        case 0x94FF : return "GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL";
        case 0x9500 : return "GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL";
        case 0x9530 : return "GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT";
        case 0x9531 : return "GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT";
        case 0x9532 : return "GL_SUBGROUP_SIZE_KHR";
        case 0x9533 : return "GL_SUBGROUP_SUPPORTED_STAGES_KHR";
        case 0x9534 : return "GL_SUBGROUP_SUPPORTED_FEATURES_KHR";
        case 0x9535 : return "GL_SUBGROUP_QUAD_ALL_STAGES_KHR";
        case 0x9536 : return "GL_MAX_MESH_TOTAL_MEMORY_SIZE_NV";
        case 0x9537 : return "GL_MAX_TASK_TOTAL_MEMORY_SIZE_NV";
        case 0x9538 : return "GL_MAX_MESH_OUTPUT_VERTICES_NV";
        case 0x9539 : return "GL_MAX_MESH_OUTPUT_PRIMITIVES_NV";
        case 0x953A : return "GL_MAX_TASK_OUTPUT_COUNT_NV";
        case 0x953B : return "GL_MAX_MESH_WORK_GROUP_SIZE_NV";
        case 0x953C : return "GL_MAX_TASK_WORK_GROUP_SIZE_NV";
        case 0x953D : return "GL_MAX_DRAW_MESH_TASKS_COUNT_NV";
        case 0x953E : return "GL_MESH_WORK_GROUP_SIZE_NV";
        case 0x953F : return "GL_TASK_WORK_GROUP_SIZE_NV";
        case 0x9540 : return "GL_QUERY_RESOURCE_TYPE_VIDMEM_ALLOC_NV";
        case 0x9542 : return "GL_QUERY_RESOURCE_MEMTYPE_VIDMEM_NV";
        case 0x9543 : return "GL_MESH_OUTPUT_PER_PRIMITIVE_GRANULARITY_NV";
        case 0x9544 : return "GL_QUERY_RESOURCE_SYS_RESERVED_NV";
        case 0x9545 : return "GL_QUERY_RESOURCE_TEXTURE_NV";
        case 0x9546 : return "GL_QUERY_RESOURCE_RENDERBUFFER_NV";
        case 0x9547 : return "GL_QUERY_RESOURCE_BUFFEROBJECT_NV";
        case 0x9548 : return "GL_PER_GPU_STORAGE_NV";
        case 0x9549 : return "GL_MULTICAST_PROGRAMMABLE_SAMPLE_LOCATION_NV";
        case 0x954A : return "GL_UPLOAD_GPU_MASK_NVX";
        case 0x954D : return "GL_CONSERVATIVE_RASTER_MODE_NV";
        case 0x954E : return "GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV";
        case 0x954F : return "GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV";
        case 0x9550 : return "GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV";
        case 0x9551 : return "GL_SHADER_BINARY_FORMAT_SPIR_V";
        case 0x9552 : return "GL_SPIR_V_BINARY";
        case 0x9553 : return "GL_SPIR_V_EXTENSIONS";
        case 0x9554 : return "GL_NUM_SPIR_V_EXTENSIONS";
        case 0x9555 : return "GL_SCISSOR_TEST_EXCLUSIVE_NV";
        case 0x9556 : return "GL_SCISSOR_BOX_EXCLUSIVE_NV";
        case 0x9557 : return "GL_MAX_MESH_VIEWS_NV";
        case 0x9558 : return "GL_RENDER_GPU_MASK_NV";
        case 0x9559 : return "GL_MESH_SHADER_NV";
        case 0x955A : return "GL_TASK_SHADER_NV";
        case 0x955B : return "GL_SHADING_RATE_IMAGE_BINDING_NV";
        case 0x955C : return "GL_SHADING_RATE_IMAGE_TEXEL_WIDTH_NV";
        case 0x955D : return "GL_SHADING_RATE_IMAGE_TEXEL_HEIGHT_NV";
        case 0x955E : return "GL_SHADING_RATE_IMAGE_PALETTE_SIZE_NV";
        case 0x955F : return "GL_MAX_COARSE_FRAGMENT_SAMPLES_NV";
        case 0x9563 : return "GL_SHADING_RATE_IMAGE_NV";
        case 0x9564 : return "GL_SHADING_RATE_NO_INVOCATIONS_NV";
        case 0x9565 : return "GL_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV";
        case 0x9566 : return "GL_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV";
        case 0x9567 : return "GL_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV";
        case 0x9568 : return "GL_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV";
        case 0x9569 : return "GL_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV";
        case 0x956A : return "GL_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV";
        case 0x956B : return "GL_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV";
        case 0x956C : return "GL_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV";
        case 0x956D : return "GL_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV";
        case 0x956E : return "GL_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV";
        case 0x956F : return "GL_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV";
        case 0x9579 : return "GL_MESH_VERTICES_OUT_NV";
        case 0x957A : return "GL_MESH_PRIMITIVES_OUT_NV";
        case 0x957B : return "GL_MESH_OUTPUT_TYPE_NV";
        case 0x957C : return "GL_MESH_SUBROUTINE_NV";
        case 0x957D : return "GL_TASK_SUBROUTINE_NV";
        case 0x957E : return "GL_MESH_SUBROUTINE_UNIFORM_NV";
        case 0x957F : return "GL_TASK_SUBROUTINE_UNIFORM_NV";
        case 0x9580 : return "GL_TEXTURE_TILING_EXT";
        case 0x9581 : return "GL_DEDICATED_MEMORY_OBJECT_EXT";
        case 0x9582 : return "GL_NUM_TILING_TYPES_EXT";
        case 0x9583 : return "GL_TILING_TYPES_EXT";
        case 0x9584 : return "GL_OPTIMAL_TILING_EXT";
        case 0x9585 : return "GL_LINEAR_TILING_EXT";
        case 0x9586 : return "GL_HANDLE_TYPE_OPAQUE_FD_EXT";
        case 0x9587 : return "GL_HANDLE_TYPE_OPAQUE_WIN32_EXT";
        case 0x9588 : return "GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT";
        case 0x9589 : return "GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT";
        case 0x958A : return "GL_HANDLE_TYPE_D3D12_RESOURCE_EXT";
        case 0x958B : return "GL_HANDLE_TYPE_D3D11_IMAGE_EXT";
        case 0x958C : return "GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT";
        case 0x958D : return "GL_LAYOUT_GENERAL_EXT";
        case 0x958E : return "GL_LAYOUT_COLOR_ATTACHMENT_EXT";
        case 0x958F : return "GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT";
        case 0x9590 : return "GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT";
        case 0x9591 : return "GL_LAYOUT_SHADER_READ_ONLY_EXT";
        case 0x9592 : return "GL_LAYOUT_TRANSFER_SRC_EXT";
        case 0x9593 : return "GL_LAYOUT_TRANSFER_DST_EXT";
        case 0x9594 : return "GL_HANDLE_TYPE_D3D12_FENCE_EXT";
        case 0x9595 : return "GL_D3D12_FENCE_VALUE_EXT";
        case 0x9596 : return "GL_NUM_DEVICE_UUIDS_EXT";
        case 0x9597 : return "GL_DEVICE_UUID_EXT";
        case 0x9598 : return "GL_DRIVER_UUID_EXT";
        case 0x9599 : return "GL_DEVICE_LUID_EXT";
        case 0x959A : return "GL_DEVICE_NODE_MASK_EXT";
        case 0x959B : return "GL_PROTECTED_MEMORY_OBJECT_EXT";
        case 0x959C : return "GL_UNIFORM_BLOCK_REFERENCED_BY_MESH_SHADER_NV";
        case 0x959D : return "GL_UNIFORM_BLOCK_REFERENCED_BY_TASK_SHADER_NV";
        case 0x959E : return "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_MESH_SHADER_NV";
        case 0x959F : return "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TASK_SHADER_NV";
        case 0x95A0 : return "GL_REFERENCED_BY_MESH_SHADER_NV";
        case 0x95A1 : return "GL_REFERENCED_BY_TASK_SHADER_NV";
        case 0x95A2 : return "GL_MAX_MESH_WORK_GROUP_INVOCATIONS_NV";
        case 0x95A3 : return "GL_MAX_TASK_WORK_GROUP_INVOCATIONS_NV";
        case 0x95A4 : return "GL_ATTACHED_MEMORY_OBJECT_NV";
        case 0x95A5 : return "GL_ATTACHED_MEMORY_OFFSET_NV";
        case 0x95A6 : return "GL_MEMORY_ATTACHABLE_ALIGNMENT_NV";
        case 0x95A7 : return "GL_MEMORY_ATTACHABLE_SIZE_NV";
        case 0x95A8 : return "GL_MEMORY_ATTACHABLE_NV";
        case 0x95A9 : return "GL_DETACHED_MEMORY_INCARNATION_NV";
        case 0x95AA : return "GL_DETACHED_TEXTURES_NV";
        case 0x95AB : return "GL_DETACHED_BUFFERS_NV";
        case 0x95AC : return "GL_MAX_DETACHED_TEXTURES_NV";
        case 0x95AD : return "GL_MAX_DETACHED_BUFFERS_NV";
        case 0x95AE : return "GL_SHADING_RATE_SAMPLE_ORDER_DEFAULT_NV";
        case 0x95AF : return "GL_SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV";
        case 0x95B0 : return "GL_SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV";
        case 0x95B1 : return "GL_SHADING_RATE_IMAGE_PER_PRIMITIVE_NV";
        case 0x95B2 : return "GL_SHADING_RATE_IMAGE_PALETTE_COUNT_NV";
        case 0x95B3 : return "GL_SEMAPHORE_TYPE_NV";
        case 0x95B4 : return "GL_SEMAPHORE_TYPE_BINARY_NV";
        case 0x95B5 : return "GL_SEMAPHORE_TYPE_TIMELINE_NV";
        case 0x95B6 : return "GL_MAX_TIMELINE_SEMAPHORE_VALUE_DIFFERENCE_NV";
        case 0x9630 : return "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR";
        case 0x9631 : return "GL_MAX_VIEWS_OVR";
        case 0x9632 : return "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR";
        case 0x9633 : return "GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR";
    }
}

} // namespace gl